(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(145)),o={title:"Platform Docs"},s={unversionedId:"platform",id:"platform",isDocsHomePage:!1,title:"Platform Docs",description:"Connecting Source Applications",source:"@site/docs/platform.md",slug:"/platform",permalink:"/documentation/platform",editUrl:"https://github.com/openfn/docs/edit/main/docs/platform.md",version:"current",sidebar:"docs",previous:{title:"Quick-start",permalink:"/documentation/quick-start"},next:{title:"Troubleshooting",permalink:"/documentation/trouble-shooting"}},l=[{value:"Connecting Source Applications",id:"connecting-source-applications",children:[{value:"Inbox Security",id:"inbox-security",children:[]}]},{value:"Creating a compatible notifications service",id:"creating-a-compatible-notifications-service",children:[]},{value:"Triggers",id:"triggers",children:[{value:"Message Filter Triggers",id:"message-filter-triggers",children:[]},{value:"Cron Triggers (formerly timers)",id:"cron-triggers-formerly-timers",children:[]},{value:"Flow Triggers",id:"flow-triggers",children:[]},{value:"Fail Triggers",id:"fail-triggers",children:[]},{value:"Filter Matching in Detail",id:"filter-matching-in-detail",children:[]},{value:"Processing cron jobs",id:"processing-cron-jobs",children:[]}]},{value:"Credentials",id:"credentials",children:[{value:"Raw Credentials",id:"raw-credentials",children:[]},{value:"Keychain Credentials",id:"keychain-credentials",children:[]}]},{value:"Jobs",id:"jobs",children:[{value:"Composing Job Expressions",id:"composing-job-expressions",children:[]},{value:"Available Javascript Globals",id:"available-javascript-globals",children:[]},{value:"Named Functions",id:"named-functions",children:[]}]},{value:"Inbox",id:"inbox",children:[{value:"Filter messages in your inbox",id:"filter-messages-in-your-inbox",children:[]},{value:"Bulk reprocess messages",id:"bulk-reprocess-messages",children:[]},{value:"Export messages to CSV",id:"export-messages-to-csv",children:[]}]},{value:"Activity",id:"activity",children:[{value:"Runs",id:"runs",children:[]},{value:"Filter runs in the Activity view",id:"filter-runs-in-the-activity-view",children:[]},{value:"Bulk retry runs",id:"bulk-retry-runs",children:[]},{value:"Export runs to CSV",id:"export-runs-to-csv",children:[]}]},{value:"GitHub version control",id:"github-version-control",children:[{value:"Motivation",id:"motivation",children:[]},{value:"Setup Steps",id:"setup-steps",children:[]},{value:"Advanced Version Control",id:"advanced-version-control",children:[]}]}],c={toc:l};function b(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"connecting-source-applications"},"Connecting Source Applications"),Object(i.b)("p",null,"Most modern web applications have a feature that allows you to ",Object(i.b)("inlineCode",{parentName:"p"},"push"),",\n",Object(i.b)("inlineCode",{parentName:"p"},"publish"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"post")," data to another URL when a certain ",Object(i.b)("strong",{parentName:"p"},"event")," takes place.\nThis event could be a form submission, mobile payment, patient registration, or\nbarcode scan submission from a mobile app. The key is that your source\napplication will notify OpenFn when ",Object(i.b)("em",{parentName:"p"},"something happens"),"."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},'Go to the "settings" or "administration" page for your source app, and look\nfor a ',Object(i.b)("inlineCode",{parentName:"p"},"Webhook API"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Data Forwarding API"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"Notifications API"),". Write to\nthe developers of your application if none is provided out of the box.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"When setting up forwarding, select to send messages in ",Object(i.b)("inlineCode",{parentName:"p"},"JSON")," to your\nproject's ",Object(i.b)("inlineCode",{parentName:"p"},"inbox URL"),'. This is a UUID that serves as your API token. You can\nfind and copy your secure inbox URL by clicking on the "copy URL" link in the\nbottom-right corner of the project in question on your\n',Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",Object(a.a)({parentName:"strong"},{href:"https://www.openfn.org/projects"}),"project dashboard")),' page or by using the\n"Copy URL" button on your project\'s "Inbox" page.')),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Soon you'll see new messages arrive in your ",Object(i.b)("strong",{parentName:"p"},"Inbox"),"."))),Object(i.b)("p",null,"See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.openfn.org/source-apps.html"}),"Connecting Data Sources")," for specific\ninstructions for connecting common applications."),Object(i.b)("h3",{id:"inbox-security"},"Inbox Security"),Object(i.b)("p",null,'OpenFn project administrators can choose to configure additional authentication\nfor any inbound requests made to the project\'s inbox URL. In the "Access &\nSecurity" page of their OpenFn project, Administrators can choose from API Key\nand Basic Auth types, which will prompt administrators to either generate an API\ntoken or to setup a username:password credential. Once this inbox authentication\nis configured, any HTTP requests made to the OpenFn Inbox URL must include\neither this token or username:password in the request header. ',Object(i.b)("img",{alt:"inbox security",src:n(262).default})),Object(i.b)("h4",{id:"rotating-auth-methods"},"Rotating auth methods"),Object(i.b)("p",null,"Because more than one auth method may be accepted at a given time, some\norganizations choose to periodically rotate their auth methods for extra\nsecurity and can do so without disrupting live production integrations. To\nrotate your inbox auth methods:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a ",Object(i.b)("em",{parentName:"li"},"second")," valid auth method with a new token or user:pass combination."),Object(i.b)("li",{parentName:"ol"},"Provide that token to your external systems so that they can start using it\nin their webhooks/requests to OpenFn."),Object(i.b)("li",{parentName:"ol"},"Once you are certain that all external services are now using the new auth\ntoken, ",Object(i.b)("em",{parentName:"li"},"revoke")," the old auth token.")),Object(i.b)("p",null,"You can repeat this process as frequently as is required by your organization's\ninternal security protocols."),Object(i.b)("h2",{id:"creating-a-compatible-notifications-service"},"Creating a compatible notifications service"),Object(i.b)("p",null,"If you are a developer, looking to set up a compatible notifications API for\nOpenFn, please see our\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.openfn.org/for-devs.html"}),"Application Developers")," section."),Object(i.b)("h2",{id:"triggers"},"Triggers"),Object(i.b)("p",null,"Triggers ",Object(i.b)("em",{parentName:"p"},"start"),' jobs running. They come in 4 types. The most common are\n"message filter" triggers, but there are also "cron" triggers, "flow" triggers,\nand "fail" triggers.'),Object(i.b)("h3",{id:"message-filter-triggers"},"Message Filter Triggers"),Object(i.b)("p",null,"Message Filter triggers watch for inbound messages and check to see if the data\nin those message match their ",Object(i.b)("strong",{parentName:"p"},"criteria"),". If they do, and there is an active\njob configured to use that trigger, a run will be started."),Object(i.b)("p",null,"You, as a user, specify the filter ",Object(i.b)("strong",{parentName:"p"},"criteria")," which determines which inbound\nmessages should trigger job runs. This means that if any segment of a message\nbody ",Object(i.b)("strong",{parentName:"p"},"matches")," the string of ",Object(i.b)("inlineCode",{parentName:"p"},"JSON")," you gave as a filter, the filter will run\nand trigger a job (assuming you created one)."),Object(i.b)("p",null,"The filter criteria takes the form of a string of valid ",Object(i.b)("inlineCode",{parentName:"p"},"JSON"),". In a SQL query,\nthis string will be used in the WHERE clause, for example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql"}),'SELECT * FROM receipts\n  WHERE body::jsonb @>\n    \'{"Name":"Aleksa Iwobi"}\'::jsonb;\n')),Object(i.b)("p",null,"There is a more detailed explanation of filter matching below."),Object(i.b)("h3",{id:"cron-triggers-formerly-timers"},"Cron Triggers (formerly timers)"),Object(i.b)("p",null,"Cron triggers run jobs based on a cron scheuled. They can run as frequently as\nonce every minutes, or as infrequently as you desire and can be scheuled on very\nspecific dates or times. Each time a timed job succeeds, its ",Object(i.b)("inlineCode",{parentName:"p"},"final_state")," will\nbe saved and used as the ",Object(i.b)("inlineCode",{parentName:"p"},"initial_state"),' for its next run. See "Managing state"\nand "Keeping a cursor" below for implementation help.'),Object(i.b)("p",null,"The best way to learn about ",Object(i.b)("inlineCode",{parentName:"p"},"cron"),", if you're not already familiar, is through\nthe OpenFn interface or"),Object(i.b)("a",{href:"https://crontab.guru",target:"_blank"},"crontab.guru"),".",Object(i.b)("h3",{id:"flow-triggers"},"Flow Triggers"),Object(i.b)("p",null,"Flow triggers will execute a job ",Object(i.b)("em",{parentName:"p"},"after")," another specified job finishes\nsuccessfully. E.g., a flow trigger which specifies the succesful run of Job A\ncan be used by Job B. Each time Job A succeeds, Job B will start to run with the\n",Object(i.b)("inlineCode",{parentName:"p"},"final_state")," of Job A as its ",Object(i.b)("inlineCode",{parentName:"p"},"initial_state"),"."),Object(i.b)("h3",{id:"fail-triggers"},"Fail Triggers"),Object(i.b)("p",null,'Fail, or "catch", triggers work just like flow triggers, except that they watch\nfor the failure, rather than the success, of a specified job. (E.g., Job A pays\na CHW via MPESA. If Job A ',Object(i.b)("em",{parentName:"p"},"fails")," we should initiate Job B, which sends an SMS\nto the district manager instructing them to manually pay the CHW.)"),Object(i.b)("h3",{id:"filter-matching-in-detail"},"Filter Matching in Detail"),Object(i.b)("p",null,"To illustrate filter matching, refer to the ",Object(i.b)("inlineCode",{parentName:"p"},"JSON"),' strings below. Message "a"\nwill match filter \'1\', but message "b" will not.'),Object(i.b)("h4",{id:"filter-1"},"Filter 1"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{ "formID": "patient_registration_v7" }\n')),Object(i.b)("h4",{id:"message-a-match"},"Message a (MATCH)"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "submissionDate": "2016-01-15",\n  "formID": "patient_registration_v7",\n  "name": "Jack Wilshere",\n  "dob": "1986-05-16",\n  "medications": ["anaphlene", "zaradood", "morphofast"]\n}\n')),Object(i.b)("h4",{id:"message-b-no-match"},"Message b (NO MATCH)"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "submissionDate": "2016-01-16",\n  "formID": "patient_registration_v8",\n  "name": "Larry Bird",\n  "dob": "1982-03-21",\n  "medications": ["anaphlene", "zaradood", "morphofast"]\n}\n')),Object(i.b)("p",null,"Message 'b' does not include ",Object(i.b)("inlineCode",{parentName:"p"},'"formID":"patient_registration_v7"')," and will not\nmatch filter '1'."),Object(i.b)("h4",{id:"keeping-a-cursor-in-state-for-timer-jobs"},"Keeping a cursor in ",Object(i.b)("inlineCode",{parentName:"h4"},"state")," for timer Jobs"),Object(i.b)("p",null,"Because many timer jobs require keeping some sort of record of their previous\nrun to modify their later actions, ",Object(i.b)("inlineCode",{parentName:"p"},"state"),' is passed between the runs. One\nexample might be keeping a "cursor" to select only new records from a database.\nWe\'d expect the following logic:'),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"job-1")," fetches patients from the database"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"job-1")," does something important with those patient records"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"job-1")," saves the ",Object(i.b)("inlineCode",{parentName:"li"},"id")," of the last successfully processed patient to\n",Object(i.b)("inlineCode",{parentName:"li"},"final_state")),Object(i.b)("li",{parentName:"ol"},"when ",Object(i.b)("inlineCode",{parentName:"li"},"job-1")," runs again, it fetches patients whose ",Object(i.b)("inlineCode",{parentName:"li"},"id")," is greater than the\n",Object(i.b)("inlineCode",{parentName:"li"},"id")," of the last successfully processed patient.")),Object(i.b)("p",null,"To achieve this you might write:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"fetchPatient({ type: 'referral', offset: state.lastId }, (state) => {\n  // Assuming the system returned an array of patients in the \"data\" key.\n  state.lastId = state.data.patients.sort((a, b) => b.id - a.id)[0];\n  return state;\n});\n")),Object(i.b)("p",null,"The initial offset will be ",Object(i.b)("inlineCode",{parentName:"p"},"null"),', but the subsequent runs will automatically\nonly fetch "new" patients.'),Object(i.b)("h4",{id:"managing-the-size-of-state-for-timer-jobs"},"Managing the size of ",Object(i.b)("inlineCode",{parentName:"h4"},"state")," for Timer Jobs"),Object(i.b)("p",null,"Since state is passed between each run of a timer job, if your job adds\nsomething new to state each time it runs, it may quickly become too large to be\npractically handled. Imagine if a server response were adding, via\n",Object(i.b)("inlineCode",{parentName:"p"},"array.push(...)"),", to ",Object(i.b)("inlineCode",{parentName:"p"},"state.references")," each time the job ran. OpenFn supports\nup to 50,000 bytes (via Erlang's ",Object(i.b)("inlineCode",{parentName:"p"},"byte_size"),"), though most ",Object(i.b)("inlineCode",{parentName:"p"},"final_state")," byte\nsizes are between 100 and 1000."),Object(i.b)("p",null,"If the size of your ",Object(i.b)("inlineCode",{parentName:"p"},"final_state")," exceeds 10,000 bytes, OpenFn will send project\ncollaborators a warning email. If it exceeds 50,000 bytes, your run will still\nsucceed but its ",Object(i.b)("inlineCode",{parentName:"p"},"final_state")," will not be saved and the next time that job runs\nit will inherit the previous, un-updated final state. (I.e., the last state that\nwas < 50,000 bytes.)"),Object(i.b)("h5",{id:"a-quick-fix-for-final-state-bloat"},"A quick fix for final state bloat"),Object(i.b)("p",null,"Most often, final state bloat is due to improper handling of ",Object(i.b)("inlineCode",{parentName:"p"},"state.references"),"\nor ",Object(i.b)("inlineCode",{parentName:"p"},"state.data"),". This can be fixed by adding the following lines ",Object(i.b)("em",{parentName:"p"},"either")," to the\ncallback of your language-package's operation (if it allows for one) or by\nappending an ",Object(i.b)("inlineCode",{parentName:"p"},"alterState(...)")," operation after your operation."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"alterState((state) => {\n  state.custom = somethingIntentional;\n  state.data = {};\n  state.references = [];\n  return state;\n});\n")),Object(i.b)("h3",{id:"processing-cron-jobs"},"Processing cron jobs"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"On-demand processing for cron jobs.")," If you\u2019re leveraging cron triggers to\nrun jobs at specific times, you can also run that cron triggered job on demand.\nThis way you don\u2019t have to wait for the timer to expire before testing! Simply\nclick the process/ \u201cplay\u201d button now available via the Job, Run, and Activity\nHistory pages."),Object(i.b)("p",null,Object(i.b)("img",{alt:"Runs list run time trigger button",src:n(263).default})),Object(i.b)("p",null,Object(i.b)("img",{alt:"Run history time trigger button",src:n(264).default})),Object(i.b)("h2",{id:"credentials"},"Credentials"),Object(i.b)("p",null,"Credentials are used to authorize connections to destination systems. In the\nfuture, our adaptors will use credentials to fetch meta-data from source and\ndestination applications and make the job writing process easier."),Object(i.b)("p",null,'Some systems (Salesforce, OpenMRS, DHIS2) require an instanceUrl, host, or\nApiUrl. Leave off the final "/" in these Urls: ',Object(i.b)("inlineCode",{parentName:"p"},"https://login.salesforce.com")," or\n",Object(i.b)("inlineCode",{parentName:"p"},"http://demo.openmrs.org/openmrs")," or ",Object(i.b)("inlineCode",{parentName:"p"},"https://play.dhis2.org"),"."),Object(i.b)("p",null,'Credentials can only be viewed, or edited by a single user \u2014 their "owner" (or\nthe person that created that credential). All the collaborators on a particular\nproject can choose those credentials for use when defining a job.'),Object(i.b)("p",null,"There are two special types of credentials, in addition to the myriad standard\napplication-specific and authentication protocol-specific credentials."),Object(i.b)("h3",{id:"raw-credentials"},"Raw Credentials"),Object(i.b)("p",null,"Raw credentials are valid JSON documents which are passed into a job's runtime\nstate. Note that owners of these credentials will be able to view them, in their\nentirety, in the clear."),Object(i.b)("h3",{id:"keychain-credentials"},"Keychain Credentials"),Object(i.b)("p",null,"Keychain credentials allow for a single job to make use of multiple credentials.\nThey work by inspecting the data in the job's runtime state (i.e., ",Object(i.b)("inlineCode",{parentName:"p"},"state.data"),")\nand checking for the value of a predetermined identifier. Based on that value,\npresent in the data for a given source message, for example, ",Object(i.b)("em",{parentName:"p"},"another"),"\ncredential will be selected and applied for that particular job run."),Object(i.b)("h2",{id:"jobs"},"Jobs"),Object(i.b)("p",null,"A job defines the specific series of tasks or database actions to be performed\nwhen a triggering message is received (even-based) or a pre-scheduled (and\nrecurring) time is reached."),Object(i.b)("h3",{id:"composing-job-expressions"},"Composing Job Expressions"),Object(i.b)("p",null,"In most cases, a job expression is a series of ",Object(i.b)("inlineCode",{parentName:"p"},"create")," or ",Object(i.b)("inlineCode",{parentName:"p"},"upsert")," actions that\nare run after a message arrives, using data from that message. It could look\nlike this:"),Object(i.b)("h4",{id:"basic-job-expression"},"Basic Job Expression"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"create(\n  'Patient__c',\n  fields(field('Name', dataValue('form.surname')), field('Age__c', 7))\n);\n")),Object(i.b)("p",null,"That would create a new ",Object(i.b)("inlineCode",{parentName:"p"},"Patient__c")," in some other system. The patient's ",Object(i.b)("inlineCode",{parentName:"p"},"Name"),"\nwill be determined by the triggering message (the value inside ",Object(i.b)("inlineCode",{parentName:"p"},"form.surname"),",\nspecifically) and the patient's ",Object(i.b)("inlineCode",{parentName:"p"},"Age__c")," will ",Object(i.b)("em",{parentName:"p"},"always")," be 7. See how we hard\ncoded it?"),Object(i.b)("p",null,"What you see above is OpenFn's own syntax, and you've got access to dozens of\ncommon \"helper functions\" like ",Object(i.b)("inlineCode",{parentName:"p"},"dataValue(path)")," and destination specific\nfunctions like ",Object(i.b)("inlineCode",{parentName:"p"},"create(object,attributes)"),". While most cases are covered\nout-of-the-box, jobs are ",Object(i.b)("strong",{parentName:"p"},"evaluated as Javascript"),". This means that you can\nwrite your own custom, anonymous functions to do whatever your heart desires:"),Object(i.b)("h4",{id:"job-expression-with-custom-javascript"},"Job Expression with Custom Javascript"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"create(\n  'Patient__c',\n  fields(\n    field('Name', (state) => {\n      console.log('Manipulate state to get your desired output.');\n      return Array.apply(null, state.data.form.names).join(', ');\n    }),\n    field('Age__c', 7)\n  )\n);\n")),Object(i.b)("p",null,"Here, the patient's name will be a comma separated concatenation of all the\nvalues in the ",Object(i.b)("inlineCode",{parentName:"p"},"patient_names")," array from our source message."),Object(i.b)("h3",{id:"available-javascript-globals"},"Available Javascript Globals"),Object(i.b)("p",null,"For security reasons, users start with access to the following standard\nJavascript globals, and can request more by opening an issue on Github:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Array"),Object(i.b)("li",{parentName:"ul"},"console"),Object(i.b)("li",{parentName:"ul"},"JSON"),Object(i.b)("li",{parentName:"ul"},"Number"),Object(i.b)("li",{parentName:"ul"},"Promise"),Object(i.b)("li",{parentName:"ul"},"String")),Object(i.b)("p",null,"*","N.B. The runtime environment on the server is Node v6.17.0."),Object(i.b)("p",null,"Other than the expression tree, Jobs have certain attributes that must be set:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Filter")," - The message filter that will triggers the job."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Adaptor")," - The adaptor for the destination system you're connecting to."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Credential")," - The credential that will be used to gain access to that\ndestination system."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Active?")," - A boolean which determines whether the job runs in real-time\nwhen matching messages arrive.")),Object(i.b)("h3",{id:"named-functions"},"Named Functions"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"N.B.: This is just a sample.")," There are lots more available in the\nlanguage-packs."),Object(i.b)("h4",{id:"language-common"},"language-common"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"field('destination_field_name__c', 'value')")," Returns a key, value pair in an\narray.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L248"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"fields(list_of_fields)")," zips key value pairs into an object.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L258"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataValue('JSON_path')")," Picks out a single value from source data.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L71"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"each(JSON_path, operation(...))")," Scopes an array of data based on a JSONPath\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L194"}),"(source)"),".\nSee beta.each when using multiple each()'s in an expression."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'each(merge(dataPath("CHILD_ARRAY[*]"),fields(field("metaId", dataValue("*meta-instance-id*")),field("parentId", lastReferenceValue("id")))), create(...))'),"\nmerges data into an array then creates for each item in the array\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L272"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"lastReferenceValue('id')")," gets the sfID of the last item created\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L96-L100"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"function(state){return state.references[state.references.length-N].id})")," gets\nthe sfID of the nth item created")),Object(i.b)("h4",{id:"betaeachjson_path-operation"},Object(i.b)("inlineCode",{parentName:"h4"},"beta.each(JSON_path, operation(...))")),Object(i.b)("p",null,"Scopes an array of data based on a JSONPath but then returns to the state it was\ngiven upon completion\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/OpenFn/language-common/blob/master/src/beta.js#L44"}),"(source)"),".\nThis is necessary if you string multiple ",Object(i.b)("inlineCode",{parentName:"p"},"each(...)")," functions together in-line\nin the same expression. (E.g., Given data which has multiple separate 'repeat\ngroups' in a form which are rendered as arrays, you want to create new records\nfor each item inside the first repeat group, then ",Object(i.b)("em",{parentName:"p"},"RETURN TO THE TOP LEVEL")," of\nthe data, and then create new records for each item in the second repeat group.\nUsing ",Object(i.b)("inlineCode",{parentName:"p"},"beta.each(...)")," lets you enter the first array, create your records, then\nreturn to the top level and be able to enter the second array."),Object(i.b)("h4",{id:"salesforce"},"Salesforce"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'create("DEST_OBJECT_NAME__C", fields(...))')," Create a new object. Takes 2\nparameters: An object and attributes.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-salesforce/blob/master/src/Adaptor.js#L42-L63"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'upsert("DEST_OBJECT_NAME__C", "DEST_OBJECT_EXTERNAL_ID__C", fields(...))'),"\nCreates or updates an object. Takes 3 paraneters: An object, an ID field and\nattributes.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-salesforce/blob/master/src/Adaptor.js#L65-L80"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'relationship("DEST_RELATIONSHIP_NAME__r", "EXTERNAL_ID_ON_RELATED_OBJECT__C", "SOURCE_DATA_OR_VALUE")'),"\nAdds a lookup or 'dome insert' to a record.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-salesforce/blob/master/src/sourceHelpers.js#L21-L40"}),"(source)"))),Object(i.b)("h4",{id:"dhis2"},"dhis2"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"event(...)")," Creates an event.\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-dhis2/blob/master/src/Adaptor.js#L31-L60"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataValueSet(...)")," Send data values using the dataValueSets resource\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-dhis2/blob/master/src/Adaptor.js#L62-L82"}),"(source)"))),Object(i.b)("h4",{id:"openmrs"},"OpenMRS"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"person(...)")," Takes a payload of data to create a person\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-openmrs/blob/master/src/Adaptor.js#L31-L60"}),"(source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"patient(...)")," Takes a payload of data to create a patient\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/OpenFn/language-openmrs/blob/master/src/Adaptor.js#L62-L90"}),"(source)"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"For code block examples of job expressions, go to the\n",Object(i.b)("a",Object(a.a)({parentName:"strong"},{href:"/documentation/appendix"}),"code samples page"),".")),Object(i.b)("h2",{id:"inbox"},"Inbox"),Object(i.b)("p",null,"Your inbox contains the history of all messages that have passed in to your\nproject, which may or may not have triggered a specific job. Messages are stored\npayloads or data that were sent via HTTP post to your inbox. They can be viewed\nin formatted JSON, edited, or manually processed (if they did not match a filter\nwhen they were originally delivered.)"),Object(i.b)("p",null,'To edit a message, click the "pencil and paper" icon next to that receipt. Be\ncareful, as no original copy will be persisted.'),Object(i.b)("h3",{id:"filter-messages-in-your-inbox"},"Filter messages in your inbox"),Object(i.b)("p",null,"To help you more quickly find relevant messages, you can now filter your inbox\nby:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Body Text")," - Search your messages for specific text (e.g., find surveys\nthat contain \u201cIndia\u201d in the body). As individual projects may have millions of\nmessages containing tens of thousands of lines of JSON each, we\u2019ve implemented\na \u201ctsvector\u201d search strategy. Please be patient and note that this text-based\nsearch may take a moment to return results.. If you\u2019re curious about how\ntsvector works from a technical perspective, check out the\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.postgresql.org/docs/10/datatype-textsearch.html#DATATYPE-TSVECTOR"}),"official documentation"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Date")," - Choose a relative date range (e.g., \u201cLast 90 Days\u201d) or define a\ncustom date range yourself. Note that the default inbox view shows \u201cLast 30\nDays\u201d.")),Object(i.b)("p",null,Object(i.b)("img",{alt:"Image of Inbox Filters",src:n(265).default})),Object(i.b)("h3",{id:"bulk-reprocess-messages"},"Bulk reprocess messages"),Object(i.b)("p",null,"Need to re-run a series of messages? If you had a job fail because of an error\nfor multiple messages, or need to re-process the data in OpenFn to re-send to a\ndestination application, then this feature will help you do so more quickly!"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Simply click on the new ",Object(i.b)("strong",{parentName:"p"},"Reprocess")," button via the Inbox view.\n",Object(i.b)("img",{alt:"Reprocess button",src:n(266).default}))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify the ",Object(i.b)("strong",{parentName:"p"},"ID range")," for messages that you want to re-run (e.g., messages\nwith IDs 4622741 through 4622749 \u2192 9 messages to reprocess).\n",Object(i.b)("img",{alt:"Bulk reprocess screen",src:n(267).default})))),Object(i.b)("h4",{id:"note-when-bulk-reprocessing-messages"},"Note when bulk reprocessing messages"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"This simulates the chain of events that starts when messages first arrive in\nyour inbox. In other words, reprocessed messages will be handled by message\nfilter triggers for any jobs that have the ",Object(i.b)("inlineCode",{parentName:"p"},"autoprocess"),' setting \u201con\u201d. If\nyou\'ve got messages that match certain triggers, but the associated jobs are\nswitched "off" they will not be run when those messages are reprocessed.')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Remember that OpenFn plans are run-based, and you can monitor usage in\n",Object(i.b)("strong",{parentName:"p"},"Project Settings")," to ensure that you don\u2019t hit any run limits when bulk\nreprocessing! ",Object(i.b)("img",{alt:"Usage stats chart",src:n(268).default})))),Object(i.b)("h3",{id:"export-messages-to-csv"},"Export messages to CSV"),Object(i.b)("p",null,"You can now download and review OpenFn message data by exporting to a CSV file."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In your inbox, filter the messages you\u2019d like to export to CSV. Choose to\nfilter by text, date, trigger, and run state.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Click the ",Object(i.b)("strong",{parentName:"p"},"Export as CSV")," button to generate an export. The link to\ndownload this file will be sent to your email address."))),Object(i.b)("p",null,Object(i.b)("img",{alt:"Export CSV button",src:n(269).default})),Object(i.b)("h2",{id:"activity"},"Activity"),Object(i.b)("p",null,'In this section of the portal, you can view a list of all "runs" - i.e.\nindividual job runs. This list is essentially a compilation of all jobs,\nmessages and credentials flowing through your OpenFn account towards your\ndestination system(s).'),Object(i.b)("h3",{id:"runs"},"Runs"),Object(i.b)("p",null,"Runs are attempts made on a destination system by running a receipt through a\nJob Description. Runs can be viewed and re-processed. Each submission has a\n",Object(i.b)("inlineCode",{parentName:"p"},"success"),", ",Object(i.b)("inlineCode",{parentName:"p"},"started_at"),", ",Object(i.b)("inlineCode",{parentName:"p"},"finsihed_at"),", ",Object(i.b)("inlineCode",{parentName:"p"},"job_description_id"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"receipt_id"),"\nattribute. ",Object(i.b)("inlineCode",{parentName:"p"},"Started_at")," and ",Object(i.b)("inlineCode",{parentName:"p"},"finished_at")," are the timestamps when the submission\nbegan and ended."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"Note:")," Some runs may take a really long time, particularly if they are\nperforming multiple actions in a destination system or if they are fetching\nlots of data from a REST api at the start of a migration. They will appear as\nred if they have failed. In the case of failure, refer to our\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/documentation/trouble-shooting"}),"Troubleshooting")," section below.")),Object(i.b)("h3",{id:"filter-runs-in-the-activity-view"},"Filter runs in the Activity view"),Object(i.b)("p",null,"You can filter the run logs in the Activity View by:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Text")," - Remember to be patient as a full log text search can take time\nprocess. Leverage this feature to search for runs with specific error messages\nto support with troubleshooting any failed runs.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Date")," - Filter the view to only show runs that failed in the last few\nhours/ days/ year \u2013 or a custom date range! Note that the default activity\nhistory view shows runs from the last 30 days."))),Object(i.b)("h3",{id:"bulk-retry-runs"},"Bulk retry runs"),Object(i.b)("p",null,"Need to re-process a series of runs? This could be helpful if you had multiple\nruns fail due to an error message."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Simply click on the new ",Object(i.b)("strong",{parentName:"p"},"Retry")," button via the Runs view.\n",Object(i.b)("img",{alt:"Retry run button",src:n(270).default}))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Specify the ",Object(i.b)("strong",{parentName:"p"},"ID range")," for the runs that you want to re-process. Choose to\nfilter by Job and/or Status to only reprocess runs associated with a specific\njob or runs that have failed/ succeeded.\n",Object(i.b)("img",{alt:"Bulk retry runs",src:n(271).default})))),Object(i.b)("p",null,"Remember that OpenFn plans are run-based, and you can monitor usage in ",Object(i.b)("strong",{parentName:"p"},"Project\nSettings")," to ensure that you don\u2019t hit any run limits when bulk reprocessing!"),Object(i.b)("h3",{id:"export-runs-to-csv"},"Export runs to CSV"),Object(i.b)("p",null,"You can download your run logs by exporting to a CSV file."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Via the Runs Activity History view, filter the runs you\u2019d like to export.\nChoose to filter by text, date, job, and status.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Click the ",Object(i.b)("strong",{parentName:"p"},"Export as CSV")," button to generate an export. The link to\ndownload this file will be sent to your email address.\n",Object(i.b)("img",{alt:"Export runs button",src:n(272).default})))),Object(i.b)("h2",{id:"github-version-control"},"GitHub version control"),Object(i.b)("p",null,"You're ready to manage your jobs via GitHub, the leading hosted version control\nsoftware on the web? Great, this section describes the steps necessary to get\ngoing."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"N.B.: GitHub integration is currently only available for enterprise users.\nContact ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"mailto:enterprise@openfn.org"}),"enterprise@openfn.org")," to build a custom\nplan for your needs."))),Object(i.b)("h3",{id:"motivation"},"Motivation"),Object(i.b)("p",null,"Managing large numbers of jobs with multiple contributors is complicated. We\ndeveloped the GitHub integration so that OpenFn projects can be linked to GitHub\nrepositories. You can work collaboratively on your jobs. When commits are made\nto a particular branch OpenFn will automatically update the linked job with the\nnew job file from GitHub."),Object(i.b)("h3",{id:"setup-steps"},"Setup Steps"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Github: Settings -> Personal Access Tokens ->\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/settings/tokens/new"}),"Generate New Token"),": This token\nshould have full control of private repositories."),Object(i.b)("li",{parentName:"ol"},"OpenFn: ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.openfn.org/account"}),"User Settings"),': Once the token is\ngenerated, copy and paste it into the "GitHub Access Token" field on your\nuser settings page.'),Object(i.b)("li",{parentName:"ol"},"OpenFn: Project -> Version Control: Specify the repository owner, repository\nname and branch for automatic deploys. You'd also select to turn on or off\nautomatic deploys."),Object(i.b)("li",{parentName:"ol"},"GitHub: Repoistory -> Settings -> Webhooks -> Add webhook"),Object(i.b)("li",{parentName:"ol"},"Copy Payload URL from OpenFn Version Control page and paste into GitHub."),Object(i.b)("li",{parentName:"ol"},"Select ",Object(i.b)("inlineCode",{parentName:"li"},"application/json")," as the Content Type."),Object(i.b)("li",{parentName:"ol"},"Copy Secret from OpenFn Version Control page into GitHub."),Object(i.b)("li",{parentName:"ol"},'Leave "Just the push event" and "Active" selected, then click "Add Webook".'),Object(i.b)("li",{parentName:"ol"},"OpenFn: Project -> Jobs -> Job Edit: To link an individual job to a file in a\nGitHub repo, edit that job and paste in the path to the job from the root of\nyour GitHub repo. If your repo looks like this, you'd type ",Object(i.b)("inlineCode",{parentName:"li"},"sample_job_1.js"),"\nor ",Object(i.b)("inlineCode",{parentName:"li"},"some_folder/some_other_job.js")," to link your OpenFn job to the select file\nin your repo.")),Object(i.b)("h3",{id:"advanced-version-control"},"Advanced Version Control"),Object(i.b)("p",null,'Using this GitHub integration, you can revert to previous version of jobs\nquickly by resending old GitHub Webhook Events. Access the "Manage Webhook"\ninterface on GitHub to see a list of all past events and send whichever version\nof the job you\'d like deployed to your OpenFn project.'))}b.isMDXComponent=!0},145:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||i;return n?r.a.createElement(m,s(s({ref:t},c),{},{components:n})):r.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},262:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/inbox-security-365e6f57e571b8291188fdf30eb434c1.png"},263:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/timetriggerunslist-30591afe14b40286a89b96a5a78f3c55.png"},264:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/runtimetrigger1-6895401e3fee9878d136613b44c469e9.png"},265:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/inbox_filter-de257c0b7092338cbf648113cabd3057.png"},266:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/reprocess_msgs-09535a619188f0479572e796131f291f.png"},267:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/bulk_reprocess-d4d11b11834bba4a6d99bd7ef640e331.png"},268:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/usage-7d8c0cfc70b5a2d1eeb3f26260287e5f.png"},269:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/exportcsv-f5e7f7c87f11fd7c713818d753cd51d9.png"},270:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/retrybutton-4814aebc704aa3b192df769bdfebbe61.png"},271:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/runs_retry-7851807ad0693fadab70784223f80d84.png"},272:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/exportruns-b08b5a4b3788fe2524050cbbd36435f5.png"}}]);