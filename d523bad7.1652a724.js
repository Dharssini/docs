(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{225:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(258)),o={title:"Initial and final state for runs"},l={unversionedId:"jobs/state",id:"jobs/state",isDocsHomePage:!1,title:"Initial and final state for runs",description:"Initial state",source:"@site/docs/jobs/state.md",slug:"/jobs/state",permalink:"/documentation/jobs/state",editUrl:"https://github.com/openfn/docs/edit/main/docs/jobs/state.md",version:"current",sidebar:"docs",previous:{title:"Using multiple operations",permalink:"/documentation/jobs/multiple-operations"},next:{title:"Credentials",permalink:"/documentation/build/credentials"}},b=[{value:"Initial state",id:"initial-state",children:[]},{value:"Final state",id:"final-state",children:[{value:"Final state after an error",id:"final-state-after-an-error",children:[]}]},{value:"States by job trigger type",id:"states-by-job-trigger-type",children:[]}],c={toc:b};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"initial-state"},"Initial state"),Object(i.b)("p",null,"Depending on what tools you're using and what triggered a given run, the initial\n",Object(i.b)("inlineCode",{parentName:"p"},"state")," for a job run might be generated in a number of different ways, and you\nmight even build ",Object(i.b)("inlineCode",{parentName:"p"},"state")," by hand. For ",Object(i.b)("inlineCode",{parentName:"p"},"microservice"),", ",Object(i.b)("inlineCode",{parentName:"p"},"engine"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"platform"),"\nhowever, there are strict rules around how ",Object(i.b)("inlineCode",{parentName:"p"},"state")," gets created and provided to\na runtime for execution of your operations. See the table below for details."),Object(i.b)("h2",{id:"final-state"},"Final state"),Object(i.b)("p",null,"The final state of a job run is determined by ",Object(i.b)("em",{parentName:"p"},"you"),". Job expressions are a\nseries of ",Object(i.b)("inlineCode",{parentName:"p"},"operations"),"\u2014they each take ",Object(i.b)("inlineCode",{parentName:"p"},"state")," and return ",Object(i.b)("inlineCode",{parentName:"p"},"state"),", after creating\nany number of side effects."),Object(i.b)("h3",{id:"final-state-after-an-error"},"Final state after an error"),Object(i.b)("p",null,"If a job run fails, it will not produce a final state. The run itself will have\n",Object(i.b)("inlineCode",{parentName:"p"},"log")," information attached to it, along with its exit code, but there's not\nnecessarily a clean final ",Object(i.b)("inlineCode",{parentName:"p"},"state")," which can be serialized to ",Object(i.b)("inlineCode",{parentName:"p"},"JSON"),"."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If you're making use of a ",Object(i.b)("inlineCode",{parentName:"p"},"failure")," triggered job, that job run will not get the\nfinal state of the previous job run, as it failed and has no final state. It\nwill instead receive the initial state of the previous (failed) run, plus a new\n",Object(i.b)("inlineCode",{parentName:"p"},"error")," key that contains the stringified logs from the previous run. See below\nfor details."))),Object(i.b)("h2",{id:"states-by-job-trigger-type"},"States by job trigger type"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Triggering Event"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Initial State"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"http request"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"{ data: httpRequest.body, configuration: job.credential.body }"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"cron"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"{ ...finalStateOfLastSuccessfulRun: {}, configuration: job.credential.body }"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"flow: success"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"{ ...finalStateOfTriggeringRun, configuration: job.credential.body }"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"flow: failure"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"{ ...initialStateOfTriggeringRun, error: logsFromTriggeringRun, configuration: job.credential.body }"))))))}s.isMDXComponent=!0},258:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,f=d["".concat(o,".").concat(u)]||d[u]||p[u]||i;return n?r.a.createElement(f,l(l({ref:t},c),{},{components:n})):r.a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);