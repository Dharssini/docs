(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{100:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return i})),n.d(e,"metadata",(function(){return s})),n.d(e,"toc",(function(){return c})),n.d(e,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(130)),i={},s={unversionedId:"library/async-and-array-dot-map",id:"library/async-and-array-dot-map",isDocsHomePage:!1,title:"async-and-array-dot-map",description:"alterState(state => {",source:"@site/docs/library/async-and-array-dot-map.md",slug:"/library/async-and-array-dot-map",permalink:"/docs/library/async-and-array-dot-map",editUrl:"https://github.com/openfn/docs/edit/master/docs/library/async-and-array-dot-map.md",version:"current"},c=[],l={toc:c};function u(t){var e=t.components,n=Object(a.a)(t,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"alterState(state => {\nconsole.log('Here we will await the result of a LOT of async operations.');"),Object(o.b)("p",null,"  console.log('First we needed to break large arrays into smaller chunks.');\nfunction chunk(arr, chunkSize) {\nvar R = [];\nfor (var i = 0, len = arr.length; i < len; i += chunkSize)\nR.push(arr.slice(i, i + chunkSize));\nreturn R;\n}"),Object(o.b)("p",null,"  const clinicSets = chunk(state.data.Clinic, 10);\nconst patientSets = chunk(state.data.Patient, 10);\nconst visitSets = chunk(state.data.Visit, 10);\nconst deletedVisitSets = chunk(state.data.VisitDeleted, 10);"),Object(o.b)("p",null,"  console.log('Then we define a bunch of different async functions.');\nconst postClinics = async cs => {\nreturn post(state.configuration.inboxUrl, {\nbody: { clinics: cs },\n})(state);\n};"),Object(o.b)("p",null,"  const postPatients = async ps => {\nreturn post(state.configuration.inboxUrl, {\nbody: { patients: ps },\n})(state);\n};"),Object(o.b)("p",null,"  const postVisits = async vs => {\nreturn post(state.configuration.inboxUrl, {\nbody: { visits: vs },\n})(state);\n};"),Object(o.b)("p",null,"  const postDeletedVisits = async dvs => {\nreturn post(state.configuration.inboxUrl, {\nbody: { deletedVisits: dvs },\n})(state);\n};"),Object(o.b)("p",null,"  console.log(\n'Then we define a single function that wraps them all up and waits for all the individual functions to resolve.'\n);\nasync function makePosts() {\nreturn Promise.all(","[\n...clinicSets.map(item => postClinics(item)),\n...patientSets.map(item => postPatients(item)),\n...visitSets.map(item => postVisits(item)),\n...deletedVisitSets.map(item => postDeletedVisits(item)),\n]",");\n}"),Object(o.b)("p",null,"  console.log(\n'Then we return that function, forcing our next operation to await the result of this one.'\n);\nreturn makePosts();\n});"),Object(o.b)("p",null,"alterState(state => {\nconsole.log('I show up AFTER those async functions are resolved.');\nreturn state;\n});"))}u.isMDXComponent=!0},130:function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=a.a.createContext({}),u=function(t){var e=a.a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=u(t.components);return a.a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},f=a.a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),p=u(n),f=r,b=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?a.a.createElement(b,s(s({ref:e},l),{},{components:n})):a.a.createElement(b,s({ref:e},l))}));function b(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);