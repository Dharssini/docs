"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[8831],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),y=p(t),d=a,b=y["".concat(l,".").concat(d)]||y[d]||c[d]||o;return t?n.createElement(b,s(s({ref:r},u),{},{components:t})):n.createElement(b,s({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=y;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},72994:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=t(87462),a=(t(67294),t(3905));const o={title:"01b/ Query new person record",sidebar_label:"01b/ Query new person record",id:"01b-Query-new-person-record-2019-12-13",keywords:["library","job","expression","mysql","alterState"]},s=void 0,i={unversionedId:"jobs/auto/01b-Query-new-person-record-2019-12-13",id:"jobs/auto/01b-Query-new-person-record-2019-12-13",title:"01b/ Query new person record",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/01b-Query-new-person-record-2019-12-13.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/01b-Query-new-person-record-2019-12-13",permalink:"/library/jobs/auto/01b-Query-new-person-record-2019-12-13",draft:!1,tags:[],version:"current",frontMatter:{title:"01b/ Query new person record",sidebar_label:"01b/ Query new person record",id:"01b-Query-new-person-record-2019-12-13",keywords:["library","job","expression","mysql","alterState"]},sidebar:"library",previous:{title:"Extract Vitas Data",permalink:"/library/jobs/auto/Extract-Vitas-Data-2021-05-11"},next:{title:"02a/ Query DB for people to pay",permalink:"/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11"}},l={},p=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],u={toc:p};function c(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,a.kt)("h2",{id:"metadata"},"Metadata"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Name: 01b/ Query new person record"),(0,a.kt)("li",{parentName:"ul"},"Adaptor: ",(0,a.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,a.kt)("inlineCode",{parentName:"a"},"@openfn/language-mysql"))),(0,a.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,a.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,a.kt)("inlineCode",{parentName:"a"},"latest"))),(0,a.kt)("li",{parentName:"ul"},"Created almost 3 years ago"),(0,a.kt)("li",{parentName:"ul"},"Updated over 2 years ago"),(0,a.kt)("li",{parentName:"ul"},"Score: ",(0,a.kt)("b",null,"0")," (an ",(0,a.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,a.kt)("h2",{id:"key-functions"},"Key Functions"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"alterState")),(0,a.kt)("h2",{id:"expression"},"Expression"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"sqlString(state => {\n  // The person information is in state from the previous operation\n  console.log(state.references[0].RegistrationForm)\n  return (\n    `SELECT id FROM hippo_person WHERE firstname='` +\n    state.references[0].RegistrationForm.first_name +\n    `' AND surname='` +\n    state.references[0].RegistrationForm.last_name +\n    `'`\n  );\n});\n\nalterState(state => {\n  // Note: we pluck out on the 'RowDataResponses' from the SQL server.\n  const personData = state.response.body;\n  console.log(personData);\n  // Get the first record\n  state.data.person_id = personData[0] && personData[0].id\n   return state;\n});\n\n")))}c.isMDXComponent=!0}}]);