(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{182:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return i})),a.d(n,"metadata",(function(){return s})),a.d(n,"toc",(function(){return _})),a.d(n,"default",(function(){return d}));var t=a(3),r=a(8),o=(a(0),a(336)),i={title:"513_Enroll_Person_in_SF with salesforce",sidebar_label:"513_Enroll_Person_in_SF",id:"513_Enroll_Person_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","upsert"]},s={unversionedId:"jobs/auto/513_Enroll_Person_in_SF-2019-09-17",id:"jobs/auto/513_Enroll_Person_in_SF-2019-09-17",isDocsHomePage:!1,title:"513_Enroll_Person_in_SF with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/513_Enroll_Person_in_SF-2019-09-17.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/513_Enroll_Person_in_SF-2019-09-17",permalink:"/library/jobs/auto/513_Enroll_Person_in_SF-2019-09-17",version:"current",sidebar_label:"513_Enroll_Person_in_SF",sidebarPosition:513,frontMatter:{title:"513_Enroll_Person_in_SF with salesforce",sidebar_label:"513_Enroll_Person_in_SF",id:"513_Enroll_Person_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","upsert"]},sidebar:"library",previous:{title:"513_Enroll_Household_in_SF with salesforce",permalink:"/library/jobs/auto/513_Enroll_Household_in_SF-2019-09-17"},next:{title:"513_Update_Household_in_SF with salesforce",permalink:"/library/jobs/auto/513_Update_Household_in_SF-2019-10-08"}},_=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],l={toc:_};function d(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(o.b)("h2",{id:"metadata"},"Metadata"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Name: 513_Enroll_Person_in_SF"),Object(o.b)("li",{parentName:"ul"},"Adaptor: ",Object(o.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(o.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(o.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(o.b)("li",{parentName:"ul"},"Created over 1 year ago"),Object(o.b)("li",{parentName:"ul"},"Updated 14 days ago")),Object(o.b)("h2",{id:"key-functions"},"Key Functions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"alterState"),", ",Object(o.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(o.b)("inlineCode",{parentName:"p"},"field"),", ",Object(o.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(o.b)("inlineCode",{parentName:"p"},"join"),", ",Object(o.b)("inlineCode",{parentName:"p"},"map"),", ",Object(o.b)("inlineCode",{parentName:"p"},"upsert")),Object(o.b)("h2",{id:"expression"},"Expression"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// ** MOH513 Enroll Person form ** -> Upserting person record based on CommCare ID\n\n// Provide a function which checks if dates are empty strings\nalterState(state => {\n  const truthyValue = (value) => value || null;\n  return { ...state, truthyValue }\n})\n\nalterState(state => {\n  if (dataValue('form.Source')(state) == 1) {\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        field('CommCare_ID__c', dataValue('form.subcase_0.case.@case_id')),\n        // relationship(\"Household__r\",\"CommCare_Code__c\",dataValue(\"form.case.@case_id\")), //remove as Apex trigger maps relationships\n        relationship('Catchment__r', 'Name', dataValue('form.catchment')),\n        field(\"Area__c\", dataValue('form.area')),\n        field('Household_Village__c', dataValue('form.village')),\n        //field('Household_CHW__c', dataValue('form.CHW_ID')),\n        field('Name', state => {\n          var status = dataValue('form.Person.Basic_Information.Child_Status')(\n            state\n          );\n          var name1 = dataValue('form.Person.Basic_Information.Person_Name')(\n            state\n          );\n\n          var name2 =\n            name1 === undefined\n              ? 'No Name'\n              : name1.replace(/\\w\\S*/g, function (txt) {\n                return (\n                  txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                );\n              });\n          return status !== 'Unborn' ? name2 : 'Unborn Child';\n        }),\n        relationship('RecordType', 'Name', state => {\n          var rt = dataValue('form.Person.Basic_Information.Record_Type')(\n            state\n          );\n          var status = dataValue('form.Person.Basic_Information.Child_Status')(\n            state\n          );\n          return rt === 'Unborn' || (status && status === 'Unborn')\n            ? 'Child'\n            : rt.toString().replace(/_/g, ' '); //convert Unborn children to Child RT\n        }),\n        field('Client_Status__c', 'Active'),\n        field('Relation_to_the_head_of_the_household__c', state => {\n          var relation = dataValue(\n            'form.Person.Basic_Information.relation_to_hh'\n          )(state)\n            .toString()\n            .replace(/_/g, ' ');\n          var toTitleCase =\n            relation.charAt(0).toUpperCase() + relation.slice(1);\n          return toTitleCase;\n        }),\n        field('Child_Status__c', state => {\n          var dob = dataValue('form.Person.Basic_Information.DOB')(state);\n          var status = dataValue('form.Person.Basic_Information.Child_Status')(\n            state\n          );\n          return dob !== undefined || status == 'Born' ? 'Born' : 'Unborn'; //what about deceased?\n        }),\n        field(\n          'Date_of_Birth__c',\n          state => state.truthyValue(dataValue('form.Person.Basic_Information.DOB')(state))\n        ),\n        field('Gender__c', dataValue('form.Person.Basic_Information.Gender')),\n        field(\n          'Birth_Certificate__c',\n          dataValue('form.Person.Basic_Information.birth_certificate')\n        ),\n        field(\n          'Currently_enrolled_in_school__c',\n          dataValue('form.Person.Basic_Information.enrolled_in_school')\n        ),\n        field('Education_Level__c', state => {\n          var level = dataValue(\n            'form.Person.Basic_Information.Education_Level'\n          )(state);\n          return level !== undefined\n            ? level.toString().replace(/_/g, ' ')\n            : null;\n        }),\n        field(\n          'Telephone__c',\n          dataValue(\n            'form.Person.Basic_Information.Contact_Info.contact_phone_number'\n          )\n        ),\n        field(\n          'Family_Planning__c',\n          dataValue(\n            'form.Person.Basic_Information.family_planning.Currently_on_family_planning'\n          )\n        ),\n        field(\n          'Family_Planning_Method__c',\n          dataValue(\n            'form.Person.Basic_Information.family_planning.Family_Planning_Method'\n          )\n        ),\n        field(\n          'Use_mosquito_net__c',\n          dataValue('form.Person.Basic_Information.person_info.sleep_under_net')\n        ),\n        field('Chronic_illness__c', state => {\n          var chronic = dataValue(\n            'form.Person.Basic_Information.person_info.chronic_illness'\n          )(state);\n          if (chronic !== undefined) {\n            chronic = chronic\n              .toLowerCase()\n              .split(' ')\n              .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n              .join(';');\n            return chronic.toString().replace(/_/g, ' ');\n          } else {\n            chronic == null;\n          }\n          return chronic;\n        }),\n        field(\n          'Two_weeks_or_more_cough__c',\n          dataValue('form.Person.Basic_Information.person_info.cough_for_2wks')\n        ),\n        field(\n          'Knowledge_of_HIV_Status__c',\n          dataValue(\n            'form.Person.Basic_Information.person_info.known_hiv_status'\n          )\n        ),\n        field(\n          'HIV_Status__c',\n          dataValue('form.Person.Basic_Information.person_info.hiv_status')\n        ),\n        field('Disability__c', state => {\n          var disability = dataValue(\n            'form.Person.Basic_Information.person_info.disability'\n          )(state);\n          var toTitleCase =\n            disability !== undefined\n              ? disability\n                .toLowerCase()\n                .split(' ')\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(';')\n              : null;\n          return toTitleCase;\n        }),\n        field('Other_disability__c', state => {\n          var disability = dataValue(\n            'form.Person.Basic_Information.person_info.other_disability'\n          )(state);\n          var toTitleCase =\n            disability !== undefined\n              ? disability\n                .toLowerCase()\n                .split(' ')\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(';')\n              : null;\n          return toTitleCase;\n        }),\n        field('Active_TT5_Mother__c', state => {\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return preg == 'Yes' ? 'Yes' : null;\n        }),\n        field('TT5_Mother_Registrant__c', state => {\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return preg == 'Yes' ? 'Yes' : null;\n        }),\n        field('Active_in_Thrive_Thru_5__c', state => {\n          var age = dataValue('form.Person.Basic_Information.age')(state);\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return age < 5 || preg == 'Yes' ? 'Yes' : 'No';\n        }),\n        field('Active_in_HAWI__c', state => {\n          var status = dataValue(\n            'form.Person.Basic_Information.person_info.hiv_status'\n          )(state);\n          return status == 'positive' ? 'Yes' : 'No';\n        }),\n        field('Enrollment_Date__c', state => {\n          var age = dataValue('form.Person.Basic_Information.age')(state);\n          var date = dataValue('metadata.timeEnd')(state);\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return age < 5 || preg == 'Yes' ? date : null;\n        }),\n        field('HAWI_Enrollment_Date__c', state => {\n          var date = dataValue('metadata.timeEnd')(state);\n          var status = dataValue(\n            'form.Person.Basic_Information.person_info.hiv_status'\n          )(state);\n          return status == 'positive' ? date : null;\n        }),\n        field('Thrive_Thru_5_Registrant__c', state => {\n          var age = dataValue('form.Person.Basic_Information.age')(state);\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return age < 5 || preg == 'Yes' ? 'Yes' : 'No';\n        }),\n        field('HAWI_Registrant__c', state => {\n          var status = dataValue(\n            'form.Person.Basic_Information.person_info.hiv_status'\n          )(state);\n          return status == 'positive' ? 'Yes' : 'No';\n        }),\n        field(\n          'LMP__c',\n          dataValue('form.Person.TT5.Child_Information.ANCs.LMP')\n        ),\n        field('Source__c', 1),\n        field(\n          'ANC_1__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.ANCs.ANC_1')(state))\n        ),\n        field(\n          'ANC_2__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.ANCs.ANC_2')(state))\n        ),\n        field(\n          'ANC_3__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.ANCs.ANC_3')(state))\n        ),\n        field(\n          'ANC_4__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.ANCs.ANC_4')(state))\n        ),\n        field(\n          'ANC_5__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.ANCs.ANC_5')(state))\n        ),\n        field(\n          'BCG__c',\n          state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.Immunizations.BCG')(state))\n        ),\n        field(\n          'OPV_0__c',\n          dataValue('form.Person.TT5.Child_Information.Immunizations.OPV_0')\n        ),\n        field(\n          'OPV_1__c',\n          dataValue(\n            'form.Person.TT5.Child_Information.Immunizations.OPV_PCV_Penta_1'\n          )\n        ),\n        field(\n          'OPV_2__c',\n          dataValue(\n            'form.Person.TT5.Child_Information.Immunizations.OPV_PCV_Penta_2'\n          )\n        ),\n        field(\n          'OPV_3__c',\n          dataValue(\n            'form.Person.TT5.Child_Information.Immunizations.OPV_PCV_Penta_3'\n          )\n        ),\n        field(\n          'Measles_6__c',\n          dataValue('form.Person.TT5.Child_Information.Immunizations.Measles_6')\n        ),\n        field(\n          'Measles_9__c',\n          dataValue('form.Person.TT5.Child_Information.Immunizations.Measles_9')\n        ),\n        field(\n          'Measles_18__c',\n          dataValue(\n            'form.Person.TT5.Child_Information.Immunizations.Measles_18'\n          )\n        ),\n        field('Pregnant__c', state => {\n          var preg = dataValue('form.Person.TT5.Mother_Information.Pregnant')(\n            state\n          );\n          return preg == 'Yes' ? true : false;\n        }),\n        field(\n          'Gravida__c',\n          dataValue(\n            'form.Person.TT5.Mother_Information.Pregnancy_Information.Gravida'\n          )\n        ),\n        field(\n          'Parity__c',\n          dataValue(\n            'form.Person.TT5.Mother_Information.Pregnancy_Information.Parity'\n          )\n        ),\n        field(\n          'Unique_Patient_Code__c',\n          dataValue('form.Person.HAWI.Unique_Patient_Code')\n        ),\n        field(\n          'Active_in_Support_Group__c',\n          dataValue('form.Person.HAWI.Active_in_Support_Group')\n        ),\n        field('CommCare_HH_Code__c', dataValue('form.case.@case_id')),\n        field('Currently_on_ART_s__c', dataValue('form.Person.HAWI.ART')),\n        field('ART_Regimen__c', dataValue('form.Person.HAWI.ARVs')),\n        field(\n          'Exclusive_Breastfeeding__c',\n          dataValue(\n            'form.Person.TT5.Child_Information.Exclusive_Breastfeeding.Exclusive_Breastfeeding'\n          )\n        ),\n        field(\n          'Immediate_Breastfeeding__c',\n          dataValue('form.subcase_0.case.update.Immediate_Breastfeeding')\n        ),\n        field(\n          'Vitamin_A__c',\n          dataValue('form.Person.TT5.Child_Information.nutrition.vitamin_a')\n        ),\n        field(\n          'Food_groups_3_times_a_day__c',\n          dataValue('form.Person.TT5.Child_Information.nutrition.food_groups')\n        ),\n        field( \n          'Initial_MUAC__c',\n          dataValue('form.Person.TT5.Child_Information.nutrition.MUAC')\n        ),\n        field(\n          'MCH_booklet__c',\n          dataValue('form.Person.TT5.Mother_Information.mch_booklet')\n        ),\n        field('Preferred_Care_Facility__c', state => {\n          var facility = dataValue('form.Person.HAWI.Preferred_Care_Facility')(\n            state\n          );\n          return facility !== undefined\n            ? facility.toString().replace(/_/g, ' ')\n            : null;\n        }),\n        field('Delivery_Facility__c', state => {\n          var facility = dataValue(\n            'form.Person.TT5.Child_Information.Delivery_Information.Birth_Facility'\n          )(state);\n          return facility !== undefined\n            ? facility.toString().replace(/_/g, ' ')\n            : null;\n        }),\n        field('Delivery_Facility_Other__c', dataValue('form.Person.TT5.Child_Information.Delivery_Information.Delivery_Facility_Other')),\n        field('Place_of_Delivery__c', state => {\n          var facility = dataValue(\n            'form.Person.TT5.Child_Information.Delivery_Information.Skilled_Unskilled'\n          )(state);\n          if (facility !== undefined) {\n            return facility == 'Skilled' ? 'Facility' : 'Home';\n          }\n          return facility;\n        }),\n        field('Cough_14_days_referral__c', dataValue('form.Person.Basic_Information.person_info.refer_for_cough')),\n        field('Cough_14_days_referral_date__c', state => state.truthyValue(dataValue('form.Person.Basic_Information.person_info.date_refer_to_clinc')(state))),\n        field('Know_HIV_status__c', dataValue('form.Person.Basic_Information.person_info.known_hiv_status')),\n        field('HIV_counselling_and_testing_referral__c', dataValue('form.Person.Basic_Information.person_info.hiv_counselling_testing')),\n        field('HIV_counseling_and_testing_referral_date__c', state => state.truthyValue(dataValue('form.Person.Basic_Information.person_info.when_hiv_testing')(state))),\n        field('Chronic_illness_referral__c', dataValue('form.Person.Basic_Information.person_info.refer_chronic_illness')),\n        field('Chronic_illness_referral_date__c', state => state.truthyValue(dataValue('form.Person.Basic_Information.person_info.datereferal_chronic_illness')(state))),\n        field('Current_Height__c', dataValue('form.Person.TT5.Child_Information.nutrition.height')),\n        field('Nutrition_referral_date__c', state => state.truthyValue(dataValue('form.Person.TT5.Child_Information.nutrition.date_malnutrition')(state))),\n        field('Received_pregnancy_test__c', state => { \n          var preg = dataValue('form.Person.Basic_Information.family_planning.administer_preg_test')(state); \n          return preg && preg==='OK' ? 'Yes' : preg;\n        }),\n        field('Pregnancy_test_result__c', dataValue('form.Person.Basic_Information.family_planning.pregnancy_test_result')),\n        field('Pregnancy_referral__c', dataValue('form.Person.Basic_Information.family_planning.refer_preg')),\n        field('Pregnancy_referral_date__c', state => state.truthyValue(dataValue('form.Person.Basic_Information.family_planning.referal_pregnancy')(state))),\n        field(\n          \"Family_Planning__c\", (state) => {\n            var plan = dataValue(\"'form.Person.Basic_Information.family_planning.Currently_on_family_planning\")(state);\n            return plan ? 'Yes' : plan;\n          }),\n        field(\n          \"Family_Planning_Method__c\", (state) => {\n            var method = dataValue(\"form.Person.Basic_Information.family_planning.Family_Planning_Method\")(state);\n            return method\n              ? method.toString().replace(/_/g, \" \")\n              : method;\n          }),\n        field(\n          \"Reasons_for_not_taking_FP_method__c\", (state) => {\n            var reason = dataValue(\"form.Person.Basic_Information.family_planning.No_FPmethod_reason\")(state);\n            var reasonsMap = {\n              lack_of_access_to_fp_information: 'Lack of acceess to FP information',\n              lack_of_hospitals_or_places_where_fp_services_can_be_accessed: 'Lack of hospitals or places where FP services can be accessed',\n              myths_and_misconceptions: 'Myths and misconceptions',\n              barriers_at_service_delivery_points: 'Barriers at service delivery points',\n              pregnant: 'The client is pregnant',\n              intentions_of_getting_pregnant: 'Intentions of getting pregnant',\n              not_sexually_active: 'The client is not sexualy active',\n              other_barriers_culture_male_partners_parents_etc: 'Other barriers (culture, male partners, parents, etc)'\n            };\n            return reason ? reasonsMap[reason] : reason;\n          }),\n        field(\"Reason_for_not_taking_a_pregnancy_test__c\", (state) => {\n          var reason = dataValue(\"form.Person.asic_Information.family_planning.No_Preg_Test\")(state);\n          return reason\n            ? reason.toString().replace(/_/g, \" \")\n            : reason;\n        }),\n        field('Cause_of_Death__c', state => {\n          var death = dataValue('form.Person.Basic_Information.cause_of_death_dead')(state);\n          return death ? death.toString().replace(/_/g, ' ')\n            : death;\n        }),\n      )\n    )(state);\n  }\n  console.log('form.Source does not equal 1, not upserting person record.');\n  return state;\n});\n\n// **Update HH Members Total_Number_of_Members\nalterState(state => {\n  if (\n    dataValue('form.Person.Updated_Total_Number_of_Members')(state) !== null &&\n    dataValue('form.Person.Updated_Total_Household_Members')(state) !==\n    undefined\n  ) {\n    return upsert(\n      'Household__c',\n      'CommCare_Code__c',\n      fields(\n        field('CommCare_Code__c', dataValue('form.case.@case_id')),\n        field(\n          'Total_household_people__c',\n          dataValue('Updated_Total_Number_of_Members')\n        )\n      )\n    )(state);\n  }\n\n  console.log('Members are null or undefined, not upserting household.');\n  return state;\n});\n\n// **Upserting Supervisor Visit records; checks if Visit already exists via CommCare Visit ID which = CommCare submission ID\nupsert(\n  'Visit__c',\n  'CommCare_Visit_ID__c',\n  fields(\n    field('CommCare_Visit_ID__c', dataValue('id')),\n    relationship(\n      'Household__r',\n      'CommCare_Code__c',\n      dataValue('form.case.@case_id')\n    ),\n    field('Visit_UID__c', state => {\n      var hh = dataValue('form.case.@case_id')(state);\n      var date = dataValue('form.Date')(state);\n      return hh + date;\n    }),\n    field('Name', 'CHW Visit'),\n    field('Supervisor_Visit__c', state => {\n      var visit = dataValue('form.supervisor_visit')(state);\n      return visit !== undefined\n        ? visit.toString().replace(/ /g, ';').replace(/_/g, ' ')\n        : null;\n    }),\n    field('Date__c', state => state.truthyValue(dataValue('form.Date')(state))),\n    field('Household_CHW__c', dataValue('form.CHW_ID')),\n    //field(\"Household_CHW__c\", \"a031x000002S9lm\"), //HARDCODED FOR SANDBOX TESTING --\x3e To replace with line above\n    field('Location__latitude__s', state => {\n      var lat = state.data.metadata.location;\n      return lat !== null ? lat.substring(0, lat.indexOf(' ')) : null;\n    }),\n    field('Location__longitude__s', state => {\n      var long = state.data.metadata.location;\n      return long !== null\n        ? long.substring(long.indexOf(' ') + 1, long.indexOf(' ') + 7)\n        : null;\n    })\n  )\n);\n\n")))}d.isMDXComponent=!0},336:function(e,n,a){"use strict";a.d(n,"a",(function(){return f})),a.d(n,"b",(function(){return m}));var t=a(0),r=a.n(t);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function _(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),d=function(e){var n=r.a.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},f=function(e){var n=d(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,l=_(e,["components","mdxType","originalType","parentName"]),f=d(a),u=t,m=f["".concat(i,".").concat(u)]||f[u]||c[u]||o;return a?r.a.createElement(m,s(s({ref:n},l),{},{components:a})):r.a.createElement(m,s({ref:n},l))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var _ in n)hasOwnProperty.call(n,_)&&(s[_]=n[_]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);