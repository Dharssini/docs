"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[2216],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(n),h=r,d=m["".concat(l,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37092:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var a=n(83117),r=n(80102),o=(n(67294),n(3905)),i=["components"],c={title:"Working with branches"},l=void 0,p={unversionedId:"jobs/working_with_branches",id:"jobs/working_with_branches",title:"Working with branches",description:"In the Editing jobs locally section we",source:"@site/docs/jobs/working_with_branches.md",sourceDirName:"jobs",slug:"/jobs/working_with_branches",permalink:"/documentation/jobs/working_with_branches",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/jobs/working_with_branches.md",tags:[],version:"current",frontMatter:{title:"Working with branches"},sidebar:"docs",previous:{title:"Editing jobs locally",permalink:"/documentation/jobs/editing_locally"},next:{title:"Triggers",permalink:"/documentation/build/triggers"}},s={},u=[],m={toc:u};function h(e){var t=e.components,c=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the ",(0,o.kt)("a",{parentName:"p",href:"/documentation/jobs/editing_locally"},"Editing jobs locally")," section we\nwalked through the process of creating and adding your changes to the ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),"\nbranch of a project."),(0,o.kt)("p",null,"However, most code change workflows involve sharing and reviewing changes before\ndeployment. You can do this by creating, testing and sharing your changes on a\nnew branch, then, once final, merging them into ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," for deployment."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"There are LOTS of different strategies for branching and reviewing code on Git.\n(Like ",(0,o.kt)("a",{parentName:"p",href:"https://guides.github.com/introduction/flow/"},"GitHub Flow")," or\n",(0,o.kt)("a",{parentName:"p",href:"https://nvie.com/posts/a-successful-git-branching-model/"},'"That Famous @nvie Post"'),'\nfor example!) This guide is meant to give you a very brief introduction to\nbranches in Git, but it is not meant to dictate the "right way".'))),(0,o.kt)("p",null,"Let's pick up the workflow when you ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull")," -ed the latest changes of the\nrepo to your local folder."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Running ",(0,o.kt)("inlineCode",{parentName:"p"},"git checkout -b {branch_name}")," will create and switch over to a new\nbranch. When you start editing your jobs, the changes will be kept on this\nbranch, managed separately from ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To test the changes locally, check out the\n",(0,o.kt)("a",{parentName:"p",href:"/documentation/devtools/home"},"Devtools")," docs.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Just as you've seen when working on ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),", when you're done check which\nfiles you changed with ",(0,o.kt)("inlineCode",{parentName:"p"},"git status"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Then use ",(0,o.kt)("inlineCode",{parentName:"p"},"git add {filepath}")," followed by ",(0,o.kt)("inlineCode",{parentName:"p"},"git commit -m {change notes}")," to\nprepare the changes to be merged into the repo.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The following command will push your changes to the remote repository as a\nseparate, new branch: ",(0,o.kt)("inlineCode",{parentName:"p"},"git push --set-upstream origin {branch_name}"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"On GitHub, you can create a Pull Request to get your changes reviewed and\napproved."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"PR-1",src:n(75443).Z,width:"1285",height:"258"})),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"PR-2",src:n(46666).Z,width:"1155",height:"686"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"As you keep working with branches, make sure you check which branch you're on\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"git status"),"."))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"git-status",src:n(65012).Z,width:"594",height:"100"})),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To keep your local copy up to date with the remote repo, switch to ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),"\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"git checkout main")," and hit ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull")," to pull any changes.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you're still working on your separate branch while ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," has been\nupdated, use ",(0,o.kt)("inlineCode",{parentName:"p"},"git checkout {branch_name}")," followed by ",(0,o.kt)("inlineCode",{parentName:"p"},"git merge main")," to\ncopy over new changes from ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," to your branch."))))}h.isMDXComponent=!0},65012:function(e,t,n){t.Z=n.p+"assets/images/git-status-b871e6bb98f9fd6d7ec4e3073b982b46.png"},46666:function(e,t,n){t.Z=n.p+"assets/images/pull-request-2-2cbcdc35cd9434b41491d62d2c237676.png"},75443:function(e,t,n){t.Z=n.p+"assets/images/pull-request-9864092fb4ca2fbffab703957a7db3f1.png"}}]);