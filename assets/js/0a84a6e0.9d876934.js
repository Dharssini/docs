"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[5445],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return b}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=u(n),b=a,d=g["".concat(l,".").concat(b)]||g[b]||c[b]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},45107:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],s={title:"Register (gs)",sidebar_label:"Register (gs)",id:"Register-gs-2021-03-02",keywords:["library","job","expression","googlesheets","appendValues","JSON"]},l=void 0,u={unversionedId:"jobs/auto/Register-gs-2021-03-02",id:"jobs/auto/Register-gs-2021-03-02",title:"Register (gs)",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Register-gs-2021-03-02.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Register-gs-2021-03-02",permalink:"/library/jobs/auto/Register-gs-2021-03-02",tags:[],version:"current",frontMatter:{title:"Register (gs)",sidebar_label:"Register (gs)",id:"Register-gs-2021-03-02",keywords:["library","job","expression","googlesheets","appendValues","JSON"]},sidebar:"library",previous:{title:"DHIS2 Events",permalink:"/library/jobs/auto/DHIS2-Events-2016-01-27"},next:{title:"01a/ Create Registrants",permalink:"/library/jobs/auto/01a-Create-Registrants-2019-11-19"}},p=[{value:"Metadata",id:"metadata",children:[],level:2},{value:"Key Functions",id:"key-functions",children:[],level:2},{value:"Expression",id:"expression",children:[],level:2}],c={toc:p};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: Register (gs)"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-googlesheets"},(0,o.kt)("inlineCode",{parentName:"a"},"@openfn/language-googlesheets"))),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-googlesheets/releases/tag/v1.0.2"},(0,o.kt)("inlineCode",{parentName:"a"},"v1.0.2"))),(0,o.kt)("li",{parentName:"ul"},"Created 12 months ago"),(0,o.kt)("li",{parentName:"ul"},"Updated 5 months ago"),(0,o.kt)("li",{parentName:"ul"},"Score: ",(0,o.kt)("b",null,"18")," (an ",(0,o.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"appendValues"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"appendValues({\n  spreadsheetId: '1EFkY4zD4qqxnJdH-QaeasKd1zXC-1sNKpEg08W-3sT0',\n  range: 'COVID-19 Cases!A2',\n  values: state => {\n    const kobo = state.data.body;\n    \n    console.log('Submission data: ' + JSON.stringify(kobo, null, 2));\n    \n    return [\n      [\n        kobo['National_ID'],\n        kobo['Patient_name'],\n        kobo['Last_Name_of_Patient'],\n        kobo['Sex'],\n        kobo['Age'],\n        kobo['Comments'],\n        kobo['Date']\n      ],\n    ];\n  },\n});\n")))}g.isMDXComponent=!0}}]);