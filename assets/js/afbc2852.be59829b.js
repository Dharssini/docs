"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[32737],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),_=c(n),m=r,f=_["".concat(l,".").concat(m)]||_[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=_;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},19266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Upsert Home Visit Log Form",sidebar_label:"Upsert Home Visit Log Form",id:"Upsert-Home-Visit-Log-Form-2021-05-03",keywords:["library","job","expression","salesforce","dataValue","field","fields","lastReferenceValue","query","relationship","upsert"]},o=void 0,s={unversionedId:"library/jobs/auto/Upsert-Home-Visit-Log-Form-2021-05-03",id:"library/jobs/auto/Upsert-Home-Visit-Log-Form-2021-05-03",title:"Upsert Home Visit Log Form",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Upsert-Home-Visit-Log-Form-2021-05-03.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Upsert-Home-Visit-Log-Form-2021-05-03",permalink:"/adaptors/library/jobs/auto/Upsert-Home-Visit-Log-Form-2021-05-03",draft:!1,tags:[],version:"current",frontMatter:{title:"Upsert Home Visit Log Form",sidebar_label:"Upsert Home Visit Log Form",id:"Upsert-Home-Visit-Log-Form-2021-05-03",keywords:["library","job","expression","salesforce","dataValue","field","fields","lastReferenceValue","query","relationship","upsert"]},sidebar:"adaptors",previous:{title:"Upsert Confirm Services Received",permalink:"/adaptors/library/jobs/auto/Upsert-Confirm-Services-Received-2021-06-14"},next:{title:"Upsert Intervention Notes",permalink:"/adaptors/library/jobs/auto/Upsert-Intervention-Notes-2021-04-28"}},l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name: Upsert Home Visit Log Form"),(0,r.kt)("li",{parentName:"ul"},"Adaptor: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,r.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,r.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,r.kt)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,r.kt)("li",{parentName:"ul"},"Created over 1 year ago"),(0,r.kt)("li",{parentName:"ul"},"Updated 7 months ago"),(0,r.kt)("li",{parentName:"ul"},"Score: ",(0,r.kt)("b",null,"18")," (an ",(0,r.kt)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.kt)("h2",{id:"key-functions"},"Key Functions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lastReferenceValue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"upsert")),(0,r.kt)("h2",{id:"expression"},"Expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// push to production\n\nquery(\n  `SELECT Participant_Identification_Number_PID__c from Person__c where Participant_Identification_Number_PID__c  = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const PID = lastReferenceValue('records[0].Participant_Identification_Number_PID__c')(state);\n  if (!PID) {\n    console.log(\n      `Participant not found with Participant_Identification_Number_PID__c: ${state.data.form.case['@case_id']}`\n    );\n    return state;\n  }\n\n  return execute(\n    fn(state => {\n      const { form } = state.data;\n      const { basic_information } = form;\n      if (basic_information.intervention_hidden) {\n        return query(\n          `SELECT Id, Event__c, CreatedDate, Person_Attendance__c\n        FROM Attendance__c\n        WHERE Person_Attendance__r.Participant_Identification_Number_PID__c = '${form.case['@case_id']}'\n        ORDER BY CreatedDate DESC LIMIT 1`\n        )(state).then(state => {\n          const { records } = state.references[0];\n          const eventId = records[0].Event__c;\n          state.data.eventField = [field('Event__c', eventId)];\n          return state;\n        });\n        // state.data.eventField = [\n        //   relationship('Event__r', 'CommCare_Ext_ID__c', dataValue('form.basic_information.intervention_hidden')(state)),\n        // ];\n        // return state;\n      } else {\n        return query(\n          `SELECT Id, Event__c, CreatedDate, Person_Attendance__c\n        FROM Attendance__c\n        WHERE Person_Attendance__r.Participant_Identification_Number_PID__c = '${form.case['@case_id']}'\n        ORDER BY CreatedDate DESC LIMIT 1`\n        )(state).then(state => {\n          const { records } = state.references[0];\n          const eventId = records[0].Event__c;\n          state.data.eventField = [field('Event__c', eventId)];\n          return state;\n        });\n      }\n    }),\n\n    upsert('Home_Visit__c', 'CommCare_Ext_ID__c', state => ({\n      ...fields(\n        field('CommCare_Ext_ID__c', dataValue('id')),\n        // relationship('Event__r', 'CommCare_Ext_ID__c', dataValue('form.basic_information.intervention_hidden')),\n        relationship('Person_visiting__r', 'Participant_Identification_Number_PID__c', dataValue('form.case.@case_id')),\n        //=== NOTE: We do not need to map People information because Home Visit is related to Person. ======//\n        //This info already lives on the Person-level.\n        // field('First_Name__c', dataValue('form.basic_information.participant_first_name')),\n        // field('Surname__c', dataValue('form.basic_information.participant_surname')),\n        // field('Sex__c', dataValue('form.basic_information.gender')),\n        // field('Date_of_Birth__c', dataValue('form.basic_information.date_of_birth')),\n        // field('Physical Address Community City', dataValue('form.basic_information.participant_address')),\n        //================\n        field('Consent_Given__c', dataValue('form.basic_information.consent_received')),\n        //field('Consent_Given__c', dataValue('form.participant_infomation.visit_information.consent_given')) //Repeated mapping\n        //field('From_Venue__c', dataValue('form.basic_information.venue_hidden')),\n        field('Reason_for_Home_Visit__c', dataValue('form.participant_infomation.reason_for_home_visit')),\n        field('Visit_Date__c', dataValue('form.participant_infomation.visit_information.visit_date')),\n        field('Additional_Comments__c', dataValue('form.administrative.visit_notes'))\n      ),\n      ...fields(...state.data.eventField),\n    }))\n  )(state);\n});\n\n")))}p.isMDXComponent=!0}}]);