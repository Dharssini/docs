(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[1130],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),y=u(r),f=a,d=y["".concat(i,".").concat(f)]||y[f]||c[f]||o;return r?n.createElement(d,p(p({ref:t},s),{},{components:r})):n.createElement(d,p({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=y;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,p[1]=l;for(var u=2;u<o;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},50360:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return p},metadata:function(){return l},toc:function(){return i},default:function(){return s}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),p={title:"02a/ Query DB for people to pay",sidebar_label:"02a/ Query DB for people to pay",id:"02a-Query-DB-for-people-to-pay-2019-12-11",keywords:["library","job","expression","mysql","alterState"]},l={unversionedId:"jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",id:"jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",isDocsHomePage:!1,title:"02a/ Query DB for people to pay",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",permalink:"/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",version:"current",sidebar_label:"02a/ Query DB for people to pay",frontMatter:{title:"02a/ Query DB for people to pay",sidebar_label:"02a/ Query DB for people to pay",id:"02a-Query-DB-for-people-to-pay-2019-12-11",keywords:["library","job","expression","mysql","alterState"]},sidebar:"library",previous:{title:"01b/ Query new person record",permalink:"/library/jobs/auto/01b-Query-new-person-record-2019-12-13"},next:{title:"03/ Update Payment Status",permalink:"/library/jobs/auto/03-Update-Payment-Status-2019-11-19"}},i=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],u={toc:i};function s(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: 02a/ Query DB for people to pay"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,o.kt)("inlineCode",{parentName:"a"},"@openfn/language-mysql"))),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,o.kt)("inlineCode",{parentName:"a"},"latest"))),(0,o.kt)("li",{parentName:"ul"},"Created over 1 year ago"),(0,o.kt)("li",{parentName:"ul"},"Updated about 1 year ago"),(0,o.kt)("li",{parentName:"ul"},"Score: ",(0,o.kt)("b",null,"0")," (an ",(0,o.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"alterState")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"\nsqlString(state => {\n  // stored procedure will return a list of names, phone numbers (MSISDN), and salary info for employees that should be paid today\n  return 'CALL get_employees_to_pay();';\n});\n\n//alterState(state => {\n  // Note: we pluck out on the 'RowDataResponses' from the SQL server.\n//  state.data.records = state.response.body[0];\n//  return state;\n//});\n")))}s.isMDXComponent=!0}}]);