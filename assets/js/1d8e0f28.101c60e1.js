"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[2651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),y=u(r),b=a,f=y["".concat(l,".").concat(b)]||y[b]||c[b]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},14591:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={title:"04a/Query for job changes",sidebar_label:"04a/Query for job changes",id:"04a-Query-for-job-changes-2019-12-12",keywords:["library","job","expression","mysql","alterState"]},s=void 0,i={unversionedId:"jobs/auto/04a-Query-for-job-changes-2019-12-12",id:"jobs/auto/04a-Query-for-job-changes-2019-12-12",title:"04a/Query for job changes",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/04a-Query-for-job-changes-2019-12-12.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/04a-Query-for-job-changes-2019-12-12",permalink:"/library/jobs/auto/04a-Query-for-job-changes-2019-12-12",draft:!1,tags:[],version:"current",frontMatter:{title:"04a/Query for job changes",sidebar_label:"04a/Query for job changes",id:"04a-Query-for-job-changes-2019-12-12",keywords:["library","job","expression","mysql","alterState"]},sidebar:"library",previous:{title:"03/ Update Payment Status",permalink:"/library/jobs/auto/03-Update-Payment-Status-2019-11-19"},next:{title:"05a/Query for new employees",permalink:"/library/jobs/auto/05a-Query-for-new-employees-2019-12-19"}},l={},u=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,a.kt)("h2",{id:"metadata"},"Metadata"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Name: 04a/Query for job changes"),(0,a.kt)("li",{parentName:"ul"},"Adaptor: ",(0,a.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,a.kt)("inlineCode",{parentName:"a"},"@openfn/language-mysql"))),(0,a.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,a.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,a.kt)("inlineCode",{parentName:"a"},"latest"))),(0,a.kt)("li",{parentName:"ul"},"Created almost 3 years ago"),(0,a.kt)("li",{parentName:"ul"},"Updated over 2 years ago"),(0,a.kt)("li",{parentName:"ul"},"Score: ",(0,a.kt)("b",null,"0")," (an ",(0,a.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,a.kt)("h2",{id:"key-functions"},"Key Functions"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"alterState")),(0,a.kt)("h2",{id:"expression"},"Expression"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"sqlString(state => {\n  return \"SELECT position_id, position_name, salary, facility_id, facility_name, status \\\n    FROM position_updates WHERE status in ('NEW', 'CLOSED');\";\n});\n\nalterState(state => {\n  state.new_jobs = state.response.body;\n  console.log(state.new_jobs);\n  return state;\n})\n\nsqlString(state => {\n  return `UPDATE position_updates SET status='PROCESSED' WHERE status in ('NEW','CLOSED')`;\n});\n")))}c.isMDXComponent=!0}}]);