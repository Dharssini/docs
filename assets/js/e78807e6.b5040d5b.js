(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[910],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return c},kt:function(){return f}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),f=r,b=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return a?n.createElement(b,i(i({ref:t},c),{},{components:a})):n.createElement(b,i({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},4498:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var n=a(22122),r=a(19756),o=(a(67294),a(3905)),i={title:"0 - Get TEI data",sidebar_label:"0 - Get TEI data",id:"0-Get-TEI-data-2021-06-02",keywords:["library","job","expression","dhis2","alterState","dataValue","getData"]},l={unversionedId:"jobs/auto/0-Get-TEI-data-2021-06-02",id:"jobs/auto/0-Get-TEI-data-2021-06-02",isDocsHomePage:!1,title:"0 - Get TEI data",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/0-Get-TEI-data-2021-06-02.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/0-Get-TEI-data-2021-06-02",permalink:"/library/jobs/auto/0-Get-TEI-data-2021-06-02",version:"current",sidebar_label:"0 - Get TEI data",sidebarPosition:0,frontMatter:{title:"0 - Get TEI data",sidebar_label:"0 - Get TEI data",id:"0-Get-TEI-data-2021-06-02",keywords:["library","job","expression","dhis2","alterState","dataValue","getData"]},sidebar:"library",previous:{title:"Update Person in CommCare V2",permalink:"/library/jobs/auto/Update-Person-in-CommCare-V2-2019-10-04"},next:{title:"Add data values",permalink:"/library/jobs/auto/DHIS2-DataValues-API"}},s=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],u={toc:s};function c(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: 0 - Get TEI data"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-dhis2"},(0,o.kt)("inlineCode",{parentName:"a"},"@openfn/language-dhis2"))),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-dhis2/releases/tag/v2.0.4"},(0,o.kt)("inlineCode",{parentName:"a"},"v2.0.4"))),(0,o.kt)("li",{parentName:"ul"},"Created 15 days ago"),(0,o.kt)("li",{parentName:"ul"},"Updated 13 days ago"),(0,o.kt)("li",{parentName:"ul"},"Score: ",(0,o.kt)("b",null,"69")," (an ",(0,o.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"alterState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"getData")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: get all TEIs with vaccination state 'NOT YET REQUESTED' via save filter from Austin.\n\n\n// NOTE: if we can get a webhook with the desired info, let's drop this job!\n\ngetData('trackedEntityInstances', {\n  fields: '*',\n  ou: 'V5XvX1wr1kF', // traningland?\n  program: 'EZkN8vYZwjR', //\n  trackedEntityInstance: dataValue('id'), // the value from the post\n});\n\nalterState(state => {\n  console.log('The response from DHIS2', state.data);\n  console.log('Only pass necessary data to the DIVOC job.');\n  const necessary = state.data.trackedEntityInstances[0];\n  console.log(necessary);\n  return { ...state, data: necessary };\n});\n\n")))}c.isMDXComponent=!0}}]);