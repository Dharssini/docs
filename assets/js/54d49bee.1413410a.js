"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[6892],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(a),m=r,_=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return a?n.createElement(_,s(s({ref:t},d),{},{components:a})):n.createElement(_,s({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},27083:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const o={title:"Coach Session Register",sidebar_label:"Coach Session Register",id:"Coach-Session-Register-2021-05-03",keywords:["library","job","expression","salesforce","dataValue","each","field","fields","query","relationship","upsert"]},s=void 0,i={unversionedId:"jobs/auto/Coach-Session-Register-2021-05-03",id:"jobs/auto/Coach-Session-Register-2021-05-03",title:"Coach Session Register",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Coach-Session-Register-2021-05-03.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Coach-Session-Register-2021-05-03",permalink:"/library/jobs/auto/Coach-Session-Register-2021-05-03",draft:!1,tags:[],version:"current",frontMatter:{title:"Coach Session Register",sidebar_label:"Coach Session Register",id:"Coach-Session-Register-2021-05-03",keywords:["library","job","expression","salesforce","dataValue","each","field","fields","query","relationship","upsert"]},sidebar:"library",previous:{title:"Attendance Non Skillz",permalink:"/library/jobs/auto/Attendance-Non-Skillz-2021-06-14"},next:{title:"Commcare & Phone Issues Log",permalink:"/library/jobs/auto/Commcare-Phone-Issues-Log-2022-10-21"}},c={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],d={toc:l};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name: Coach Session Register"),(0,r.kt)("li",{parentName:"ul"},"Adaptor: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,r.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,r.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,r.kt)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,r.kt)("li",{parentName:"ul"},"Created over 1 year ago"),(0,r.kt)("li",{parentName:"ul"},"Updated 7 months ago"),(0,r.kt)("li",{parentName:"ul"},"Score: ",(0,r.kt)("b",null,"18")," (an ",(0,r.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.kt)("h2",{id:"key-functions"},"Key Functions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"each"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"upsert")),(0,r.kt)("h2",{id:"expression"},"Expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// push to production\nquery(\n  `SELECT Coach_A__c, Coach_A__r.Name from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const present = dataValue('form.present')(state).toLowerCase();\n\n  function getSessionValue() {\n    let value;\n    switch (present) {\n      case 'yes':\n        value = 'X';\n        break;\n      case 'no':\n        value = 'A';\n        break;\n      case '':\n        value = 'N';\n        break;\n      default:\n        value = 'U';\n        break;\n    }\n    return value;\n  }\n\n  const session_text = dataValue('form.session')(state);\n\n  const session_id = session_text.trim().slice(0, session_text.indexOf(' ')).slice(1);\n\n  const coachname = dataValue('form.coach_name')(state)\n    ? dataValue('form.coach_name')(state)\n    : state.references[0].records[0].Coach_A__r.Name;\n\n  let external_id = `${dataValue('form.case.@case_id')(state)}\n    ${coachname}`; //case_id + coach_name for external Id\n\n  state.data.commcare_external_id = external_id.toLowerCase().replace(/\\s/g, '').trim();\n\n  state.data.dynamicFields = [\n    field(`Session_${session_id}__c`, getSessionValue()),\n    field(`Session_${session_id}_Date__c`, dataValue('form.date')(state)),\n    //field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state)), //NOTE: Duration fields don't exist in SF?\n  ];\n\n  state.data.durationFields = [field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state))];\n\n  return state;\n});\n\nupsert('Event__c', 'CommCare_Case_ID__c', state => ({\n  ...fields(field('CommCare_Case_ID__c', dataValue('form.case.@case_id'))),\n  ...fields(...state.data.durationFields),\n}));\n\nquery(\n  `SELECT Coach_A__c, Coach_A__r.CommCare_Ext_ID__c from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const coaches = dataValue('form.coach_name')(state).split(' ');\n  const dynamicFields = state.data.dynamicFields;\n  const commcare_external_id = state.data.commcare_external_id;\n  const caseid = state.data.form.case['@case_id'];\n  return each(\n    coaches,\n    upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n      ...fields(\n        relationship('RecordType', 'Name', 'Intervention (Staff)'),\n        relationship('Event__r', 'CommCare_Case_ID__c', caseid),\n        relationship('Person_Attendance__r', 'CommCare_Ext_ID__c', state => {\n          const coach_name = state.data;\n          return coach_name;\n        }),\n        field('CommCare_Ext_ID__c', commcare_external_id)\n      ),\n      ...fields(...dynamicFields),\n    }))\n  )(state);\n});\n\n")))}u.isMDXComponent=!0}}]);