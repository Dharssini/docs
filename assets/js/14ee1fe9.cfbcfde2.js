"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[19873],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},l=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,f=c["".concat(s,".").concat(u)]||c[u]||d[u]||o;return a?n.createElement(f,p(p({ref:t},l),{},{components:a})):n.createElement(f,p({ref:t},l))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,p[1]=i;for(var m=2;m<o;m++)p[m]=a[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1305:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const o={title:"maximo developer readme",id:"maximo-readme",keywords:["adaptor","readme","maximo"]},p="Developer README for the maximo adaptor",i={unversionedId:"packages/maximo-readme",id:"packages/maximo-readme",title:"maximo developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/maximo",source:"@site/adaptors/packages/maximo-readme.md",sourceDirName:"packages",slug:"/packages/maximo-readme",permalink:"/adaptors/packages/maximo-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"maximo developer readme",id:"maximo-readme",keywords:["adaptor","readme","maximo"]},sidebar:"adaptors",previous:{title:"maximo changelog",permalink:"/adaptors/packages/maximo-changelog"},next:{title:"maximo Config",permalink:"/adaptors/packages/maximo-configuration-schema"}},s={},m=[{value:"Documentation",id:"documentation",level:2},{value:"Fetch",id:"fetch",level:2},{value:"sample configuration",id:"sample-configuration",level:4},{value:"sample &#39;fetch&#39; expression",id:"sample-fetch-expression",level:4},{value:"sample &#39;create&#39; expression",id:"sample-create-expression",level:3},{value:"sample &#39;update75&#39; expression",id:"sample-update75-expression",level:3},{value:"Development",id:"development",level:2}],l={toc:m},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"developer-readme-for-the-maximo-adaptor"},"Developer README for the maximo adaptor"),(0,r.kt)("p",null,"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/maximo"},"https://github.com/OpenFn/adaptors/tree/main/packages/maximo")),(0,r.kt)("h1",{id:"language-maximo"},"Language Maximo"),(0,r.kt)("p",null,"Language Pack for building expressions and operations to access IBM Maximo EAM."),(0,r.kt)("h2",{id:"documentation"},"Documentation"),(0,r.kt)("h2",{id:"fetch"},"Fetch"),(0,r.kt)("h4",{id:"sample-configuration"},"sample configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "username": "taylor",\n  "password": "supersecret",\n  "baseUrl": "https://maximo-demo76.mro.com"\n}\n')),(0,r.kt)("h4",{id:"sample-fetch-expression"},"sample 'fetch' expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fetch({\n  endpoint: 'maxrest/rest/os/mxinventory',\n  query: {\n    ITEMNUM: '01226',\n    _format: 'json',\n  },\n  postUrl: 'https://www.openfn.org/inbox/not-real',\n});\n")),(0,r.kt)("h3",{id:"sample-create-expression"},"sample 'create' expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"create({\n  endpoint: 'maxrest/rest/os/mxinvbal/',\n  body: function (state) {\n    return {\n      ITEMNUM: dataValue('form.ITEMNUM')(state),\n      ITEMSETID: dataValue('form.ITEMSETID')(state),\n      SITEID: dataValue('form.SITEID')(state),\n      LOCATION: dataValue('form.LOCATION')(state),\n      ISSUEUNIT: 'FOO',\n      PHYSCNT: dataValue('PHYSCNT')(state),\n      BINNUM: dataValue('form.BINNUM')(state),\n    };\n  },\n});\n")),(0,r.kt)("h3",{id:"sample-update75-expression"},"sample 'update75' expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"update75({\n  endpoint: state => {\n    return (\n      'maxrest/rest/os/mxinvbal/' +\n      dataValue('form.question1.INVBALANCESID')(state)\n    );\n  },\n  body: state => {\n    return {\n      _action: 'AddChange', //this is required for the old Maximo API!\n      ITEMNUM: dataValue('form.ITEMNUM')(state),\n      ITEMSETID: dataValue('form.ITEMSETID')(state),\n      SITEID: dataValue('form.SITEID')(state),\n      LOCATION: dataValue('form.LOCATION')(state),\n      PHYSCNT: dataValue('form.PHYSCNT')(state),\n      BINNUM: dataValue('form.BINNUM')(state),\n    };\n  },\n});\n")),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("p",null,"Clone the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,r.kt)("p",null,"Run tests using ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,r.kt)("p",null,"Build the project using ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,r.kt)("p",null,"To just build the docs run ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}d.isMDXComponent=!0}}]);