(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{289:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),p=a,m=d["".concat(i,".").concat(p)]||d[p]||b[p]||o;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(8),o=(n(0),n(289)),i={title:"F1. Validate Contract Payment in Salesforce with salesforce",sidebar_label:"F1. Validate Contract Payment in Salesforce",id:"F1. Validate Contract Payment in Salesforce-2018-12-14",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","upsert"]},c={unversionedId:"jobs/auto/F1. Validate Contract Payment in Salesforce-2018-12-14",id:"jobs/auto/F1. Validate Contract Payment in Salesforce-2018-12-14",isDocsHomePage:!1,title:"F1. Validate Contract Payment in Salesforce with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/F1. Validate Contract Payment in Salesforce-2018-12-14.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/F1. Validate Contract Payment in Salesforce-2018-12-14",permalink:"/library/jobs/auto/F1. Validate Contract Payment in Salesforce-2018-12-14",version:"current",sidebar_label:"F1. Validate Contract Payment in Salesforce",frontMatter:{title:"F1. Validate Contract Payment in Salesforce with salesforce",sidebar_label:"F1. Validate Contract Payment in Salesforce",id:"F1. Validate Contract Payment in Salesforce-2018-12-14",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","upsert"]},sidebar:"library",previous:{title:"Create SMS linked to contact with salesforce",permalink:"/library/jobs/auto/Create-SMS-Linked-to-Contact-in-SF"},next:{title:"F3. Link Payment to Havanao Transactions with salesforce",permalink:"/library/jobs/auto/F3. Link Payment to Havanao Transactions-2018-12-14"}},s=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],l={toc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(o.b)("h2",{id:"metadata"},"Metadata"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Name: F1. Validate Contract Payment in Salesforce"),Object(o.b)("li",{parentName:"ul"},"Adaptor: ",Object(o.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(o.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(o.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(o.b)("li",{parentName:"ul"},"Created over 2 years ago"),Object(o.b)("li",{parentName:"ul"},"Updated over 2 years ago")),Object(o.b)("h2",{id:"key-functions"},"Key Functions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"alterState"),", ",Object(o.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(o.b)("inlineCode",{parentName:"p"},"field"),", ",Object(o.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(o.b)("inlineCode",{parentName:"p"},"upsert")),Object(o.b)("h2",{id:"expression"},"Expression"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"alterState(state => {\n  const {\n    msisdn,\n    District,\n    reference_number,\n    house_number,\n    contract_number,\n    payment_number\n  } = state.data;\n\n  state.districts = {\n    Bugesera: 'BG',\n    Gatsibo: 'GT',\n    Kamonyi: 'KM',\n    Kayonza: 'KY',\n    Ngoma: 'NG',\n    Rwamagana: 'RW'\n  };\n\n  const countryCode = (msisdn.substr(0, 3) == '250' ? 'RW' : 'Msisdn code not found');\n  const dist = state.districts[District];\n  const date = new Date().getFullYear().toString().substr(-2);\n  const houseId = `${countryCode}${dist}${date}-${reference_number}-${house_number}`;\n\n  state.contractId = `${houseId}-${contract_number}`;\n  state.paymentId = `${state.contractId}-${payment_number}`;\n\n  return upsert('Payment__c', 'EE_Payment_ID__c', fields(\n    field('EE_Payment_ID__c', state.paymentId),\n    relationship('Associated_Phase_Contract__r', 'EE_Contract_ID__c', state.contractId),\n    field('Amount_of_Payment__c', dataValue('amount')),\n    field('Payment_status__c', 'INITIATED'),\n    field('Payment_MSISDN__c', dataValue('msisdn')),\n    field('Date_Payment_Received_in_Bank__c', Date.now())\n  ))(state);\n});\n")))}u.isMDXComponent=!0}}]);