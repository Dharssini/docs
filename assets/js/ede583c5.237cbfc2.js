"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[52084],{95788:(e,t,n)=>{n.d(t,{Iu:()=>p,yg:()=>f});var r=n(11504);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),g=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=g(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=g(n),d=a,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var g=2;g<i;g++)o[g]=n[g];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var r=n(45072),a=(n(11504),n(95788));const i={title:"Triggers"},o=void 0,s={unversionedId:"build/triggers",id:"build/triggers",title:"Triggers",description:"Triggers are responsible for starting workflows automatically. They come in 2",source:"@site/docs/build/triggers.md",sourceDirName:"build",slug:"/build/triggers",permalink:"/documentation/build/triggers",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/build/triggers.md",tags:[],version:"current",frontMatter:{title:"Triggers"},sidebar:"docs",previous:{title:"Workflows",permalink:"/documentation/build/workflows"},next:{title:"Configure Steps",permalink:"/documentation/build/steps/"}},l={},g=[{value:"Trigger types",id:"trigger-types",level:2},{value:"Webhook Event Triggers",id:"webhook-event-triggers",level:3},{value:"Cron Triggers (formerly timers)",id:"cron-triggers-formerly-timers",level:3},{value:"Managing the size of <code>state</code> for Cron Workflows",id:"managing-the-size-of-state-for-cron-workflows",level:4},{value:"A quick fix for final state bloat",id:"a-quick-fix-for-final-state-bloat",level:4}],p={toc:g},c="wrapper";function u(e){let{components:t,...i}=e;return(0,a.yg)(c,(0,r.c)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,'Triggers are responsible for starting workflows automatically. They come in 2\ntypes: "cron" triggers and "webhook event" triggers.'),(0,a.yg)("h2",{id:"trigger-types"},"Trigger types"),(0,a.yg)("h3",{id:"webhook-event-triggers"},"Webhook Event Triggers"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Webhook Event Triggers")," watch for inbound http requests or messages, and enable\nreal-time event-based automation."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"These Triggers are fired by \u201cpushing\u201d data to OpenFn (i.e., by sending a HTTP\n\u201cPOST\u201d request to your trigger\u2019s designated URL)."),(0,a.yg)("li",{parentName:"ul"},"This triggering HTTP request might be sent via a webhook in an external app,\nanother OpenFn workflow, or manually (i.e., via cURL request).")),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Webhook Trigger",src:n(4284).c,width:"512",height:"706"})),(0,a.yg)("h3",{id:"cron-triggers-formerly-timers"},"Cron Triggers (formerly timers)"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Cron Triggers")," run Workflows based on a cron schedule, and are good for\nrepetitive tasks that are time-based (e.g., every day at 8am, sync financial\ndata)."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"These Triggers enable users to \u201cpull\u201d data from connected systems."),(0,a.yg)("li",{parentName:"ul"},"You can pick a standard schedule (e.g., every day, or every month), or define\na custom schedule using cron expressions.")),(0,a.yg)("p",null,"These Triggers enable Workflows to be run as frequently as once every minutes,\nor as infrequently as you desire and can be scheuled on very specific dates or\ntimes."),(0,a.yg)("p",null,"Each time a timed job succeeds, its ",(0,a.yg)("inlineCode",{parentName:"p"},"final_state")," will be saved and used as the\n",(0,a.yg)("inlineCode",{parentName:"p"},"initial_state"),' for its next run. See "Managing state" and "Keeping a cursor"\nbelow for implementation help.'),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Cron Trigger",src:n(60968).c,width:"492",height:"710"})),(0,a.yg)("admonition",{title:"Help with cron expressions",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"The best way to learn about ",(0,a.yg)("inlineCode",{parentName:"p"},"cron"),", if you're not already familiar, is through\nthe OpenFn interface or"),(0,a.yg)("a",{href:"https://crontab.guru",target:"_blank"},"crontab.guru"),"."),(0,a.yg)("h4",{id:"managing-the-size-of-state-for-cron-workflows"},"Managing the size of ",(0,a.yg)("inlineCode",{parentName:"h4"},"state")," for Cron Workflows"),(0,a.yg)("p",null,"Since state is passed between each run of a cron Workflow, if your Workflow Step\nadds something new to state each time it runs, it may quickly become too large\nto be practically handled. Imagine if a server response were adding, via\n",(0,a.yg)("inlineCode",{parentName:"p"},"array.push(...)"),", to ",(0,a.yg)("inlineCode",{parentName:"p"},"state.references")," each time the job ran. OpenFn supports\nup to 50,000 bytes (via Erlang's ",(0,a.yg)("inlineCode",{parentName:"p"},"byte_size"),"), though most ",(0,a.yg)("inlineCode",{parentName:"p"},"final_state")," byte\nsizes are between 100 and 1000."),(0,a.yg)("p",null,"If the size of your ",(0,a.yg)("inlineCode",{parentName:"p"},"final_state")," exceeds 10,000 bytes, OpenFn will send project\ncollaborators a warning email. If it exceeds 50,000 bytes, your run will still\nsucceed but its ",(0,a.yg)("inlineCode",{parentName:"p"},"final_state")," will not be saved and the next time that job runs\nit will inherit the previous, un-updated final state. (I.e., the last state that\nwas < 50,000 bytes.)"),(0,a.yg)("h4",{id:"a-quick-fix-for-final-state-bloat"},"A quick fix for final state bloat"),(0,a.yg)("p",null,"Most often, final state bloat is due to improper handling of ",(0,a.yg)("inlineCode",{parentName:"p"},"state.references"),"\nor ",(0,a.yg)("inlineCode",{parentName:"p"},"state.data"),". This can be fixed by adding the following lines ",(0,a.yg)("em",{parentName:"p"},"either")," to the\ncallback of your language-package's operation (if it allows for one) or by\nappending an ",(0,a.yg)("inlineCode",{parentName:"p"},"fn(...)")," operation after your operation."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"fn(state => {\n  state.custom = somethingIntentional;\n  state.data = {};\n  state.references = [];\n  return state;\n});\n")))}u.isMDXComponent=!0},60968:(e,t,n)=>{n.d(t,{c:()=>r});const r=n.p+"assets/images/cron_trigger-65e425bf9442fa127c2c3d117810e3c7.png"},4284:(e,t,n)=>{n.d(t,{c:()=>r});const r=n.p+"assets/images/webhook_trigger-b8ab066bd761552d7d734a3179b81832.png"}}]);