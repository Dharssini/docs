"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[3779],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var _=o.createContext({}),l=function(e){var n=o.useContext(_),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(_.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,_=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=r,p=m["".concat(_,".").concat(d)]||m[d]||u[d]||a;return t?o.createElement(p,i(i({ref:n},c),{},{components:t})):o.createElement(p,i({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var _ in n)hasOwnProperty.call(n,_)&&(s[_]=n[_]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},53222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=t(87462),r=(t(67294),t(3905));const a={title:"TEST] Bulk Upsert Person Visit",sidebar_label:"TEST] Bulk Upsert Person Visit",id:"TEST-Bulk-Upsert-Person-Visit-2022-07-11",keywords:["library","job","expression","salesforce","bulk","join","map"]},i=void 0,s={unversionedId:"jobs/auto/TEST-Bulk-Upsert-Person-Visit-2022-07-11",id:"jobs/auto/TEST-Bulk-Upsert-Person-Visit-2022-07-11",title:"TEST] Bulk Upsert Person Visit",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/TEST-Bulk-Upsert-Person-Visit-2022-07-11.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/TEST-Bulk-Upsert-Person-Visit-2022-07-11",permalink:"/library/jobs/auto/TEST-Bulk-Upsert-Person-Visit-2022-07-11",draft:!1,tags:[],version:"current",frontMatter:{title:"TEST] Bulk Upsert Person Visit",sidebar_label:"TEST] Bulk Upsert Person Visit",id:"TEST-Bulk-Upsert-Person-Visit-2022-07-11",keywords:["library","job","expression","salesforce","bulk","join","map"]},sidebar:"library",previous:{title:"Risk and Vulnerability Assessment",permalink:"/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27"},next:{title:"Upsert Aggregate Service Referrals",permalink:"/library/jobs/auto/Upsert-Aggregate-Service-Referrals-2021-04-30"}},_={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name: TEST] Bulk Upsert Person Visit"),(0,r.kt)("li",{parentName:"ul"},"Adaptor: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,r.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,r.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.10.0"},(0,r.kt)("inlineCode",{parentName:"a"},"v2.10.0"))),(0,r.kt)("li",{parentName:"ul"},"Created 4 months ago"),(0,r.kt)("li",{parentName:"ul"},"Updated 29 days ago"),(0,r.kt)("li",{parentName:"ul"},"Score: ",(0,r.kt)("b",null,"63")," (an ",(0,r.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.kt)("h2",{id:"key-functions"},"Key Functions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bulk"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"map")),(0,r.kt)("h2",{id:"expression"},"Expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fn(state => {\n\n  const handleMultiSelect = multiField => {\n    return multiField\n      ? multiField\n        .replace(/ /gi, ';')\n        .toLowerCase()\n        .split(';')\n        .map(value => {\n          return (\n            value.charAt(0).toUpperCase() + value.slice(1).replace('_', ' ')\n          );\n        })\n        .join(';')\n      : '';\n  };\n\n  const handleMultiSelectOriginal = multiField => {\n    return multiField\n      ? multiField\n        .replace(/ /gi, ';')\n        .toLowerCase()\n        .split(';')\n        .map(value => {\n          return (\n            value\n          );\n        })\n        .join(';')\n      : '';\n  };\n\n  // const locationsByUserId = state.references[0].records.reduce((acc, loc) => {\n  //   const {\n  //     CommCare_User_ID__c,\n  //     Id,\n  //     Parent_Geographic_Area__c,\n  //     Parent_Geographic_Area__r,\n  //   } = loc;\n\n  //   return {\n  //     ...acc,\n  //     [CommCare_User_ID__c]: {\n  //       sfId: Id,\n  //       area: Parent_Geographic_Area__c,\n  //       catchment: Parent_Geographic_Area__r.Parent_Geographic_Area__c,\n  //     },\n  //   };\n  // }, {})\n\n\n\n  const transformMultiselect = choice => {\n    var choice2 = handleMultiSelect(choice);\n    return choice2 ? choice2.replace(/_/g, ' ') : '';\n  }\n\n  const yesNoToBoolean = item => {\n    return item === 'Yes' ? true : false;\n  }\n\n  const transformReason = (reason, map) => {\n    return reason ? map[reason] : undefined;\n  }\n\n  const checkAlternativePath = (path1, path2) => {\n    return path1 == undefined ? path2 : path1\n  }\n\n  const joinMap = (status, map) => {\n    var value =\n      status && status !== ''\n        ? status\n          .replace(/ /gi, ';')\n          .split(';')\n          .map(value => {\n            return map[value] || value;\n          })\n        : undefined;\n    return value ? value.join(';') : undefined;\n  }\n\n  const transformSigns = signs => {\n    return signs\n      ? signs\n        .toLowerCase()\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(';')\n        .toString()\n        .replace(/_/g, ' ')\n      : signs;\n  }\n\n  const transformChoiceGroups = (x, map) => {\n    var choices =\n      jsonValue(x, 'form.treatment_and_tracking.counseling.counsel_topic')\n      || jsonValue(x, 'form.counseling.counsel_topic')\n    var choiceGroups = choices ? choices.split(' ') : null;\n    var choicesMulti = choiceGroups\n      ? choiceGroups\n        .map(cg => {\n          return map[cg];\n        })\n        .join(';')\n      : choiceGroups;\n    return choicesMulti;\n  }\n\n  const cleanChoice = choice => {\n    if (choice) {\n      return choice.charAt(0).toUpperCase() + choice.slice(1).replace('_', ' ');\n    } else {\n      return '';\n    }\n  }\n\n  const transformChoice = choice => {\n    return choice ? choice.toString().replace(/_/g, ' ') : undefined;\n  }\n\n  const determineRecordType = x => {\n    var rt = x.form.RecordType\n\n    if (rt === 'Unborn' || rt === 'Child') {\n      return 'Child Visit';\n    };\n    if (rt === 'Youth') {\n      return 'Youth Visit';\n    };\n    if (rt === 'Male Adult') {\n      return 'Adult Male Visit';\n    };\n    if (rt === 'Female Adult') {\n      return 'Adult Female Visit';\n    };\n  }\n\n  const getClosedDate = x => {\n    var closed = x.form.case.update.closed\n    var date = x.server_modified_on\n    return closed && closed == true ? date : undefined;\n  };\n\n  const lookupMap = (item, map) => {\n    return item ? map[item] : undefined;\n  };\n\n  const pregDangerMap = {\n    Vaginal_Bleeding: 'Vaginal Bleeding',\n    Water_Breaks: 'Water Breaks before Time of Delivery',\n    Prolonged_Labour: 'Prolonged Labour over 12 Hours',\n    Convulsions: 'Convulsions or Fits',\n    Abdominal_Pain: 'Severe Abdominal Pain before Delivery',\n    High_Fever: 'High Fever',\n    Low_Baby_Movement: 'Feeling the Baby move less or not at all',\n    Swelling: 'Swelling of Face and Hands',\n    Severe_Headache: 'Severe or Continuous Headache for more than 12 hours',\n    Severe_Vomiting: 'Severe or Continuous Vomiting',\n    none: 'None',\n  };\n\n  const counselMap = {\n    anc_visits: 'ANC Visits',\n    early_initiation_of_anc_less_than_3_months:\n      'Early initiation of ANC (less than 3 months)',\n    completing_recomended_anc_visits: 'Completing recomended ANC visits',\n    danger_signs: 'Danger signs',\n    skilled_birth: 'Skilled birth',\n    immunization: 'Immunization',\n    individual_birth_plan: 'Individual Birth Plan',\n    emergency_preparedness: 'Emergency preparedness',\n    childcare_and_affection: 'Childcare and affection',\n    nutrition_counseling: 'Nutrition counseling',\n    growth_monitoring: 'Growth monitoring',\n    exclusive_breastfeeding: 'Exclusive breastfeeding',\n    complementary_feeding: 'Complementary feeding',\n    sleeping_under_llitn: 'Sleeping under LLITN',\n    knowing_hiv_status: 'Knowing HIV status',\n    indoor_pollution: 'Indoor pollution',\n    personal_hygiene: 'Personal Hygiene',\n    safe_drinking_water: 'Safe drinking water',\n    safe_disposal_of_human_waste: 'Safe disposal of human waste',\n  };\n\n  const serviceMap = {\n    Scheduled_PSC_Apt: 'Scheduled PSC Apt',\n    Adverse_Drug_Reaction_Side_Effect: 'Adverse Drug Reaction/Side Effect',\n    Malnutrition: 'Malnutrition',\n    Malaria: 'Malaria',\n    TB: 'TB',\n    Treatment_for_Other_OIs: 'Treatment for other Ols',\n    ARI: 'ARI',\n    Anemia: 'Anemia',\n    Diarrhea: 'Diarrhea',\n    Pregnancy_Care: 'Pregnancy Care (ANC)',\n    Family_Planning: 'Family Planning (FP)',\n    Preconception_Counseling: 'Preconception Counseling',\n    Injury: 'Injury',\n    Other: 'Other',\n  };\n\n  const reasonMap = {\n    lack_of_access_to_fp_information: 'Lack of access to FP information',\n    no_access_to_fp_services_hospitals:\n      'Lack of hospitals or places where FP services can be accessed',\n    not_willing_to_use_fp_due_to_negative_effects_myths_and_misconceptions:\n      'Myths and misconceptions',\n    barriers_at_service_delivery_points: 'Barriers at service delivery points',\n    pregnant: 'The client is pregnant',\n    intentions_of_getting_pregnant: 'Intentions of getting pregnant',\n    not_sexually_active: 'The client is not sexually active',\n    other_barriers_culture_male_partners_parents_etc:\n      'Other barriers (culture, male partners, parents, etc)',\n  };\n\n  const milestoneTypeMap = {\n    cognitive_delays_learning_difficulties:\n      'Cognitive Delays Learning Difficulties',\n    motor_delays: 'Motor Delays',\n    speech_and_language_delay: 'Delay Speech and Language Delay',\n    social_and_emotional: 'Social and emotional',\n  };\n\n  const milestoneMap = {\n    movement: 'Movement',\n    hearing: 'Hearing',\n    communication: 'Communication',\n    seeing: 'Seeing',\n    cognitive_delays: 'Cognitive Delays',\n    play: 'Play',\n  };\n\n  const nutritionMap = {\n    severe: 'Severely Malnourished',\n    moderate: 'Moderately Malnourished',\n    normal: 'Normal',\n  };\n\n  const fpMethodMap = {\n    male_condoms: \"Male condoms\",\n    female_condoms: \"Female condoms\",\n    pop: \"POP\",\n    coc: \"COC\",\n    emergency_pills: \"Emergency pills\",\n    none: \"None\"\n  };\n\n  const supervisorMap = {\n    community_health_nurse: \"Community_health_nurse\",\n    chw_supervisor: \"CHW_supervisor\",\n    chewschas: \"Chewschas\",\n    other: \"Other\",\n    none: \"None\"\n  };\n\n  const symptomsMap = {\n    convulsions: 'Convulsions',\n    not_able_to_eatdrink: 'Not able to drink or feed at all',\n    vomits_everything: 'Vomits everything',\n    'chest_in-drawing': 'Chest in - drawing',\n    unusually_sleepyunconscious: 'Unusually sleepy or unconscious',\n    swelling_of_both_feet: 'Swelling of both feet',\n    none: \"None\",\n  };\n\n  const treatmentDistributionMap = {\n    ors_205gltr_sachets: 'ORS (20.5h/ltr): Sachets',\n    acts_6s: 'ACTs (6s)',\n    acts_12s: 'ACTs (12s)',\n    acts_18s: 'ACTs (18s)',\n    acts_24s: 'ACTs (24s)',\n    albendazole_abz_tabs: 'Albendazole (ABZ): Tabs',\n    paracetamol_tabs: 'Tetracycline Eye Ointment (TEO): 1%:tube',\n    tetracycline_eye_ointment_teo_1_tube: 'Tetracycline Eye Ointment (TEO): 1%:tube',\n    amoxycillin: 'Amoxycillin (125mg/5mls: Bottle',\n    none: 'None'\n  };\n  \n  const childDangerSignsMap = {\n    none: 'None',\n    Poor_Breastfeeding: 'Poor Breastfeeding',\n    not_able_to_feed_since_birth_or_stopped_feeding_well: 'Not able to feed since birth, or stopped feeding well',\n    not_able_to_breastfeed: 'Not able to breastfeed',\n    Fever: 'Fever',\n    very_low_temperature: 'Very low temperature (35.4 C or less)',\n    shivering: 'Shivering',\n    Fast_Breathing: 'Fast Breathing',\n    Very_Sleepy: 'Very Sleepy',\n    Convulsions_and_Fits: 'Convulsions and Fits',\n    only_moves_when_stimulated_or_does_not_move_even_on_stimulation: 'Only moves when stimulated, or does not move even on stimulation',\n    yellow_solebaby_body_turning_yellow_especially_eyes_palms_soles: 'Yellow sole(Baby body turning yellow especially eyes, palms,soles)',\n    bleeding_from_the_umbilical_stump: 'Bleeding from the umbilical stump',\n    signs_of_local_infection_umbilicus_is_red_or_draining_pus_skin_boils_or_eye: 'Signs of local infection: umbilicus is red or draining pus, skin boils, or eyes draining pus',\n    weight_chart_using_color_coded_scales_if_red_or_yellowweight_below_25kg_or_: 'Weight chart using color coded scales if RED or YELLOW(Weight below 2.5kg or born less than 36 weeks of age)',\n    unable_to_cry: 'Unable to cry',\n    cyanosis: 'Cyanosis',\n    bulging_fontanelle: 'Bulging fontanelle'\n};\n\n  const testusers = ['test.2021', 'test.location', 'test.michel', 'test.nkamagambo', 'anthony.maina', 'anthony', 'beth.test', 'chw_test_sd', 'erinsuptest', 'erintest', 'julia.test', 'lwala', 'lwalachw', 'omondi.george', 'openfn', 'pamela.test', 'paul.odero', 'philip.herman', 'sup_test_sd', 'test_user', 'test.chw', 'tonnie.maina'];\n\n  const visits = state.data.commCareSubmissions.filter(x => {return (!testusers.includes(x.metadata.username))}).map(x => {\n    return {\n      'Person__r.CommCare_ID__c': x.form.case['@case_id'],\n      CommCare_Visit_ID__c: x.metadata.instanceID,\n      CommCare_ID__c: x.id,\n      Date__c: x.form.Date,\n      Birth_Status__c: jsonValue(x, 'form.ANCs.pregnancy_danger_signs.Delivery_Information.child_status'),\n      // Catchment__c: locationsByUserId[x.form.owner_id].catchment,\n      'Catchment__r.Name': jsonValue(x, 'form.location_info.catchment_name'),\n      'RecordType.Name': determineRecordType(x),\n      Use_mosquito_net__c: cleanChoice(jsonValue(x, 'form.question1.sleep_under_net')),\n      Individual_birth_plan_counselling__c: jsonValue(x, 'form.ANCs.pregnancy_danger_signs.individual_birth_plan'),\n      Reason_for_not_taking_a_pregnancy_test__c: transformChoice(jsonValue(x, 'form.TT5.Mother_Information.pregancy_test.No_Preg_Test')),\n      Pregnancy_danger_signs__c: lookupMap(jsonValue(x, 'form.ANCs.pregnancy_danger_signs.pregnancy_danger_signs'), pregDangerMap),\n      Child_Danger_Signs__c: lookupMap(jsonValue(x, 'form.TT5.Child_Information.Danger_Signs.Other_Danger_Signs'), childDangerSignsMap),\n      Current_Malaria_Status__c: cleanChoice(jsonValue(x, 'form.Malaria_Status')),\n      Malaria_Home_Test__c: jsonValue(x, 'form.treatment_and_tracking.malaria_test_date'),\n      Malaria_Home_Treatment__c: jsonValue(x, 'form.treatment_and_tracking.malaria_test_date'),\n      Persons_symptoms__c: joinMap(jsonValue(x, 'form.treatment_and_tracking.symptoms_check_other'), symptomsMap),\n      Active_in_Support_Group__c: jsonValue(x, 'form.HAWI.Support_Group'),\n      HAWI_Defaulter__c: yesNoToBoolean(jsonValue(x, 'form.HAWI.default')),\n      Date_of_Default__c: jsonValue(x, 'form.HAWI.date_of_default'),\n      Persons_temperature__c: jsonValue(x, 'form.treatment_and_tracking.temperature'),\n      Days_since_illness_start__c: checkAlternativePath(jsonValue(x, 'form.duration_of_sickness'), jsonValue(x, 'form.treatment_and_tracking.duration_of_sickness')),\n      Newborn_visited_48_hours_of_delivery__c: jsonValue(x, 'form.TT5.Child_Information.newborn_visited_48_hours_of_delivery'),\n      Newborn_visited_by_a_CHW_within_6_days__c: jsonValue(x, 'form.TT5.Child_Information.visit_6_days_from_delivery'),\n      Malaria_test__c: cleanChoice(jsonValue(x, 'form.treatment_and_tracking.malaria_test')),\n      Fever__c: cleanChoice(jsonValue(x, 'form.treatment_and_tracking.symptoms_check_fever')),\n      Cough__c: cleanChoice(jsonValue(x, 'form.treatment_and_tracking.symptoms_check_cough')),\n      Diarrhoea__c: cleanChoice(jsonValue(x, 'form.treatment_and_tracking.check_diarrhea')),\n      TB_patients_therapy_observed__c: jsonValue(x, 'form.treatment_and_tracking.observed_tb_therapy'),\n      Injuries_or_wounds__c: jsonValue(x, 'form.treatment_and_tracking.wounds_or_injuries'),\n      Currently_on_ART_s__c: jsonValue(x, 'form.HAWI.ART'),\n      Immediate_Breastfeeding__c: jsonValue(x, 'form.ANCs.pregnancy_danger_signs.Delivery_Information.Breastfeeding_Delivery'),\n      Exclusive_Breastfeeding__c: jsonValue(x, 'form.TT5.Child_Information.Exclusive_Breastfeeding.Exclusive_Breastfeeding'),\n      Counselled_on_Exclusive_Breastfeeding__c: jsonValue(x, 'form.TT5.Child_Information.Exclusive_Breastfeeding.counseling'),\n      LMP__c: jsonValue(x, 'form.TT5.Mother_Information.when_was_your_lmp'),\n      Family_Planning__c: cleanChoice(jsonValue(x, 'form.TT5.Mother_Information.family_planning')),\n      Family_Planning_Method__c: jsonValue(x, 'form.TT5.Mother_Information.family_planning_method'),\n      FP_Method_Distributed__c: joinMap(jsonValue(x, 'form.TT5.Mother_Information.FP_commodity'), fpMethodMap),\n      Reasons_for_not_taking_FP_method__c: joinMap(jsonValue(x, 'form.TT5.Mother_Information.No_FPmethod_reason'), reasonMap),\n      Pregnant__c: yesNoToBoolean(jsonValue(x, 'form.TT5.Mother_Information.Pregnant')),\n      Counselled_on_FP_Methods__c: cleanChoice(jsonValue(x, 'form.TT5.Mother_Information.CounselledFP_methods')),\n      Client_counselled_on__c: transformChoiceGroups(x, counselMap),\n      Client_provided_with_FP__c: cleanChoice(jsonValue(x, 'form.TT5.Mother_Information.was_the_woman_15-49yrs_provided_with_family_planning_commodities_by_chv')),\n      Newborn_visited_48_hours_of_delivery__c: jsonValue(x, 'form.TT5.Child_Information.newborn_visited_48_hours_of_delivery'),\n      Mother_visit_counselling__c: handleMultiSelectOriginal(jsonValue(x, 'form.TT5.Child_Information.did_you_consel_the_mother_on1')),\n      mother_visited_48_hours_of_the_delivery__c: jsonValue(x, 'form.TT5.Child_Information.visit_mother_48'),\n      Newborn_visit_counselling__c: handleMultiSelectOriginal(jsonValue(x, 'form.TT5.Child_Information.did_you_consel_the_mother_on2')),\n      Know_HIV_status__c: checkAlternativePath(jsonValue(x, 'form.known_hiv_status'), jsonValue(x, 'form.HAWI.known_hiv_status')),\n      HIV_Status__c: checkAlternativePath( jsonValue(x, 'form.hiv_status'),jsonValue(x, 'form.HAWI.hiv_status')),\n      Treatment_Distribution__c: joinMap(jsonValue(x, 'form.treatment_and_tracking.distribution.distributed_treatments'), treatmentDistributionMap),\n      Current_Height__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition.current_height'),\n      Current_MUAC__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition.MUAC'),\n      Current_Nutrition_Status__c: transformReason(jsonValue(x, 'form.TT5.Child_Information.Nutrition2.Nutrition_Status'), nutritionMap),\n      Default_on_TB_treatment__c: cleanChoice(jsonValue(x, 'form.treatment_and_tracking.default_tb_treatment')),\n      Received_pregnancy_test__c: jsonValue(x, 'form.TT5.Mother_Information.pregancy_test.did_you_adminsiter_a_pregnancy_test'),\n      Pregnancy_test_result__c: jsonValue(x, 'form.TT5.Mother_Information.pregancy_test.pregnancy_test_result'),\n      Chronic_illness__c: transformMultiselect(jsonValue(x, 'form.question1.please_specify_which_chronic_illness_the_person_has')),\n      Childs_breath_per_minute__c: jsonValue(x, 'form.psbi.breaths_per_minuite'),\n      Child_chest_in_drawing__c: jsonValue(x, 'form.psbi.Child_chest_in_drawing_c'),\n      Caregiver_counseled_on_delayed_milestone__c: jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.did_you_counsel_the_caregiver_on_delayed_milestones'),\n      Delayed_Milestone__c: jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.does_the_child_has_a_delayed_milestone'),\n      Child_has_2_or_more_play_items__c: jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.does_the_child_has_2_or_more_play_items_at_home'),\n      Child_has_3_more_picture_books__c: jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.does_the_child_has_3_or_more_picture_books'),\n      Delayed_Milestones_Counselled_On__c: transformReason(jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.which_delayed_milestone_area_did_you_counsel_the_caregiver_on'), milestoneMap),\n      Delayed_Milestone_Type__c: transformReason(jsonValue(x, 'form.TT5.Child_Information.ecd_milestones.which_delayed_milestone'), milestoneTypeMap),\n      Caretaker_trained_in_muac__c: jsonValue(x, 'form.TT5.Child_Information.caretaker_muac.mother_trained_muac'),\n      Caretaker_screened_for_muac_this__c: jsonValue(x, 'form.TT5.Child_Information.caretaker_muac.mother_screened_child_muac'),\n      Caretaker_muac_findings__c: jsonValue(x, 'form.TT5.Child_Information.caretaker_muac.mother_screened_child_muac_result'),\n      Caretaker_action_after_muac_screening__c: jsonValue(x, 'form.TT5.Child_Information.caretaker_muac.mother_screened_muac_action'),\n      of_Caretaker_MUAC_screenings__c: jsonValue(x, 'form.TT5.Child_Information.caretaker_muac.mother_nb_screening'),\n      Pulse_Oximeter__c: jsonValue(x, 'form.psbi.pulse_oximeter_available'),\n      Heart_Rate_Pulse_Oximeter__c: jsonValue(x, 'form.psbi.heart_rate_pulse_oximeter'),\n      Oxygen_Concentration_Pulse_Oximeter__c: jsonValue(x, 'form.psbi.oxygen_concentration'),\n      Can_child_drink__c: jsonValue(x, 'form.psbi.can_child_drink'),\n      Antibiotic_provided_for_fast_breathing__c: jsonValue(x, 'form.psbi.antibiotic_fast_breathing'),\n      Antibiotic_provided_for_chest_indrawing__c: jsonValue(x, 'form.psbi.antibiotic_chest_indrawing'),\n      Supervisor_Visit__c: joinMap(jsonValue(x, 'form.supervisor_visit'), supervisorMap),\n      Nutrition_Case_Managed__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition2.nutrition_case_managed'),\n      Nutrition_Danger_Signs__c: handleMultiSelectOriginal(jsonValue(x, 'form.TT5.Child_Information.Nutrition2.nutrition_danger_signs')),\n      Why_was_nutrition_case_not_managed__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition2.nutrition_case_not_managed_why'),\n      Community_Nutrition_Treatment__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition2.nutrition_treatment_severe'),\n      Why_was_nutrition_treatment_not_given__c: jsonValue(x, 'form.TT5.Child_Information.Nutrition2.nutrition_treatment_not_given'),\n      Bulk_Upload__c: true\n      // Case_Closed_Date__c: getClosedDate(x) // Removed from SF?\n    }\n  }\n  );\n\n  return { ...state, visits };\n});\n\nbulk(\n  'Person_visit__c',\n  'upsert',\n  {\n    extIdField: 'CommCare_ID__c',\n    failOnError: true,\n    allowNoOp: true,\n  },\n  state => {\n    console.log('Bulk upserting visits.');\n    return state.visits;\n  }\n);  \n")))}u.isMDXComponent=!0}}]);