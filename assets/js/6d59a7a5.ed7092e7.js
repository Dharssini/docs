"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[24869],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>f});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),d=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=d(e.components);return t.createElement(l.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return n?t.createElement(f,o(o({ref:a},c),{},{components:n})):t.createElement(f,o({ref:a},c))}));function f(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6312:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=n(58168),r=(n(96540),n(15680));const i={title:"Job Code Examples",sidebar_label:"Job Code Snippets & Examples"},o=void 0,s={unversionedId:"build/steps/job-examples",id:"build/steps/job-examples",title:"Job Code Examples",description:"Snippets and samples",source:"@site/docs/build/steps/job-examples.md",sourceDirName:"build/steps",slug:"/build/steps/job-examples",permalink:"/documentation/build/steps/job-examples",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/build/steps/job-examples.md",tags:[],version:"current",frontMatter:{title:"Job Code Examples",sidebar_label:"Job Code Snippets & Examples"},sidebar:"docs",previous:{title:"Write Jobs",permalink:"/documentation/build/steps/jobs"},next:{title:"Operations",permalink:"/documentation/build/steps/operations"}},l={},d=[{value:"Snippets and samples",id:"snippets-and-samples",level:2},{value:"Job expression (for CommCare to SF)",id:"job-expression-for-commcare-to-sf",level:3},{value:"Accessing the &quot;data array&quot; in Open Data Kit submissions",id:"accessing-the-data-array-in-open-data-kit-submissions",level:3},{value:"ODK to Salesforce: create parent record with many children from parent data",id:"odk-to-salesforce-create-parent-record-with-many-children-from-parent-data",level:3},{value:"Create many child records WITHOUT a repeat group in ODK",id:"create-many-child-records-without-a-repeat-group-in-odk",level:3},{value:"Salesforce: perform an update",id:"salesforce-perform-an-update",level:3},{value:"Salesforce: Set record type using &#39;relationship(...)&#39;",id:"salesforce-set-record-type-using-relationship",level:3},{value:"Salesforce: Set record type using record Type ID",id:"salesforce-set-record-type-using-record-type-id",level:3},{value:"Telerivet: Send SMS based on Salesforce workflow alert",id:"telerivet-send-sms-based-on-salesforce-workflow-alert",level:3},{value:"HTTP: fetch but don&#39;t fail!",id:"http-fetch-but-dont-fail",level:3},{value:"Sample DHIS2 events API job:",id:"sample-dhis2-events-api-job",level:3},{value:"Sample DHIS2 data value sets API job:",id:"sample-dhis2-data-value-sets-api-job",level:3},{value:"sample openMRS expression, creates a person and then a patient",id:"sample-openmrs-expression-creates-a-person-and-then-a-patient",level:3},{value:"merge many values into a child path",id:"merge-many-values-into-a-child-path",level:3},{value:"arrayToString",id:"arraytostring",level:3},{value:"access an image URL from an ODK submission",id:"access-an-image-url-from-an-odk-submission",level:3},{value:"alterState (alter state) to make sure data is in an array",id:"alterstate-alter-state-to-make-sure-data-is-in-an-array",level:3},{value:"Login in to a server with a custom SSL Certificate",id:"login-in-to-a-server-with-a-custom-ssl-certificate",level:3},{value:"Anonymous Functions",id:"anonymous-functions",level:2},{value:"Custom replacer",id:"custom-replacer",level:3},{value:"Custom arrayToString",id:"custom-arraytostring",level:3},{value:"Custom concatenation",id:"custom-concatenation",level:3},{value:"Concatenation of null values",id:"concatenation-of-null-values",level:3},{value:"Custom Nth reference ID",id:"custom-nth-reference-id",level:3},{value:"Convert date string to standard ISO date for Salesforce",id:"convert-date-string-to-standard-iso-date-for-salesforce",level:3},{value:"Use external ID fields for relationships during a bulk load in Salesforce",id:"use-external-id-fields-for-relationships-during-a-bulk-load-in-salesforce",level:3},{value:"Bulk upsert with an external ID in salesforce",id:"bulk-upsert-with-an-external-id-in-salesforce",level:3}],c={toc:d},u="wrapper";function p(e){let{components:a,...n}=e;return(0,r.yg)(u,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"snippets-and-samples"},"Snippets and samples"),(0,r.yg)("p",null,"Below you can find some code block for different functions and data\nhandling contexts to use in your Jobs. ",(0,r.yg)("strong",{parentName:"p"},"Also see the ",(0,r.yg)("a",{parentName:"strong",href:"/adaptors/library"},"Library Examples")," for more Job examples for other Adaptors.")),(0,r.yg)("admonition",{title:"Questions?",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"If you have any job-writing questions, ask on ",(0,r.yg)("a",{parentName:"p",href:"https://community.openfn.org"},"Community")," to seek assistance from the OpenFn core team and other implementers. ")),(0,r.yg)("h3",{id:"job-expression-for-commcare-to-sf"},"Job expression (for CommCare to SF)"),(0,r.yg)("p",null,"The following job expression will take a matching receipt and use data from that\nreceipt to upsert a ",(0,r.yg)("inlineCode",{parentName:"p"},"Patient__c")," record in Salesforce and create multiple new\n",(0,r.yg)("inlineCode",{parentName:"p"},"Patient_Visit__c")," (child to Patient) records."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"upsert(\n  'Patient__c',\n  'Patient_Id__c',\n  fields(\n    field('Patient_Id__c', dataValue('form.patient_ID')),\n    relationship('Nurse__r', 'Nurse_ID_code__c', dataValue('form.staff_id')),\n    field('Phone_Number__c', dataValue('form.mobile_phone'))\n  )\n),\n  each(\n    join('$.data.form.visits[*]', '$.references[0].id', 'Id'),\n    create(\n      'Visit__c',\n      fields(\n        field('Patient__c', dataValue('Id')),\n        field('Date__c', dataValue('date')),\n        field('Reason__c', dataValue('why_did_they_see_doctor'))\n      )\n    )\n  );\n")),(0,r.yg)("h3",{id:"accessing-the-data-array-in-open-data-kit-submissions"},'Accessing the "data array" in Open Data Kit submissions'),(0,r.yg)("p",null,'Notice how we use "each" to get data from each item inside the "data array" in\nODK.'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"each(\n  '$.data.data[*]',\n  create(\n    'ODK_Submission__c',\n    fields(\n      field('Site_School_ID_Number__c', dataValue('school')),\n      field('Date_Completed__c', dataValue('date')),\n      field('comments__c', dataValue('comments')),\n      field('ODK_Key__c', dataValue('*meta-instance-id*'))\n    )\n  )\n);\n")),(0,r.yg)("h3",{id:"odk-to-salesforce-create-parent-record-with-many-children-from-parent-data"},"ODK to Salesforce: create parent record with many children from parent data"),(0,r.yg)("p",null,"Here, the user brings ",(0,r.yg)("inlineCode",{parentName:"p"},"time_end")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"parentId")," onto the line items from the\nparent object."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"each(\n  dataPath('data[*]'),\n  combine(\n    create(\n      'transaction__c',\n      fields(\n        field('Transaction_Date__c', dataValue('today')),\n        relationship(\n          'Person_Responsible__r',\n          'Staff_ID_Code__c',\n          dataValue('person_code')\n        ),\n        field('metainstanceid__c', dataValue('*meta-instance-id*'))\n      )\n    ),\n    each(\n      merge(\n        dataPath('line_items[*]'),\n        fields(\n          field('end', dataValue('time_end')),\n          field('parentId', lastReferenceValue('id'))\n        )\n      ),\n      create(\n        'line_item__c',\n        fields(\n          field('transaction__c', dataValue('parentId')),\n          field('Barcode__c', dataValue('product_barcode')),\n          field('ODK_Form_Completed__c', dataValue('end'))\n        )\n      )\n    )\n  )\n);\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"NB - there was a known bug with the ",(0,r.yg)("inlineCode",{parentName:"strong"},"combine")," function which has been\nresolved. ",(0,r.yg)("inlineCode",{parentName:"strong"},"combine")," can be used to combine two operations into one and is\ncommonly used to run multiple ",(0,r.yg)("inlineCode",{parentName:"strong"},"create"),"'s inside an ",(0,r.yg)("inlineCode",{parentName:"strong"},"each(path, operation)"),".\nThe source code for combine can be found here:\n",(0,r.yg)("a",{parentName:"strong",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L204-L222"},"language-common: combine")))),(0,r.yg)("h3",{id:"create-many-child-records-without-a-repeat-group-in-odk"},"Create many child records WITHOUT a repeat group in ODK"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"beta.each(\n  '$.data.data[*]',\n  upsert(\n    'Outlet__c',\n    'Outlet_Code__c',\n    fields(\n      field('Outlet_Code__c', dataValue('outlet_code')),\n      field('Location__Latitude__s', dataValue('gps:Latitude')),\n      field('Location__Longitude__s', dataValue('gps:Longitude'))\n    )\n  )\n),\n  beta.each(\n    '$.data.data[*]',\n    upsert(\n      'Outlet_Call__c',\n      'Invoice_Number__c',\n      fields(\n        field('Invoice_Number__c', dataValue('invoice_number')),\n        relationship('Outlet__r', 'Outlet_Code__c', dataValue('outlet_code')),\n        relationship('RecordType', 'name', 'No Call Card'),\n        field('Trip__c', 'a0FN0000008jPue'),\n        relationship(\n          'Sales_Person__r',\n          'Sales_Rep_Code__c',\n          dataValue('sales_rep_code')\n        ),\n        field('Date__c', dataValue('date')),\n        field('Comments__c', dataValue('comments'))\n      )\n    )\n  );\n")),(0,r.yg)("h3",{id:"salesforce-perform-an-update"},"Salesforce: perform an update"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'update("Patient__c", fields(\n  field("Id", dataValue("pathToSalesforceId")),\n  field("Name__c", dataValue("patient.first_name")),\n  field(...)\n));\n')),(0,r.yg)("h3",{id:"salesforce-set-record-type-using-relationship"},"Salesforce: Set record type using 'relationship(...)'"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"create(\n  'custom_obj__c',\n  fields(\n    relationship(\n      'RecordType',\n      'name',\n      dataValue('submission_type'),\n      field('name', dataValue('Name'))\n    )\n  )\n);\n")),(0,r.yg)("h3",{id:"salesforce-set-record-type-using-record-type-id"},"Salesforce: Set record type using record Type ID"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"each(\n  '$.data.data[*]',\n  create(\n    'fancy_object__c',\n    fields(\n      field('RecordTypeId', '012110000008s19'),\n      field('site_size', dataValue('size'))\n    )\n  )\n);\n")),(0,r.yg)("h3",{id:"telerivet-send-sms-based-on-salesforce-workflow-alert"},"Telerivet: Send SMS based on Salesforce workflow alert"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"send(\n  fields(\n    field(\n      'to_number',\n      dataValue(\n        'Envelope.Body.notifications.Notification.sObject.phone_number__c'\n      )\n    ),\n    field('message_type', 'sms'),\n    field('route_id', ''),\n    field('content', function (state) {\n      return 'Hey there. Your name is '.concat(\n        dataValue('Envelope.Body.notifications.Notification.sObject.name__c')(\n          state\n        ),\n        '.'\n      );\n    })\n  )\n);\n")),(0,r.yg)("h3",{id:"http-fetch-but-dont-fail"},"HTTP: fetch but don't fail!"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'// =============\n// We use "fetchWithErrors(...)" so that when the\n// SMS gateway returns an error the run does not "fail".\n// It "succeeds" and then delivers that error message\n// back to Salesforce with the "Update SMS Status" job.\n// =============\nfetchWithErrors({\n  getEndpoint: \'send_to_contact\',\n  query: function (state) {\n    return {\n      msisdn:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Phone_Number__c,\n      message:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Message__c,\n      api_key: \'some-secret-key\',\n    };\n  },\n  externalId: state.data.Envelope.Body.notifications.Notification.sObject.Id,\n  postUrl: \'https://www.openfn.org/inbox/another-secret-key\',\n});\n')),(0,r.yg)("h3",{id:"sample-dhis2-events-api-job"},"Sample DHIS2 events API job:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"event(\n  fields(\n    field('program', 'eBAyeGv0exc'),\n    field('orgUnit', 'DiszpKrYNg8'),\n    field('eventDate', dataValue('properties.date')),\n    field('status', 'COMPLETED'),\n    field('storedBy', 'admin'),\n    field('coordinate', {\n      latitude: '59.8',\n      longitude: '10.9',\n    }),\n    field('dataValues', function (state) {\n      return [\n        {\n          dataElement: 'qrur9Dvnyt5',\n          value: dataValue('properties.prop_a')(state),\n        },\n        {\n          dataElement: 'oZg33kd9taw',\n          value: dataValue('properties.prop_b')(state),\n        },\n        {\n          dataElement: 'msodh3rEMJa',\n          value: dataValue('properties.prop_c')(state),\n        },\n      ];\n    })\n  )\n);\n")),(0,r.yg)("h3",{id:"sample-dhis2-data-value-sets-api-job"},"Sample DHIS2 data value sets API job:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"dataValueSet(\n  fields(\n    field('dataSet', 'pBOMPrpg1QX'),\n    field('orgUnit', 'DiszpKrYNg8'),\n    field('period', '201401'),\n    field('completeData', dataValue('date')),\n    field('dataValues', function (state) {\n      return [\n        { dataElement: 'f7n9E0hX8qk', value: dataValue('prop_a')(state) },\n        { dataElement: 'Ix2HsbDMLea', value: dataValue('prop_b')(state) },\n        { dataElement: 'eY5ehpbEsB7', value: dataValue('prop_c')(state) },\n      ];\n    })\n  )\n);\n")),(0,r.yg)("h3",{id:"sample-openmrs-expression-creates-a-person-and-then-a-patient"},"sample openMRS expression, creates a person and then a patient"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"person(\n  fields(\n    field('gender', 'F'),\n    field('names', function (state) {\n      return [\n        {\n          givenName: dataValue('form.first_name')(state),\n          familyName: dataValue('form.last_name')(state),\n        },\n      ];\n    })\n  )\n),\n  patient(\n    fields(\n      field('person', lastReferenceValue('uuid')),\n      field('identifiers', function (state) {\n        return [\n          {\n            identifier: '1234',\n            identifierType: '8d79403a-c2cc-11de-8d13-0010c6dffd0f',\n            location: '8d6c993e-c2cc-11de-8d13-0010c6dffd0f',\n            preferred: true,\n          },\n        ];\n      })\n    )\n  );\n")),(0,r.yg)("h3",{id:"merge-many-values-into-a-child-path"},"merge many values into a child path"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'each(\n  merge(\n    dataPath("CHILD_ARRAY[*]"),\n    fields(\n      field("metaId", dataValue("*meta-instance-id*")),\n      field("parentId", lastReferenceValue("id"))\n    )\n  ),\n  create(...)\n)\n')),(0,r.yg)("h3",{id:"arraytostring"},"arrayToString"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"arrayToString(arr, separator_string);\n")),(0,r.yg)("h3",{id:"access-an-image-url-from-an-odk-submission"},"access an image URL from an ODK submission"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'// In ODK the image URL is inside an image object...\nfield("Photo_URL_text__c", dataValue("image.url")),\n')),(0,r.yg)("h3",{id:"alterstate-alter-state-to-make-sure-data-is-in-an-array"},"alterState (alter state) to make sure data is in an array"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// Here, we make sure CommCare gives us an array to use in each(merge(...), ...)\nfn(state => {\n  const idCards = state.data.form.ID_cards_given_to_vendor;\n  if (!Array.isArray(idCards)) {\n    state.data.form.ID_cards_given_to_vendor = [idCards];\n  }\n  return state;\n});\n\n// Now state has been changed, and we carry on...\neach(\n  merge(\n    dataPath('form.ID_cards_given_to_vendor[*]'),\n    fields(\n      field('Vendor_Id', dataValue('form.ID_vendor')),\n      field('form_finished_time', dataValue('form.meta.timeEnd'))\n    )\n  ),\n  upsert(\n    'Small_Packet__c',\n    'sp_id__c',\n    fields(\n      field('sp_id__c', dataValue('ID_cards_given_to_vendor')),\n      relationship('Vendor__r', 'Badge_Code__c', dataValue('Vendor_Id')),\n      field(\n        'Small_Packet_Distribution_Date__c',\n        dataValue('form_finished_time')\n      )\n    )\n  )\n);\n")),(0,r.yg)("h3",{id:"login-in-to-a-server-with-a-custom-ssl-certificate"},"Login in to a server with a custom SSL Certificate"),(0,r.yg)("p",null,"This snippet describes how you would connect to a secure server ignoring SSL\ncertificate verification. Set ",(0,r.yg)("inlineCode",{parentName:"p"},"strictSSL: false")," in the options argument of the\n",(0,r.yg)("inlineCode",{parentName:"p"},"post")," function in ",(0,r.yg)("inlineCode",{parentName:"p"},"language-http"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"post(\n  `${state.configuration.url}/${path}`,\n  {\n    headers: { 'content-type': 'application/json' },\n    body: {\n      email: 'Luka',\n      password: 'somethingSecret',\n    },\n    strictSSL: false,\n  },\n  callback\n);\n")),(0,r.yg)("h2",{id:"anonymous-functions"},"Anonymous Functions"),(0,r.yg)("p",null,"Different to ",(0,r.yg)("a",{parentName:"p",href:"#examples-of-adaptor-specific-functions"},"Named Functions"),",\nAnonymous functions are generic pieces of javascript which you can write to suit\nyour needs. Here are some examples of these custom functions:"),(0,r.yg)("h3",{id:"custom-replacer"},"Custom replacer"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"field('destination__c', state => {\n  console.log(something);\n  return dataValue('path_to_data')(state).toString().replace('cats', 'dogs');\n});\n")),(0,r.yg)("p",null,'This will replace all "cats" with "dogs" in the string that lives at\n',(0,r.yg)("inlineCode",{parentName:"p"},"path_to_data"),"."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"NOTE:")," The JavaScript ",(0,r.yg)("inlineCode",{parentName:"p"},"replace()")," function only replaces the first instance\nof whatever argument you specify. If you're looking for a way to replace all\ninstances, we suggest you use a regex like we did in the\n",(0,r.yg)("a",{parentName:"p",href:"#custom-concatenation-of-null-values"},"example")," below.")),(0,r.yg)("h3",{id:"custom-arraytostring"},"Custom arrayToString"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'field("target_specie_list__c", function(state) {\n  return Array.apply(\n    null, sourceValue("$.data.target_specie_list")(state)\n  ).join(\', \')\n}),\n')),(0,r.yg)("p",null,'It will take an array, and concatenate each item into a string with a ", "\nseparator.'),(0,r.yg)("h3",{id:"custom-concatenation"},"Custom concatenation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"field('ODK_Key__c', function (state) {\n  return dataValue('metaId')(state).concat('(', dataValue('index')(state), ')');\n});\n")),(0,r.yg)("p",null,"This will concatenate two values."),(0,r.yg)("h3",{id:"concatenation-of-null-values"},"Concatenation of null values"),(0,r.yg)("p",null,"This will concatenate many values, even if one or more are null, writing them to\na field called Main_Office_City_c."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'...\n  field("Main_Office_City__c", function(state) {\n    return arrayToString([\n      dataValue("Main_Office_City_a")(state) === null ? "" : dataValue("Main_Office_City_a")(state).toString().replace(/-/g, " "),\n      dataValue("Main_Office_City_b")(state) === null ? "" : dataValue("Main_Office_City_b")(state).toString().replace(/-/g, " "),\n      dataValue("Main_Office_City_c")(state) === null ? "" : dataValue("Main_Office_City_c")(state).toString().replace(/-/g, " "),\n      dataValue("Main_Office_City_d")(state) === null ? "" : dataValue("Main_Office_City_d")(state).toString().replace(/-/g, " "),\n    ].filter(Boolean), \',\')\n  })\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Notice how this custom function makes use of the ",(0,r.yg)("strong",{parentName:"p"},"regex")," ",(0,r.yg)("inlineCode",{parentName:"p"},"/-/g")," to ensure\nthat all instances are accounted for (g = global search).")),(0,r.yg)("h3",{id:"custom-nth-reference-id"},"Custom Nth reference ID"),(0,r.yg)("p",null,"If you ever want to retrieve the FIRST object you created, or the SECOND, or the\nNth, for that matter, a function like this will do the trick."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"field('parent__c', function (state) {\n  return state.references[state.references.length - 1].id;\n});\n")),(0,r.yg)("p",null,'See how instead of taking the id of the "last" thing that was created in\nSalesforce, you\'re taking the id of the 1st thing, or 2nd thing if you replace\n"length-1" with "length-2".'),(0,r.yg)("h3",{id:"convert-date-string-to-standard-iso-date-for-salesforce"},"Convert date string to standard ISO date for Salesforce"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"field('Payment_Date__c', function (state) {\n  return new Date(dataValue('payment_date')(state)).toISOString();\n});\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"NOTE"),": The output of this function will always be formatted according to\nGMT time-zone.")),(0,r.yg)("h3",{id:"use-external-id-fields-for-relationships-during-a-bulk-load-in-salesforce"},"Use external ID fields for relationships during a bulk load in Salesforce"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"array.map(item => {\n  return {\n    Patient_Name__c: item.fullName,\n    'Account.Account_External_ID__c': item.account\n    'Clinic__r.Unique_Clinic_Identifier__c': item.clinicId,\n    'RecordType.Name': item.type,\n  };\n});\n")),(0,r.yg)("h3",{id:"bulk-upsert-with-an-external-id-in-salesforce"},"Bulk upsert with an external ID in salesforce"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"bulk(\n  'Visit_new__c',\n  'upsert',\n  {\n    extIdField: 'commcare_case_id__c',\n    failOnError: true,\n    allowNoOp: true,\n  },\n  dataValue('patients')\n);\n")))}p.isMDXComponent=!0}}]);