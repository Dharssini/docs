"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78100],{95788:(e,t,n)=>{n.d(t,{Iu:()=>u,yg:()=>d});var o=n(11504);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),y=r,d=s["".concat(l,".").concat(y)]||s[y]||g[y]||i;return n?o.createElement(d,a(a({ref:t},u),{},{components:n})):o.createElement(d,a({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},27352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=n(45072),r=(n(11504),n(95788));const i={title:"Linking Your Project to GitHub (Version Control)",sidebar_label:"Linking Your Project to GitHub",slug:"/link-to-github"},a=void 0,c={unversionedId:"manage-projects/link-to-gh",id:"manage-projects/link-to-gh",title:"Linking Your Project to GitHub (Version Control)",description:"You can set up version control for your OpenFn projects. This article walks you",source:"@site/docs/manage-projects/link-to-gh.md",sourceDirName:"manage-projects",slug:"/link-to-github",permalink:"/documentation/link-to-github",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/manage-projects/link-to-gh.md",tags:[],version:"current",frontMatter:{title:"Linking Your Project to GitHub (Version Control)",sidebar_label:"Linking Your Project to GitHub",slug:"/link-to-github"},sidebar:"docs",previous:{title:"Email Notifications",permalink:"/documentation/notifications"},next:{title:"User Profile",permalink:"/documentation/user-profile"}},l={},p=[{value:"Setting up GitHub integration",id:"setting-up-github-integration",level:3},{value:"How It Works in a Nutshell",id:"how-it-works-in-a-nutshell",level:3}],u={toc:p},s="wrapper";function g(e){let{components:t,...i}=e;return(0,r.yg)(s,(0,o.c)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"You can set up version control for your OpenFn projects. This article walks you\nthrough the configuration steps."),(0,r.yg)("h3",{id:"setting-up-github-integration"},"Setting up GitHub integration"),(0,r.yg)("p",null,"You can connect your OpenFn project to a GitHub repository that you have\nadministrator access to. This enables a 2-way sync - you can sync your project\nto GitHub, and you can deploy changes you've made outside of OpenFn to your\nproject."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Navigate to ",(0,r.yg)("inlineCode",{parentName:"li"},"Project Settings > Sync to GitHub")," .")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Connect to GitHub",src:n(21344).c,width:"1215",height:"643"})),(0,r.yg)("ol",{start:2},(0,r.yg)("li",{parentName:"ol"},"Select ",(0,r.yg)("inlineCode",{parentName:"li"},"Connect Branch"),". You'll be prompted to sign in to GitHub.")),(0,r.yg)("p",null,"Click ",(0,r.yg)("inlineCode",{parentName:"p"},"Configure"),"..."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Configure",src:n(51944).c,width:"1263",height:"768"})),(0,r.yg)("ol",{start:3},(0,r.yg)("li",{parentName:"ol"},"...then select the GitHub account that owns the repository you want to\nconnect to.")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Install",src:n(3728).c,width:"797",height:"490"})),(0,r.yg)("ol",{start:4},(0,r.yg)("li",{parentName:"ol"},"Select the repository to sync with and hit ",(0,r.yg)("inlineCode",{parentName:"li"},"Save"),".")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Permissions",src:n(14092).c,width:"902",height:"852"})),(0,r.yg)("ol",{start:5},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"You'll be redirected to OpenFn. Select the repository and branch you want to\nsync to, and click ",(0,r.yg)("inlineCode",{parentName:"p"},"Connect Branch"),".")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Your GitHub connection is now set up! From here, each time you want to sync\nbetween your project and GitHub, click ",(0,r.yg)("inlineCode",{parentName:"p"},"Initiate Sycn to Branch"),"."))),(0,r.yg)("h3",{id:"how-it-works-in-a-nutshell"},"How It Works in a Nutshell"),(0,r.yg)("p",null,"Your whole OpenFn project can be represented as a project.yaml file."),(0,r.yg)("p",null,"Using our Command Line Interface, the\n",(0,r.yg)("a",{parentName:"p",href:"/documentation/deploy/portability"},"@openfn/cli"),"\nyou can pull a project config from OpenFn to a folder or repo on your computer,\nand you can deploy a change in your project.yaml file from that directory or\nrepo to OpenFn."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"Sync to Github")," feature makes use of GitHub actions to automatically deploy\n(after a commit) or pull (when ",(0,r.yg)("inlineCode",{parentName:"p"},"Initiate Sync to Branch")," button is clicked) to\nkeep a repository in sync with your OpenFn project."),(0,r.yg)("p",null,"For more detailed information on representing your project as code and using the\n@openfn/cli, head over to our documentation on\n",(0,r.yg)("a",{parentName:"p",href:"/documentation/deploy/portability"},"Portability"),"."))}g.isMDXComponent=!0},21344:(e,t,n)=>{n.d(t,{c:()=>o});const o=n.p+"assets/images/lightning_connect_to_gh-d56f618aa497f98e7676a4fba8663d48.png"},51944:(e,t,n)=>{n.d(t,{c:()=>o});const o=n.p+"assets/images/lightning_gh_configure-5cfed046cf265d2b905d42edcefc7c24.png"},3728:(e,t,n)=>{n.d(t,{c:()=>o});const o=n.p+"assets/images/lightning_gh_install_openfn-c1ace5102a6d1d214ec5e7e1ed9085a5.png"},14092:(e,t,n)=>{n.d(t,{c:()=>o});const o=n.p+"assets/images/lightning_gh_permissions-c34aeca93227893baee325e33a1f56e7.png"}}]);