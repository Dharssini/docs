"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[6552],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,_=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(_,o(o({ref:t},p),{},{components:a})):n.createElement(_,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},51690:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=["components"],l={title:"Register Participant - V2 Skillz",sidebar_label:"Register Participant - V2 Skillz",id:"Register-Participant-V2-Skillz-2021-06-02",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},s=void 0,c={unversionedId:"jobs/auto/Register-Participant-V2-Skillz-2021-06-02",id:"jobs/auto/Register-Participant-V2-Skillz-2021-06-02",isDocsHomePage:!1,title:"Register Participant - V2 Skillz",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Register-Participant-V2-Skillz-2021-06-02",permalink:"/library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02",tags:[],version:"current",frontMatter:{title:"Register Participant - V2 Skillz",sidebar_label:"Register Participant - V2 Skillz",id:"Register-Participant-V2-Skillz-2021-06-02",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},sidebar:"library",previous:{title:"\ud83d\udcdc Pre-processing data",permalink:"/library/jobs/auto/alter-state-before-operations"},next:{title:"\u2728 Risk and Vulnerability Assessment",permalink:"/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27"}},p=[{value:"Metadata",id:"metadata",children:[],level:2},{value:"Key Functions",id:"key-functions",children:[],level:2},{value:"Expression",id:"expression",children:[],level:2}],d={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: Register Participant - V2 Skillz"),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"latest"))),(0,i.kt)("li",{parentName:"ul"},"Created 4 months ago"),(0,i.kt)("li",{parentName:"ul"},"Updated 4 months ago"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"0")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"alterState"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"each"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lastReferenceValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"merge"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Array")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"query(`SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`);\n\nalterState(state => {\n  // Note: lastReferenceValue selects the first item in the references array.\n  state.data.eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n\n  function objectToArray(object) {\n    return !Array.isArray(object) ? [object] : object;\n  }\n\n  // if (state.data.form.question1) {\n  //   console.log('Ensuring that \"question1\" is an array.');\n  //   state.data.form.question1 = objectToArray(state.data.form.question1);\n  // } else {\n  //   console.log('Shifting \"new_participants\" to \"question1\" array.');\n  //   state.data.form.question1 = objectToArray(state.data.form.new_participants);\n  //   console.log('Creating a \"case\" object inside each item in that array.');\n  //   state.data.form.question1 = state.data.form.question1.map(item => ({\n  //     ...item,\n  //     case: item.create_skillz_plus_participant.case,\n  //   }));\n  // }\n\n  console.log('Done with initial data manipulation.');\n\n  return state;\n});\n\n// beta.each(\n//   merge(\n//     dataPath('form.question1[*]'),\n//     fields(\n//       field('intervention_notes_to_save', dataValue('form.intervention_notes_to_save')))\n//   ),\n\n  upsert(\n    'Person__c',\n    'Participant_Identification_Number_PID__c',\n    fields(\n      field('Notes__c', dataValue('form.intervention_notes_to_save')),\n      field('First_Name__c', dataValue('form.new_participants.participant_first_name')),\n      field('Surname__c', dataValue('form.new_participants.participant_surname')),\n      relationship('RecordType', 'Name', 'Participant'),\n      field('Participant_Identification_Number_PID__c', state => state.data.form.new_participants.create_skillz_plus_participant.case['@case_id']),\n      field('Sex__c', dataValue('gender')),\n      field('Mobile_Number_1__c', dataValue('form.new_participants.mobile_number')), //QUESTION: In CommCare, phone doesn't look like it's saving?\n      field('School_name_person__c', dataValue('form.new_participants.school_name')),\n      field('Date_of_Birth__c', dataValue('date_of_birth')),\n      field('School_name_person__c', dataValue('form.new_participants.school_name')),\n      field('Physical_Address__c', dataValue('form.new_participants.participants_home_address'))\n      //field('Age__c', dataValue('form.question1.age_in_years')), //This is a SF formula field, cannot map\n    )\n  )\n//);\n\n// each(\n//   merge(dataPath('form.question1[*]'), fields(\n//     field('intervention_name', dataValue('form.intervention_name')),\n//     field('eventName', dataValue('eventName')))),\n  upsert(\n    'Attendance__c',\n    'CommCare_Ext_ID__c',\n    fields(\n      field('CommCare_Ext_ID__c', state => {\n        var eventid = `${state.data.eventName}` || dataValue('form.intervention_name')(state);\n        var personid = state.data.form.new_participants.create_skillz_plus_participant.case['case_id'];//state.data.case['@case_id'];\n        return personid + '-' + eventid;\n      }),\n      relationship(\n        //Attendance looks up to Persn via the case_id\n        'Person_Attendance__r',\n        'Participant_Identification_Number_PID__c',\n        state => state.data.case['@case_id']\n      ),\n      relationship(\n        //Attendance looks up to Event via the intervention_name\n        'Event__r',\n        'CommCare_Case_ID__c',\n        state.data.form.new_participants.create_skillz_plus_participant.case.index.parent['#text']\n      ),\n      field('Date_of_Birth__c', dataValue('form.new_participants.date_of_birth'))\n    )\n  )\n//);\n")))}u.isMDXComponent=!0}}]);