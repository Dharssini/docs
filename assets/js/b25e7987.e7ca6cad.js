(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{228:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return o})),a.d(n,"metadata",(function(){return l})),a.d(n,"toc",(function(){return _})),a.d(n,"default",(function(){return d}));var t=a(3),r=a(8),i=(a(0),a(300)),o={title:"513_Enroll_Household_in_SF with salesforce",sidebar_label:"513_Enroll_Household_in_SF",id:"513_Enroll_Household_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","join","map","merge","upsert","upsertIf"]},l={unversionedId:"jobs/auto/513_Enroll_Household_in_SF-2019-09-17",id:"jobs/auto/513_Enroll_Household_in_SF-2019-09-17",isDocsHomePage:!1,title:"513_Enroll_Household_in_SF with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/513_Enroll_Household_in_SF-2019-09-17.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/513_Enroll_Household_in_SF-2019-09-17",permalink:"/library/jobs/auto/513_Enroll_Household_in_SF-2019-09-17",version:"current",sidebar_label:"513_Enroll_Household_in_SF",sidebarPosition:513,frontMatter:{title:"513_Enroll_Household_in_SF with salesforce",sidebar_label:"513_Enroll_Household_in_SF",id:"513_Enroll_Household_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","join","map","merge","upsert","upsertIf"]},sidebar:"library",previous:{title:"1. Create Payment in SF with salesforce",permalink:"/library/jobs/auto/1. Create Payment in SF-2018-09-03"},next:{title:"CHW Reassignment (Production) with salesforce",permalink:"/library/jobs/auto/CHW Reassignment Production-2017-05-15"}},_=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],s={toc:_};function d(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},s,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(i.b)("h2",{id:"metadata"},"Metadata"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Name: 513_Enroll_Household_in_SF"),Object(i.b)("li",{parentName:"ul"},"Adaptor: ",Object(i.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(i.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(i.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(i.b)("li",{parentName:"ul"},"Created over 1 year ago"),Object(i.b)("li",{parentName:"ul"},"Updated 13 days ago")),Object(i.b)("h2",{id:"key-functions"},"Key Functions"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"alterState"),", ",Object(i.b)("inlineCode",{parentName:"p"},"dataPath"),", ",Object(i.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(i.b)("inlineCode",{parentName:"p"},"each"),", ",Object(i.b)("inlineCode",{parentName:"p"},"field"),", ",Object(i.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(i.b)("inlineCode",{parentName:"p"},"join"),", ",Object(i.b)("inlineCode",{parentName:"p"},"map"),", ",Object(i.b)("inlineCode",{parentName:"p"},"merge"),", ",Object(i.b)("inlineCode",{parentName:"p"},"upsert"),", ",Object(i.b)("inlineCode",{parentName:"p"},"upsertIf")),Object(i.b)("h2",{id:"expression"},"Expression"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'//MOH513 Enroll Household Form\n//Alters CommCare Person arrays so that they are formatted as arrays instead of just single values.\nalterState((state) => {\n  const person = state.data.form.Person;\n  if (!Array.isArray(person)) {\n    state.data.form.Person = [person];\n  }\n\n  titleCase = (str) => {\n    var splitStr = str.toLowerCase().split(" ");\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] =\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(" ");\n  };\n  return state;\n});\n\n//Upserting Household, checks if Household exists via MOH Household Code\nupsert(\n  "Household__c",\n  "CommCare_Code__c",\n  fields(\n    field("MOH_household_code__c", dataValue("form.moh_code")),\n    field("CommCare_Code__c", dataValue("form.case.@case_id")),\n    field("Source__c", true),\n    field("Household_CHW__c", dataValue("form.CHW_ID")), //CONFIRM IDs MATCH PRODUCTION\n    //field("Household_CHW__c", "a031x000002S9lm"), //HARDCODED FOR SANDBOX TESTING --\x3e To replace with line above\n    relationship("Catchment__r", "Name", dataValue("form.catchment")), // check\n    field("Area__c", dataValue("form.area")),\n    field("Household_village__c", dataValue("form.village")),\n    field("Deaths_in_the_last_6_months__c", (state) => {\n      var death = dataValue(\n        "form.Household_Information.deaths_in_past_6_months"\n      )(state);\n      return death > 0 ? "Yes" : "No";\n    }),\n    field(\n      "Access_to_safe_water__c",\n      dataValue("form.Household_Information.Safe_Water")\n    ),\n    field(\n      "Treats_Drinking_Water__c",\n      dataValue("form.Household_Information.Treats_Drinking_Water")\n    ),\n    field(\n      "Tippy_Tap__c",\n      dataValue("form.Household_Information.Active_Handwashing_Station")\n    ),\n    field(\n      "Pit_Latrine__c",\n      dataValue("form.Household_Information.Functional_Latrine")\n    ),\n    field(\n      "Rubbish_Pit__c",\n      dataValue("form.Household_Information.Rubbish_Pit")\n    ),\n    field(\n      "Drying_Rack__c",\n      dataValue("form.Household_Information.Drying_Rack")\n    ),\n    field(\n      "Kitchen_Garden__c",\n      dataValue("form.Household_Information.Kitchen_Garden")\n    ),\n    field(\n      "Cookstove__c",\n      dataValue("form.Household_Information.Improved_Cooking_Method")\n    ),\n    field("Clothe__c", dataValue("form.Household_Information.Clothesline")),\n    field(\n      "WASH_Trained__c",\n      dataValue("form.Household_Information.WASH_Trained")\n    ),\n    field(\n      "Total_household_people__c",\n      dataValue("form.Total_Number_of_Members")\n    ),\n    field("Health_insurance__c",\n      dataValue("form.health_insurace_cover")),\n    field(\n      "Health_insurance_active_status__c",\n      dataValue("form.healthinsurance_active")\n    ),\n    field("Health_insurance_type__c", (state) => {\n      var status = dataValue("form.health_insurance")(state);\n      return status && status === \'other_please_specify_if_active\' ? \'Other\' :\n        status === \'nhif\' ? \'NHIF\' : status === \'Linda_mama\' || \'linda_mama\' ? \'Linda mama\' : status;\n    }),\n    field("Other_Health_Insurance__c", dataValue("form.if_other_please_specify")),\n    field(\'Work_with_TBA__c\', dataValue(\'form.tba\')),\n    field(\'TBA_name__c\', dataValue(\'form.which_tba\')),\n  )\n);\n\n//Upsert Person via CommCare case ID for each person enrolled\nalterState((state) => {\n  if (dataValue("form.Person[0].Source")(state) == 1) {\n    return beta.each(\n      dataPath("form.Person[*]"),\n      upsert(\n        "Person__c",\n        "CommCare_ID__c",\n        fields(\n          //relationship("Household__r", "CommCare_Code__c", dataValue("case.index.parent.#text")),\n          field("CommCare_ID__c", dataValue("case.@case_id")),\n          field("CommCare_HH_Code__c", dataValue("case.index.parent.#text")),\n          relationship("RecordType", "Name", (state) => {\n            var rt = dataValue("Basic_Information.Record_Type")(state);\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            return status == "Unborn"\n              ? "Child"\n              : rt.toString().replace(/_/g, " "); //convert Unborn children to Child RT\n          }),\n          field("Name", (state) => {\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            var name1 = dataValue("Basic_Information.Name")(state);\n            var name2 =\n              name1 === undefined || name1 === ""\n                ? "Unborn Child"\n                : name1.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                });\n            return status !== "Unborn" ? name2 : "Unborn Child";\n          }),\n          field("Source__c", true),\n          relationship("Catchment__r", "Name", dataValue("catchment")),\n          field("Client_Status__c", "Active"),\n          field("Area__c", state.data.form.area),\n          field(\'Household_Village__c\', state.data.form.village),\n          field("Relation_to_the_head_of_the_household__c", (state) => {\n            var relation = dataValue("Basic_Information.relation_to_hh")(state);\n            var toTitleCase =\n              relation !== undefined\n                ? relation.toString().replace(/_/g, " ")\n                : null;\n            return toTitleCase !== null\n              ? toTitleCase.charAt(0).toUpperCase() + toTitleCase.slice(1)\n              : null;\n          }),\n          field("Active_TT5_Mother__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? "Yes" : null;\n          }),\n          field("TT5_Mother_Registrant__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? "Yes" : null;\n          }),\n          field("Active_in_Thrive_Thru_5__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? "Yes" : "No";\n          }),\n          field("Active_in_HAWI__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            return status == "positive" ? "Yes" : "No";\n          }),\n          field("Enrollment_Date__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var date = dataValue("Date")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? date : null;\n          }),\n          field("HAWI_Enrollment_Date__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            var date = dataValue("Date")(state);\n            return status == "positive" ? date : null;\n          }),\n          field("Thrive_Thru_5_Registrant__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? "Yes" : "No";\n          }),\n          field("HAWI_Registrant__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            return status == "positive" ? "Yes" : "No";\n          }),\n          field("Date_of_Birth__c", dataValue("Basic_Information.DOB")),\n          field("Child_Status__c", (state) => {\n            var dob = dataValue("Basic_Information.DOB")(state);\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            return dob !== undefined || status == "Born" ? "Born" : "Unborn"; //what about deceased?\n          }),\n          field("Gender__c", dataValue("Basic_Information.Gender")),\n          field(\n            "Birth_Certificate__c",\n            dataValue("Basic_Information.birth_certificate")\n          ),\n          field("Education_Level__c", (state) => {\n            var edu = dataValue("Basic_Information.Education_Level")(state);\n            return edu !== undefined ? edu.toString().replace(/_/g, " ") : null;\n          }),\n          field(\n            "Currently_enrolled_in_school__c",\n            dataValue("Basic_Information.enrolled_in_school")\n          ),\n          field(\n            "Telephone__c",\n            dataValue("Basic_Information.Contact_Info.contact_phone_number")\n          ),\n          field(\n            "Family_Planning__c", (state) => {\n              var plan = dataValue("Basic_Information.family_planning.Currently_on_family_planning")(state);\n              return plan ? \'Yes\' : plan;\n            }),\n          field(\n            "Family_Planning_Method__c", (state) => {\n              var method = dataValue("Basic_Information.family_planning.Family_Planning_Method")(state);\n              return method\n                ? method.toString().replace(/_/g, " ")\n                : method;\n            }),\n          field(\n            "Reasons_for_not_taking_FP_method__c", (state) => {\n              var reason = dataValue("Basic_Information.family_planning.No_FPmethod_reason")(state);\n              var reason2 = reason ? reason.toString().split(\' \').join(\';\').replace(/_/g, " ")\n                .replace(/pregnant/g, \'The client is pregnant\').replace(/not sexually active/g, \'The client is not sexually active\')\n                .replace(/other barriers culture male partners parents etc/g, \'Other barriers (culture, male partners, parents, etc)\')\n                .replace(/no access to fp services hospitals/g, \'Lack of hospitals or places where FP services can be accessed\')\n                .replace(/not willing to use fp due to negative effects myths and misconceptions/g, \'Myths and misconceptions\')\n                : reason;\n              return reason2;\n            }),\n          field(\n            "Use_mosquito_net__c",\n            dataValue("Basic_Information.person_info.sleep_under_net")\n          ),\n          field(\n            "Two_weeks_or_more_cough__c",\n            dataValue("Basic_Information.person_info.cough_for_2wks")\n          ),\n          field("Chronic_illness__c", (state) => {\n            var value = dataValue(\n              "Basic_Information.person_info.chronic_illness"\n            )(state);\n            var illness =\n              value !== undefined\n                ? value\n                  .toLowerCase()\n                  .split(" ")\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(";")\n                : null;\n            return illness !== null\n              ? illness.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\n            "Knowledge_of_HIV_status__c",\n            dataValue("Basic_Information.person_info.known_hiv_status")\n          ),\n          field(\n            "HIV_Status__c",\n            dataValue("Basic_Information.person_info.hiv_status")\n          ),\n          field("Disability__c", (state) => {\n            var disability = dataValue(\n              "Basic_Information.person_info.disability"\n            )(state);\n            var toTitleCase =\n              disability !== undefined\n                ? disability\n                  .toLowerCase()\n                  .split(" ")\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(";")\n                : null;\n            return toTitleCase;\n          }),\n          field("Other_disability__c", (state) => {\n            var disability = dataValue(\n              "Basic_Information.person_info.other_disability"\n            )(state);\n            var toTitleCase =\n              disability !== undefined\n                ? disability\n                  .toLowerCase()\n                  .split(" ")\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(";")\n                : null;\n            return toTitleCase;\n          }),\n          field(\n            "Unique_Patient_Code__c",\n            dataValue("HAWI.Unique_Patient_Code")\n          ),\n          field(\n            "Active_in_Support_Group__c",\n            dataValue("HAWI.Active_in_Support_Group")\n          ),\n          field("Currently_on_ART_s__c", dataValue("HAWI.ART")),\n          field("ART_Regimen__c", dataValue("form.Person.HAWI.ARVs")),\n          field("Preferred_Care_Facility__c", (state) => {\n            var facility = dataValue("HAWI.Preferred_Care_Facility")(state);\n            return facility !== undefined\n              ? facility.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\n            "MCH_booklet__c",\n            dataValue("TT5.Mother_Information.mch_booklet")\n          ),\n          field("LMP__c", dataValue("TT5.Child_Information.ANCs.LMP")),\n          field("ANC_1__c", dataValue("TT5.Child_Information.ANCs.ANC_1")),\n          field("ANC_2__c", dataValue("TT5.Child_Information.ANCs.ANC_2")),\n          field("ANC_3__c", dataValue("TT5.Child_Information.ANCs.ANC_3")),\n          field("ANC_4__c", dataValue("TT5.Child_Information.ANCs.ANC_4")),\n          field("ANC_5__c", dataValue("TT5.Child_Information.ANCs.ANC_5")),\n          field("Delivery_Facility__c", (state) => {\n            var facility = dataValue(\n              "TT5.Child_Information.Delivery_Information.Birth_Facility"\n            )(state);\n            return facility !== undefined\n              ? facility.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\'Delivery_Facility_Other__c\', dataValue(\'TT5.Child_Information.Delivery_Information.Other\')),\n          field("Place_of_Delivery__c", (state) => {\n            var facility = dataValue(\n              "TT5.Child_Information.Delivery_Information.Skilled_Unskilled"\n            )(state);\n            if (facility !== undefined) {\n              return facility == "Skilled" ? "Facility" : "Home";\n            }\n            return facility;\n          }),\n          field("BCG__c", dataValue("TT5.Child_Information.Immunizations.BCG")),\n          field(\n            "OPV_0__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_0")\n          ),\n          field(\n            "OPV_1__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_1")\n          ),\n          field(\n            "OPV_2__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_2")\n          ),\n          field(\n            "OPV_3__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_3")\n          ),\n          field(\n            "Measles_6__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_6")\n          ),\n          field(\n            "Measles_9__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_9")\n          ),\n          field(\n            "Measles_18__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_18")\n          ),\n          field(\n            "Vitamin_A__c",\n            dataValue("TT5.Child_Information.nutrition.vitamin_a")\n          ),\n          field(\n            "Food_groups_3_times_a_day__c",\n            dataValue("TT5.Child_Information.nutrition.food_groups")\n          ),\n          field(\n            "Initial_MUAC__c",\n            dataValue("TT5.Child_Information.nutrition.MUAC")\n          ),\n          field(\n            "Exclusive_Breastfeeding__c",\n            dataValue(\n              "TT5.Child_Information.Exclusive_Breastfeeding.Exclusive_Breastfeeding"\n            )\n          ),\n          field("Pregnant__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? true : false;\n          }),\n          field(\n            "Gravida__c",\n            dataValue("TT5.Mother_Information.Pregnancy_Information.Gravida")\n          ),\n          field(\n            "Parity__c",\n            dataValue("TT5.Mother_Information.Pregnancy_Information.Parity")\n          ),\n          field(\n            "Nutrition_referral__c",\n            dataValue("TT5.Child_Information.nutrition.Referral")\n          ),\n          field(\n            "Nutrition_referral_date__c",\n            dataValue("TT5.Child_Information.nutrition.date_malnutrition")\n          ),\n          field(\n            "HIV_counseling_and_testing_referral_date__c",\n            dataValue("Basic_Information.person_info.when_hiv")\n          ),\n          field(\'Received_pregnancy_test__c\', dataValue(\'Basic_Information.family_planning.did_you_adminsiter_a_pregnancy_test\')),\n          field(\'Pregnancy_test_result__c\', dataValue(\'Basic_Information.family_planning.pregnancy_test_result\')),\n          field(\'Pregnancy_referral__c\', dataValue(\'Basic_Information.family_planning.refer_preg\')),\n          field(\'Pregnancy_referral_date__c\', dataValue(\'Basic_Information.family_planning.referal_pregnancy\')),\n          field(\n            "Family_Planning__c", (state) => {\n              var plan = dataValue("Basic_Information.family_planning.Currently_on_family_planning")(state);\n              return plan ? \'Yes\' : plan;\n            }),\n          field(\n            "Family_Planning_Method__c", (state) => {\n              var method = dataValue("Basic_Information.family_planning.Family_Planning_Method")(state);\n              return method\n                ? method.toString().replace(/_/g, " ")\n                : method;\n            }),\n          field("Reason_for_not_taking_a_pregnancy_test__c", (state) => {\n            var reason = dataValue("Basic_Information.family_planning.No_Preg_Test")(state);\n            return reason\n              ? reason.toString().replace(/_/g, " ")\n              : reason;\n          }),\n        )\n      )\n    )(state);\n  }\n\n  console.log("No first person found, not upserting.");\n  return state;\n});\n\neach(\n  merge(\n    dataPath(\'$.form.household_deaths.deaths[*]\'),\n    fields(\n      field(\'caseId\', dataValue(\'form.case.@case_id\')),\n      field(\'catchment\', dataValue(\'form.catchment\')),\n      field(\'Date\', dataValue(\'form.Date\'))\n    )\n  ),\n  upsertIf(\n    state.data.form.household_deaths && state.data.form.household_deaths.deaths_in_past_6_months > 0, //only insert deceased Person if deaths\n    \'Person__c\',\n    \'CommCare_ID__c\',\n    fields(\n      field(\'CommCare_ID__c\', state => {\n        var age = dataValue(\'age_dead\')(state);\n        return `${state.data.caseId}${age}`;\n      }),\n      field(\'CommCare_HH_Code__c\', dataValue(\'caseId\')),\n      relationship(\'RecordType\', \'Name\', state => {\n        var age = dataValue(\'age_dead\')(state);\n        var gender = dataValue(\'gender_dead\')(state);\n        var rt = \'\';\n        if (age < 5) {\n          rt = \'Child\';\n        } else if (age < 18) {\n          rt = \'Youth\';\n        } else if (gender === \'female\') {\n          rt = \'Female Adult\';\n        } else {\n          rt = \'Male Adult\';\n        }\n        return rt;\n      }),\n      field(\'Name\', \'Deceased Person\'),\n      field(\'Source__c\', true),\n      relationship(\'Catchment__r\', \'Name\', dataValue(\'catchment\')),\n      field(\'Client_Status__c\', \'Deceased\'),\n      field(\'Dead_age__c\', dataValue(\'age_dead\')),\n      field(\'Cause_of_Death__c\', state => {\n        var cause = dataValue(\'cause_of_death_dead\')(state);\n        return cause !== undefined\n          ? cause.toString().replace(/_/g, \' \')\n          : null;\n      }),\n      field(\'Verbal_autopsy__c\', dataValue(\'verbal_autopsy\')),\n      field(\'Client_Status__c\', \'Deceased\'),\n      field(\'Active_in_Thrive_Thru_5__c\', \'No\'),\n      field(\'Active_in_HAWI__c\', \'No\'),\n      field(\'Active_TT5_Mother__c\', \'No\'),\n      field(\'TT5_Mother_Registrant__c\', \'No\'),\n      field(\'Date_of_Death__c\', dataValue(\'Date\')),\n      field(\'Inactive_Date__c\', dataValue(\'Date\'))\n    )\n  )\n);\n\n')))}d.isMDXComponent=!0},300:function(e,n,a){"use strict";a.d(n,"a",(function(){return c})),a.d(n,"b",(function(){return m}));var t=a(0),r=a.n(t);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function _(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},f=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,s=_(e,["components","mdxType","originalType","parentName"]),c=d(a),f=t,m=c["".concat(o,".").concat(f)]||c[f]||u[f]||i;return a?r.a.createElement(m,l(l({ref:n},s),{},{components:a})):r.a.createElement(m,l({ref:n},s))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,o=new Array(i);o[0]=f;var l={};for(var _ in n)hasOwnProperty.call(n,_)&&(l[_]=n[_]);l.originalType=e,l.mdxType="string"==typeof e?e:t,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}f.displayName="MDXCreateElement"}}]);