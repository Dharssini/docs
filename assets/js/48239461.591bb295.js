"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[62244],{95788:(e,t,n)=>{n.d(t,{Iu:()=>u,yg:()=>f});var a=n(11504);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(45072),i=(n(11504),n(95788));const r={title:"Chaining multiple operations in one Job",sidebar_label:"Chaining operations"},o=void 0,l={unversionedId:"build/steps/multiple-operations",id:"build/steps/multiple-operations",title:"Chaining multiple operations in one Job",description:"This page describes why you might want to chain multiple operations in a single Job when designing your Step.",source:"@site/docs/build/steps/multiple-operations.md",sourceDirName:"build/steps",slug:"/build/steps/multiple-operations",permalink:"/documentation/next/build/steps/multiple-operations",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/build/steps/multiple-operations.md",tags:[],version:"current",frontMatter:{title:"Chaining multiple operations in one Job",sidebar_label:"Chaining operations"},sidebar:"docs",previous:{title:"Operations",permalink:"/documentation/next/build/steps/operations"},next:{title:"Initial and final state",permalink:"/documentation/next/build/steps/state"}},s={},p=[{value:"Reasons to use multiple operations in a single Job",id:"reasons-to-use-multiple-operations-in-a-single-job",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...r}=e;return(0,i.yg)(d,(0,a.c)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"This page describes why you might want to chain multiple operations in a single Job when designing your Step. "),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Chaining Steps",src:n(13608).c,width:"960",height:"540"})),(0,i.yg)("h3",{id:"reasons-to-use-multiple-operations-in-a-single-job"},"Reasons to use multiple operations in a single Job"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Your desired final ",(0,i.yg)("inlineCode",{parentName:"p"},"Output")," for a Step requires multiple operations to produce\n(e.g., get Patients to check if existing, then update existing Patient\nrecords).")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The job must be atomic, you want the whole thing to count as a failure if any\npart of it fails.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"You run Steps manually and you want a single button to click to retry the\nentire sequence of operations.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"You update a ",(0,i.yg)("inlineCode",{parentName:"p"},"cursor")," in a series of operations that involve ",(0,i.yg)("inlineCode",{parentName:"p"},"GET")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"POST"),".\nWhen the ",(0,i.yg)("inlineCode",{parentName:"p"},"POST")," fails, you don't want to update the ",(0,i.yg)("inlineCode",{parentName:"p"},"cursor")," for the\nsubsequent job run which contains the ",(0,i.yg)("inlineCode",{parentName:"p"},"GET"),"."),(0,i.yg)("p",{parentName:"li"},'See example Job below with 2 "upsert" (update/insert) operations.'),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-js"},"//first we upsert the Patient\nupsert(\n  'Patient__c',\n  'ExternalId',\n  fields(\n    field('ExternalId', dataValue('form.patient_id')),\n    field('Name', dataValue('form.surname')),\n    field('Other Names', dataValue('form.firstName')),\n    field('Age__c', dataValue('form.ageInYears')),\n    field('Is_Enrolled__c', true),\n    field('Enrollment_Status__c', 3)\n  )\n);\n//then we upsert the related Visit (child to the Patient record)\ncreate(\n  'Visit__c',\n  'ExternalId',\n  fields(\n    field('ExternalId', dataValue('form.visit_id')),\n    relationship('Patient__r', dataValue('form.patient_id')),\n    field('Name', dataValue('form.surname')),\n    field('Other Names', dataValue('form.firstName')),\n    field('Age__c', dataValue('form.ageInYears')),\n    field('Is_Enrolled__c', true),\n    field('Enrollment_Status__c', 3)\n  )\n);\n")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"")))}c.isMDXComponent=!0},13608:(e,t,n)=>{n.d(t,{c:()=>a});const a=n.p+"assets/images/chaining-operations-d1f722d28adf15701fe85429308a58a3.png"}}]);