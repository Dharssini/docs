"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[42068],{15680:(e,a,t)=>{t.d(a,{xA:()=>p,yg:()=>u});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function g(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=r.createContext({}),i=function(e){var a=r.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=i(e.components);return r.createElement(c.Provider,{value:a},e.children)},h="mdxType",s={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),h=i(t),d=n,u=h["".concat(c,".").concat(d)]||h[d]||s[d]||o;return t?r.createElement(u,l(l({ref:a},p),{},{components:t})):r.createElement(u,l({ref:a},p))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=d;var g={};for(var c in a)hasOwnProperty.call(a,c)&&(g[c]=a[c]);g.originalType=e,g[h]="string"==typeof e?e:n,l[1]=g;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9150:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>g,toc:()=>i});var r=t(58168),n=(t(96540),t(15680));const o={title:"googlehealthcare changelog",id:"googlehealthcare-changelog",keywords:["adaptor","changelog","googlehealthcare"]},l="Changelog for the googlehealthcare adaptor",g={unversionedId:"packages/googlehealthcare-changelog",id:"packages/googlehealthcare-changelog",title:"googlehealthcare changelog",description:"1.0.0",source:"@site/adaptors/packages/googlehealthcare-changelog.md",sourceDirName:"packages",slug:"/packages/googlehealthcare-changelog",permalink:"/adaptors/packages/googlehealthcare-changelog",draft:!1,tags:[],version:"current",frontMatter:{title:"googlehealthcare changelog",id:"googlehealthcare-changelog",keywords:["adaptor","changelog","googlehealthcare"]},sidebar:"adaptors",previous:{title:"Config for googlehealthcare",permalink:"/adaptors/packages/googlehealthcare-configuration-schema"},next:{title:"googlehealthcare developer readme",permalink:"/adaptors/packages/googlehealthcare-readme"}},c={},i=[{value:"1.0.0",id:"100",level:2},{value:"Major Changes",id:"major-changes",level:3},{value:"0.1.0",id:"010",level:2},{value:"Minor Changes",id:"minor-changes",level:3},{value:"Patch Changes",id:"patch-changes",level:3}],p={toc:i},h="wrapper";function s(e){let{components:a,...t}=e;return(0,n.yg)(h,(0,r.A)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"changelog-for-the-googlehealthcare-adaptor"},"Changelog for the googlehealthcare adaptor"),(0,n.yg)("h1",{id:"openfnlanguage-googlehealthcare"},"@openfn/language-googlehealthcare"),(0,n.yg)("h2",{id:"100"},"1.0.0"),(0,n.yg)("h3",{id:"major-changes"},"Major Changes"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"7df7e20: remove ",(0,n.yg)("inlineCode",{parentName:"p"},"projectId"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"dataSetId"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"cloudRegion"),", and ",(0,n.yg)("inlineCode",{parentName:"p"},"fhirStoreId")," out\nof configuration"),(0,n.yg)("p",{parentName:"li"},"The new implementation of ",(0,n.yg)("inlineCode",{parentName:"p"},"createFhirResource(fhirStore, resource, callback)"),"\nallows you to use one set of credentials to access different Google Healthcare\nCloud FHIR stores. ",(0,n.yg)("inlineCode",{parentName:"p"},"fhirStore")," is an object that contains the FHIR store\ninformation\n(",(0,n.yg)("inlineCode",{parentName:"p"},"{cloudRegion: string, projectId: string, datasetId: string, fhirStoreId: string}"),")."))),(0,n.yg)("h2",{id:"010"},"0.1.0"),(0,n.yg)("h3",{id:"minor-changes"},"Minor Changes"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"861d774: add createFhirResource function")),(0,n.yg)("h3",{id:"patch-changes"},"Patch Changes"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},'aad9549: Ensure that standard OAuth2 credentials with snake-cased\n"access_token" keys can be used for OAuth2-reliant adaptors'),(0,n.yg)("li",{parentName:"ul"},"Updated dependencies ","[aad9549]",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"@openfn/",(0,n.yg)("a",{parentName:"li",href:"mailto:language-common@1.10.0"},"language-common@1.10.0"))))))}s.isMDXComponent=!0}}]);