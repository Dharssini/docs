"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78728],{95788:(e,t,r)=>{r.d(t,{Iu:()=>g,yg:()=>y});var n=r(11504);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},g=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=s(r),u=a,y=p["".concat(i,".").concat(u)]||p[u]||d[u]||o;return r?n.createElement(y,l(l({ref:t},g),{},{components:r})):n.createElement(y,l({ref:t},g))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},99676:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(45072),a=(r(11504),r(95788));const o={title:"googlehealthcare@1.0.0",id:"googlehealthcare-docs",keywords:["adaptor","googlehealthcare","createFhirResource"]},l=void 0,c={unversionedId:"packages/googlehealthcare-docs",id:"packages/googlehealthcare-docs",title:"googlehealthcare@1.0.0",description:"createFhirResource",source:"@site/adaptors/packages/googlehealthcare-docs.md",sourceDirName:"packages",slug:"/packages/googlehealthcare-docs",permalink:"/adaptors/packages/googlehealthcare-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"googlehealthcare@1.0.0",id:"googlehealthcare-docs",keywords:["adaptor","googlehealthcare","createFhirResource"]},sidebar:"adaptors",previous:{title:"godata developer readme",permalink:"/adaptors/packages/godata-readme"},next:{title:"Config for googlehealthcare",permalink:"/adaptors/packages/googlehealthcare-configuration-schema"}},i={},s=[{value:"createFhirResource",id:"createfhirresource",level:2}],g={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(p,(0,n.c)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"createfhirresource"},"createFhirResource"),(0,a.yg)("p",null,"createFhirResource(","[fhirStore]",", resource, callback) \u21d2 ",(0,a.yg)("code",null,"Operation")),(0,a.yg)("p",null,"Create some resource in Google Cloud Healthcare"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Param"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"[fhirStore]"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("code",null,"Object")),(0,a.yg)("td",{parentName:"tr",align:null},"The FHIR store information.    - ",(0,a.yg)("inlineCode",{parentName:"td"},"cloudRegion")," (string): The cloud region where the FHIR store is located.    - ",(0,a.yg)("inlineCode",{parentName:"td"},"projectId")," (string): The ID of the project that contains the FHIR store.    - ",(0,a.yg)("inlineCode",{parentName:"td"},"datasetId")," (string): The ID of the dataset that contains the FHIR store.    - ",(0,a.yg)("inlineCode",{parentName:"td"},"fhirStoreId")," (string): The ID of the FHIR store.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"resource"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("code",null,"object")),(0,a.yg)("td",{parentName:"tr",align:null},"The FHIR resource data to be created")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"callback"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("code",null,"function")),(0,a.yg)("td",{parentName:"tr",align:null},"An optional callback function")))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example"),"  "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'createFhirResource(\n  {\n    cloudRegion: "us-central1",\n    projectId: "adjective-noun-123",\n    datasetId: "my-dataset",\n    fhirStoreId: "my-fhir-store",\n  },\n  {\n    resourceType: "Patient",\n    name: [{ use: "official", family: "Smith", given: ["Darcy"] }],\n    gender: "female",\n    birthDate: "1970-01-01",\n  }\n);\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example"),"  "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'createFhirResource(\n  {\n    cloudRegion: "us-central1",\n    projectId: "adjective-noun-123",\n    datasetId: "my-dataset",\n    fhirStoreId: "my-fhir-store",\n  },\n  (state) => ({\n    resourceType: "Encounter",\n    status: "finished",\n    class: {\n      system: "http://hl7.org/fhir/v3/ActCode",\n      code: "IMP",\n      display: "inpatient encounter",\n    },\n    reasonCode: [\n      {\n        text: "The patient had an abnormal heart rate. She was concerned about this.",\n      },\n    ],\n    subject: {\n      reference: `Patient/${state.data.id}`,\n    },\n  })\n);\n')),(0,a.yg)("hr",null))}d.isMDXComponent=!0}}]);