"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[46995],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function g(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function y(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):g(g({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},o="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=y(e,["components","mdxType","originalType","parentName"]),o=u(n),d=r,m=o["".concat(p,".").concat(d)]||o[d]||i[d]||l;return n?a.createElement(m,g(g({ref:t},s),{},{components:n})):a.createElement(m,g({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,g=new Array(l);g[0]=d;var y={};for(var p in t)hasOwnProperty.call(t,p)&&(y[p]=t[p]);y.originalType=e,y[o]="string"==typeof e?e:r,g[1]=y;for(var u=2;u<l;u++)g[u]=n[u];return a.createElement.apply(null,g)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},19975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>g,default:()=>i,frontMatter:()=>l,metadata:()=>y,toc:()=>u});var a=n(58168),r=(n(96540),n(15680));const l={title:"mysql@1.4.8",id:"mysql-docs",keywords:["adaptor","mysql","upsertMany"]},g=void 0,y={unversionedId:"packages/mysql-docs",id:"packages/mysql-docs",title:"mysql@1.4.8",description:"Functions",source:"@site/adaptors/packages/mysql-docs.md",sourceDirName:"packages",slug:"/packages/mysql-docs",permalink:"/adaptors/packages/mysql-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"mysql@1.4.8",id:"mysql-docs",keywords:["adaptor","mysql","upsertMany"]},sidebar:"adaptors",previous:{title:"mssql developer readme",permalink:"/adaptors/packages/mssql-readme"},next:{title:"Config for mysql",permalink:"/adaptors/packages/mysql-configuration-schema"}},p={},u=[{value:"Functions",id:"functions",level:2},{value:"insert",id:"insert",level:2},{value:"query",id:"query",level:2},{value:"sqlString",id:"sqlstring",level:2},{value:"upsert",id:"upsert",level:2},{value:"upsertMany",id:"upsertmany",level:2}],s={toc:u},o="wrapper";function i(e){let{components:t,...n}=e;return(0,r.yg)(o,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"functions"},"Functions"),(0,r.yg)("dl",null,(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#insert"},"insert(table, fields)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#query"},"query(options)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#sqlstring"},"sqlString(queryString)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#upsert"},"upsert(table, fields)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#upsertmany"},"upsertMany(table, data)"))),(0,r.yg)("h2",{id:"insert"},"insert"),(0,r.yg)("p",null,"insert(table, fields) \u21d2 ",(0,r.yg)("code",null,"Operation")),(0,r.yg)("p",null,"Insert a record"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"table"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The target table")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"fields"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"A fields object")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example"),"  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"execute(\n  insert('table', fields(\n     field('name', dataValue('name'))\n  ))\n)(state)\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"query"},"query"),(0,r.yg)("p",null,"query(options) \u21d2 ",(0,r.yg)("code",null,"Operation")),(0,r.yg)("p",null,"Execute a SQL statement"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"options"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"Payload data for the message")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example"),"  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"execute(\n  query({ sql: 'select * from users;' })\n)(state)\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"sqlstring"},"sqlString"),(0,r.yg)("p",null,"sqlString(queryString) \u21d2 ",(0,r.yg)("code",null,"Operation")),(0,r.yg)("p",null,"Execute a SQL statement"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"queryString"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"String")),(0,r.yg)("td",{parentName:"tr",align:null},"A query string (or function which takes state and returns a string)")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example"),"  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'execute(\n  sqlString(state => "select * from items;")\n)(state)\n')),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"upsert"},"upsert"),(0,r.yg)("p",null,"upsert(table, fields) \u21d2 ",(0,r.yg)("code",null,"Operation")),(0,r.yg)("p",null,"Insert or Update a record if matched"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"table"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The target table")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"fields"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"A fields object")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example"),"  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"execute(\n  upsert('table', fields(\n     field('name', dataValue('name'))\n  ))\n)(state)\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"upsertmany"},"upsertMany"),(0,r.yg)("p",null,"upsertMany(table, data) \u21d2 ",(0,r.yg)("code",null,"Operation")),(0,r.yg)("p",null,"Insert or update multiple records using ON DUPLICATE KEY"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"table"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The target table")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"array")),(0,r.yg)("td",{parentName:"tr",align:null},"An array of objects or a function that returns an array")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example"),"  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"upsertMany(\n  'users', // the DB table\n  [\n    { name: 'one', email: 'one@openfn.org' },\n    { name: 'two', email: 'two@openfn.org' },\n  ]\n)\n")),(0,r.yg)("hr",null))}i.isMDXComponent=!0}}]);