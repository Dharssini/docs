(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{320:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return s})),t.d(a,"toc",(function(){return l})),t.d(a,"default",(function(){return d}));var n=t(3),r=t(8),o=(t(0),t(336)),i={title:"513_Update_Household_in_SF with salesforce",sidebar_label:"513_Update_Household_in_SF",id:"513_Update_Household_in_SF-2019-10-08",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","upsert"]},s={unversionedId:"jobs/auto/513_Update_Household_in_SF-2019-10-08",id:"jobs/auto/513_Update_Household_in_SF-2019-10-08",isDocsHomePage:!1,title:"513_Update_Household_in_SF with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/513_Update_Household_in_SF-2019-10-08.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/513_Update_Household_in_SF-2019-10-08",permalink:"/library/jobs/auto/513_Update_Household_in_SF-2019-10-08",version:"current",sidebar_label:"513_Update_Household_in_SF",sidebarPosition:513,frontMatter:{title:"513_Update_Household_in_SF with salesforce",sidebar_label:"513_Update_Household_in_SF",id:"513_Update_Household_in_SF-2019-10-08",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","upsert"]},sidebar:"library",previous:{title:"513_Enroll_Person_in_SF with salesforce",permalink:"/library/jobs/auto/513_Enroll_Person_in_SF-2019-09-17"},next:{title:"514_Update_Person_in_SF with salesforce",permalink:"/library/jobs/auto/514_Update_Person_in_SF-2019-09-18"}},l=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],_={toc:l};function d(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},_,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(o.b)("h2",{id:"metadata"},"Metadata"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Name: 513_Update_Household_in_SF"),Object(o.b)("li",{parentName:"ul"},"Adaptor: ",Object(o.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(o.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(o.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(o.b)("li",{parentName:"ul"},"Created over 1 year ago"),Object(o.b)("li",{parentName:"ul"},"Updated about 2 months ago")),Object(o.b)("h2",{id:"key-functions"},"Key Functions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"alterState"),", ",Object(o.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(o.b)("inlineCode",{parentName:"p"},"field"),", ",Object(o.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(o.b)("inlineCode",{parentName:"p"},"upsert")),Object(o.b)("h2",{id:"expression"},"Expression"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"//MOH513 Update Household Form\nalterState(state => {\n  const supervisorMap = {\n    community_health_nurse: 'Community Health Nurse',\n    chw_supervisor: 'CHW Supervisor',\n    chewschas: 'CHEWs/CHAs',\n    other: 'Other',\n    none: 'None',\n  };\n  return { ...state, supervisorMap };\n});\n//Upserting Household, checks if Household exists via MOH Household Code\nupsert(\n  'Household__c',\n  'CommCare_Code__c',\n  fields(\n    field('MOH_household_code__c', dataValue('form.moh_code')),\n    field('CommCare_Code__c', dataValue('form.case.@case_id')),\n    field('Source__c', 1),\n    field('Household_CHW__c', dataValue('form.chw')), //CONFIRM IDs MATCH PRODUCTION\n    //field(\"Household_CHW__c\", \"a031x000002S9lm\"), //HARDCODED FOR SANDBOX TESTING --\x3e To replace with line above\n    //relationship(\"Catchment__r\",\"Name\", dataValue(\"form.catchment\")),// not needed for update HH\n    //field(\"Area__c\", dataValue(\"form.area\")),\n    //field(\"Household_village__c\", dataValue(\"form.village\")),\n    field('Deaths_in_the_last_6_months__c', state => {\n      var death = dataValue(\n        'form.Household_Information.deaths_in_past_6_months'\n      )(state);\n      return death > 0 ? 'Yes' : 'No';\n    }),\n    field('Active_Household__c', state => {\n      var status = dataValue('form.Household_Status')(state);\n      return status == 'Yes' ? true : false;\n    }),\n    field('Inactive_Reason__c', state => {\n      var reason = dataValue('form.Reason_for_Inactive')(state);\n      return reason !== undefined ? reason : null;\n    }),\n    field(\n      'Access_to_safe_water__c',\n      dataValue('form.Household_Information.Safe_Water')\n    ),\n    field(\n      'Treats_Drinking_Water__c',\n      dataValue('form.Household_Information.Treats_Drinking_Water')\n    ),\n    field(\n      'Tippy_Tap__c',\n      dataValue('form.Household_Information.Active_Handwashing_Station')\n    ),\n    field(\n      'Pit_Latrine__c',\n      dataValue('form.Household_Information.Functional_Latrine')\n    ),\n    field(\n      'Rubbish_Pit__c',\n      dataValue('form.Household_Information.Rubbish_Pit')\n    ),\n    field(\n      'Drying_Rack__c',\n      dataValue('form.Household_Information.Drying_Rack')\n    ),\n    field(\n      'Kitchen_Garden__c',\n      dataValue('form.Household_Information.Kitchen_Garden')\n    ),\n    field(\n      'Cookstove__c',\n      dataValue('form.Household_Information.Improved_Cooking_Method')\n    ),\n    field('Clothe__c', dataValue('form.Household_Information.Clothesline')),\n    field(\n      'WASH_Trained__c',\n      dataValue('form.Household_Information.WASH_Trained')\n    ),\n    field('Uses_ITNs__c', dataValue('form.Household_Information.ITNs')),\n    field(\n      'Total_household_people__c',\n      dataValue('form.Total_Number_of_Members')\n    ),\n    field(\n      'Supervisor_Visit__c',\n      state => state.supervisorMap[state.data.form.supervisor_visit]\n    ),\n    field(\"Health_insurance__c\",\n      dataValue(\"form.health_insurace_cover\")),\n    field(\n      \"Health_insurance_active_status__c\",\n      dataValue(\"form.healthinsurance_active\")\n    ),\n    field(\"Health_insurance_type__c\", (state) => {\n      var status = dataValue(\"form.health_insurance\")(state);\n      return status && status === 'other_please_specify_if_active' ? 'Other' :\n        status === 'nhif' ? 'NHIF' : status === 'Linda_mama' || 'linda_mama' ? 'Linda mama' : status;\n    }),\n    field(\"Health_insurance_other__c\", dataValue(\"form.if_other_please_specify\"))\n  )\n),\n  upsert(\n    'Visit__c',\n    'CommCare_Visit_ID__c',\n    fields(\n      field('CommCare_Visit_ID__c', dataValue('id')),\n      relationship(\n        'Household__r',\n        'CommCare_Code__c',\n        dataValue('form.case.@case_id')\n      ),\n      field('Visit_UID__c', state => {\n        var hh = dataValue('form.case.@case_id')(state);\n        var date = dataValue('form.Date')(state);\n        return hh + date;\n      }),\n      field('Date__c', dataValue('form.Date')),\n      //field(\"Household_CHW__c\", \"a031x000002S9lm\"), //Hardcoded for sandbox testing\n      field('Household_CHW__c', dataValue('form.chw')),\n      field('Name', 'CHW Visit'),\n      field(\n        'Supervisor_Visit__c',\n        state => state.supervisorMap[state.data.form.supervisor_visit]\n      )\n    )\n  );\n\n")))}d.isMDXComponent=!0},336:function(e,a,t){"use strict";t.d(a,"a",(function(){return u})),t.d(a,"b",(function(){return p}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var _=r.a.createContext({}),d=function(e){var a=r.a.useContext(_),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},u=function(e){var a=d(e.components);return r.a.createElement(_.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},f=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,_=l(e,["components","mdxType","originalType","parentName"]),u=d(t),f=n,p=u["".concat(i,".").concat(f)]||u[f]||c[f]||o;return t?r.a.createElement(p,s(s({ref:a},_),{},{components:t})):r.a.createElement(p,s({ref:a},_))}));function p(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var _=2;_<o;_++)i[_]=t[_];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);