(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{331:function(e,a,r){"use strict";r.d(a,"a",(function(){return d})),r.d(a,"b",(function(){return m}));var t=r(0),n=r.n(t);function o(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){o(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),u=function(e){var a=n.a.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):c(c({},a),e)),r},d=function(e){var a=u(e.components);return n.a.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},b=n.a.forwardRef((function(e,a){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),b=t,m=d["".concat(i,".").concat(b)]||d[b]||p[b]||o;return r?n.a.createElement(m,c(c({ref:a},s),{},{components:r})):n.a.createElement(m,c({ref:a},s))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},74:function(e,a,r){"use strict";r.r(a),r.d(a,"frontMatter",(function(){return i})),r.d(a,"metadata",(function(){return c})),r.d(a,"toc",(function(){return l})),r.d(a,"default",(function(){return u}));var t=r(3),n=r(8),o=(r(0),r(331)),i={title:"Create Outreach in SF with salesforce",sidebar_label:"Create Outreach in SF",id:"Create Outreach in SF-2020-06-19",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","upsert"]},c={unversionedId:"jobs/auto/Create Outreach in SF-2020-06-19",id:"jobs/auto/Create Outreach in SF-2020-06-19",isDocsHomePage:!1,title:"Create Outreach in SF with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Create Outreach in SF-2020-06-19.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Create Outreach in SF-2020-06-19",permalink:"/library/jobs/auto/Create Outreach in SF-2020-06-19",version:"current",sidebar_label:"Create Outreach in SF",frontMatter:{title:"Create Outreach in SF with salesforce",sidebar_label:"Create Outreach in SF",id:"Create Outreach in SF-2020-06-19",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","upsert"]},sidebar:"library",previous:{title:"Create Household in SF (Sandbox) with salesforce",permalink:"/library/jobs/auto/Create Household in SF Sandbox-2016-12-22"},next:{title:"Create Person in SF (Production) with salesforce",permalink:"/library/jobs/auto/Create Person in SF Production-2017-05-15"}},l=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],s={toc:l};function u(e){var a=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,r,{components:a,mdxType:"MDXLayout"}),Object(o.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(o.b)("h2",{id:"metadata"},"Metadata"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Name: Create Outreach in SF"),Object(o.b)("li",{parentName:"ul"},"Adaptor: ",Object(o.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(o.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(o.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(o.b)("li",{parentName:"ul"},"Created 11 months ago"),Object(o.b)("li",{parentName:"ul"},"Updated 28 days ago")),Object(o.b)("h2",{id:"key-functions"},"Key Functions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(o.b)("inlineCode",{parentName:"p"},"field"),", ",Object(o.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(o.b)("inlineCode",{parentName:"p"},"join"),", ",Object(o.b)("inlineCode",{parentName:"p"},"map"),", ",Object(o.b)("inlineCode",{parentName:"p"},"upsert")),Object(o.b)("h2",{id:"expression"},"Expression"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"//Job to integrate CommCare 'Outreach' form with SF\nupsert(\n  'Family_Planning_community_Distribution__c',\n  'Commcare_Case_ID__c',\n  fields(\n    field('Commcare_Case_ID__c', dataValue('id')),\n    relationship('Outreach_Catchment__r', 'Name', state => {\n      var area = dataValue('form.where_was_the_outreach_conducted')(state);\n      var newArea = area\n        .split(/_/g)\n        .map(\n          word => `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n        )\n        .join(' ');\n      return newArea;\n    }),\n    relationship('Outreach_Area__r', 'Name', state => {\n      var catchment = dataValue('form.where_was_the_outreach_conducted')(state);\n      var area1 = dataValue('form.outreach_area_NK')(state)\n        ? dataValue('form.outreach_area_NK')(state)\n        : dataValue('form.outreach_area_SK')(state);\n      var area = area1 ? area1 : dataValue('form.outreach_area_EK')(state);\n\n      var newArea = area\n        ? area\n            .split(/_/g)\n            .map(\n              word =>\n                `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n            )\n            .join(' ') //+ ' Area'\n        : catchment\n            .split(/_/g)\n            .map(\n              word =>\n                `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n            )\n            .join(' ');\n      return newArea;\n    }),\n    relationship('RecordType', 'Name', 'FP Community Outreach Distribution'),\n    field('Outreach_Date__c', dataValue('form.outreach_date')),\n    field('Male_Condoms__c', dataValue('form.male_condoms_total')),\n    field('Female_Condoms__c', dataValue('form.female_condoms_total')),\n    field('Pregnancy_tests__c', dataValue('form.pregnancy_test_total')),\n    field(\n      'Pregnancy_test_positive__c',\n      dataValue('form.positive_pregnancy_tests')\n    ),\n    field('Pregnancy_referrals__c', dataValue('form.pregnancy_referrals')),\n    field(\n      'Contraception_referrals__c',\n      dataValue('form.family_planning_referrals')\n    )\n  )\n);\n\n")))}u.isMDXComponent=!0}}]);