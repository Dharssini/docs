(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[2017],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},41446:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),o={title:"Attendance 2",sidebar_label:"Attendance 2",id:"Attendance-2-2021-06-14",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},s={unversionedId:"jobs/auto/Attendance-2-2021-06-14",id:"jobs/auto/Attendance-2-2021-06-14",isDocsHomePage:!1,title:"Attendance 2",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Attendance-2-2021-06-14.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Attendance-2-2021-06-14",permalink:"/library/jobs/auto/Attendance-2-2021-06-14",version:"current",sidebar_label:"Attendance 2",frontMatter:{title:"Attendance 2",sidebar_label:"Attendance 2",id:"Attendance-2-2021-06-14",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},sidebar:"library",previous:{title:"Attendance",permalink:"/library/jobs/auto/Attendance-2021-05-03"},next:{title:"Case CHW Update in SF (Sandbox)",permalink:"/library/jobs/auto/Case-CHW-Update-in-SF-Sandbox-2017-02-17"}},l=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],c={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: Attendance 2"),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.0.0"},(0,i.kt)("inlineCode",{parentName:"a"},"v2.0.0"))),(0,i.kt)("li",{parentName:"ul"},"Created 4 days ago"),(0,i.kt)("li",{parentName:"ul"},"Updated about 24 hours ago"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"64")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"alterState"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"each"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lastReferenceValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"merge"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Array")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"query(`SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`);\n\nalterState(state => {\n  // Note: lastReferenceValue selects the first item in the references array.\n  state.data.eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n  \n  function getSessionValue(present) {\n    switch (present.toString().toLowerCase()) {\n      case 'yes':\n        return 'X';\n      case 'no':\n        return 'A';\n      case '':\n        return 'N';\n      default:\n        return 'U';\n    }\n  }\n\n  function getSessionId(session_text) {\n    return session_text.toString().trim().slice(0, session_text.indexOf(' ')).slice(1);\n  }\n\n  function objectToArray(object) {\n    if (!object) return [];\n    return !Array.isArray(object) ? [object] : object;\n  }\n\n  state.data.form.attendance_list.update_participant_cases.item = objectToArray(\n    state.data.form.attendance_list.update_participant_cases.item\n  );\n\n  const sessionText = dataValue('form.attendance_list.session')(state);\n  const sessionId = getSessionId(sessionText);\n\n  //   @aleksa-krolls confirm the path for the session date\n  const sessionDate = dataValue(\"form.case['@date_modified']\")(state);\n\n  state.data.form.attendance_list.update_participant_cases.item =\n    state.data.form.attendance_list.update_participant_cases.item.map(item => {\n      const sessionValue = getSessionValue(item.attendance_session);\n      return {\n        ...item,\n        dynamicFields: { [`Session_${sessionId}__c`]: sessionValue, [`Session_${sessionId}_Date__c`]: sessionDate },\n      };\n    });\n\n  return state;\n});\n\neach(\n  merge(\n    dataPath('form.attendance_list.update_participant_cases.item[*]'),\n    fields(\n      field('intervention_name', dataValue('form.intervention_name')),\n      field('eventName', dataValue('eventName')),\n      field('caseid', dataValue('form.case.@case_id'))\n    )\n  ),\n  upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n    ...fields(\n      relationship('Event__r', 'CommCare_Case_ID__c', dataValue('caseid')),\n      field('CommCare_Ext_ID__c', state => `${state.data['@id']}-${state.data.eventName}`),\n      relationship('Person_Attendance__r', 'Participant_Identification_Number_PID__c', dataValue('@id'))\n    ),\n    ...state.data.dynamicFields,\n  }))\n);\n\n")))}d.isMDXComponent=!0}}]);