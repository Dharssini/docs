"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[4052],{3905:function(e,n,a){a.d(n,{Zo:function(){return d},kt:function(){return f}});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function _(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?_(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):_(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},_=Object.keys(e);for(t=0;t<_.length;t++)a=_[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var _=Object.getOwnPropertySymbols(e);for(t=0;t<_.length;t++)a=_[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,_=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(a),f=r,m=u["".concat(s,".").concat(f)]||u[f]||c[f]||_;return a?t.createElement(m,i(i({ref:n},d),{},{components:a})):t.createElement(m,i({ref:n},d))}));function f(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var _=a.length,i=new Array(_);i[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<_;l++)i[l]=a[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},92919:function(e,n,a){a.r(n),a.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var t=a(83117),r=a(80102),_=(a(67294),a(3905)),i=["components"],o={title:"NEW] 514_Update_Person_in_SF__V2",sidebar_label:"\u2728 NEW] 514_Update_Person_in_SF__V2",id:"NEW-514_Update_Person_in_SF__V2-2021-09-27",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},s=void 0,l={unversionedId:"jobs/auto/NEW-514_Update_Person_in_SF__V2-2021-09-27",id:"jobs/auto/NEW-514_Update_Person_in_SF__V2-2021-09-27",title:"NEW] 514_Update_Person_in_SF__V2",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/NEW-514_Update_Person_in_SF__V2-2021-09-27.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/NEW-514_Update_Person_in_SF__V2-2021-09-27",permalink:"/library/jobs/auto/NEW-514_Update_Person_in_SF__V2-2021-09-27",draft:!1,tags:[],version:"current",frontMatter:{title:"NEW] 514_Update_Person_in_SF__V2",sidebar_label:"\u2728 NEW] 514_Update_Person_in_SF__V2",id:"NEW-514_Update_Person_in_SF__V2-2021-09-27",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},sidebar:"library",previous:{title:"\ud83d\udcdc Merge data into child array then upsert",permalink:"/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array"},next:{title:"\u2728 NEW] Referrals_Update_Person_Immunizations_V2",permalink:"/library/jobs/auto/NEW-Referrals_Update_Person_Immunizations_V2-2022-01-07"}},d={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],u={toc:c};function f(e){var n=e.components,a=(0,r.Z)(e,i);return(0,_.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,_.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,_.kt)("h2",{id:"metadata"},"Metadata"),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"Name: NEW] 514_Update_Person_in_SF__V2"),(0,_.kt)("li",{parentName:"ul"},"Adaptor: ",(0,_.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,_.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,_.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,_.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,_.kt)("inlineCode",{parentName:"a"},"latest"))),(0,_.kt)("li",{parentName:"ul"},"Created 11 months ago"),(0,_.kt)("li",{parentName:"ul"},"Updated about 1 month ago"),(0,_.kt)("li",{parentName:"ul"},"Score: ",(0,_.kt)("b",null,"92")," (an ",(0,_.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,_.kt)("h2",{id:"key-functions"},"Key Functions"),(0,_.kt)("p",null,(0,_.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,_.kt)("inlineCode",{parentName:"p"},"upsert")),(0,_.kt)("h2",{id:"expression"},"Expression"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-js"},"// MOH514 - Update Person form\nfn(state => {\n  state.cleanChoice = function (state, choice) {\n    if (choice) {\n      return choice.charAt(0).toUpperCase() + choice.slice(1).replace('_', ' ');\n    } else {\n      return '';\n    }\n  };\n\n  state.handleMultiSelect = function (state, multiField) {\n    return multiField\n      ? multiField\n          .replace(/ /gi, ';')\n          .toLowerCase()\n          .split(';')\n          .map(value => {\n            return (\n              value.charAt(0).toUpperCase() + value.slice(1).replace('_', ' ')\n            );\n          })\n          .join(';')\n      : '';\n  };\n\n  const pregDangerMap = {\n    Vaginal_Bleeding: 'Vaginal Bleeding',\n    Water_Breaks: 'Water Breaks before Time of Delivery',\n    Prolonged_Labour: 'Prolonged Labour over 12 Hours',\n    Convulsions: 'Convulsions or Fits',\n    Abdominal_Pain: 'Severe Abdominal Pain before Delivery',\n    High_Fever: 'High Fever',\n    Low_Baby_Movement: 'Feeling the Baby move less or not at all',\n    Swelling: 'Swelling of Face and Hands',\n    Severe_Headache: 'Severe or Continuous Headache for more than 12 hours',\n    Severe_Vomiting: 'Severe or Continuous Vomiting',\n    none: 'None',\n  };\n\n  const counselMap = {\n    anc_visits: 'ANC Visits',\n    early_initiation_of_anc_less_than_3_months:\n      'Early initiation of ANC (less than 3 months)',\n    completing_recomended_anc_visits: 'Completing recomended ANC visits',\n    danger_signs: 'Danger signs',\n    skilled_birth: 'Skilled birth',\n    immunization: 'Immunization',\n    individual_birth_plan: 'Individual Birth Plan',\n    emergency_preparedness: 'Emergency preparedness',\n    childcare_and_affection: 'Childcare and affection',\n    nutrition_counseling: 'Nutrition counseling',\n    growth_monitoring: 'Growth monitoring',\n    exclusive_breastfeeding: 'Exclusive breastfeeding',\n    complementary_feeding: 'Complementary feeding',\n    sleeping_under_llitn: 'Sleeping under LLITN',\n    knowing_hiv_status: 'Knowing HIV status',\n    indoor_pollution: 'Indoor pollution',\n    personal_hygiene: 'Personal Hygiene',\n    safe_drinking_water: 'Safe drinking water',\n    safe_disposal_of_human_waste: 'Safe disposal of human waste',\n  };\n\n  const serviceMap = {\n    Scheduled_PSC_Apt: 'Scheduled PSC Apt',\n    Adverse_Drug_Reaction_Side_Effect: 'Adverse Drug Reaction/Side Effect',\n    Malnutrition: 'Malnutrition',\n    Malaria: 'Malaria',\n    TB: 'TB',\n    Treatment_for_Other_OIs: 'Treatment for other Ols',\n    ARI: 'ARI',\n    Anemia: 'Anemia',\n    Diarrhea: 'Diarrhea',\n    Pregnancy_Care: 'Pregnancy Care (ANC)',\n    Family_Planning: 'Family Planning (FP)',\n    Preconception_Counseling: 'Preconception Counseling',\n    Injury: 'Injury',\n    Other: 'Other',\n  };\n\n  const reasonMapping = {\n    lack_of_access_to_fp_information: 'Lack of access to FP information',\n    no_access_to_fp_services_hospitals:\n      'Lack of hospitals or places where FP services can be accessed',\n    not_willing_to_use_fp_due_to_negative_effects_myths_and_misconceptions:\n      'Myths and misconceptions',\n    barriers_at_service_delivery_points: 'Barriers at service delivery points',\n    pregnant: 'The client is pregnant',\n    intentions_of_getting_pregnant: 'Intentions of getting pregnant',\n    not_sexually_active: 'The client is not sexually active',\n    other_barriers_culture_male_partners_parents_etc:\n      'Other barriers (culture, male partners, parents, etc)',\n  };\n\n  const milestoneTypeMap = {\n    cognitive_delays_learning_difficulties:\n      'Cognitive Delays Learning Difficulties',\n    motor_delays: 'Motor Delays',\n    speech_and_language_delay: 'Delay Speech and Language Delay',\n    social_and_emotional: 'Social and emotional',\n  };\n\n  const milestoneMap = {\n    movement: 'Movement',\n    hearing: 'Hearing',\n    communication: 'Communication',\n    seeing: 'Seeing',\n    cognitive_delays: 'Cognitive Delays',\n    play: 'Play',\n  };\n  const nutritionMap = {\n    severe: 'Severely Malnourished',\n    moderate: 'Moderately Malnourished',\n    normal: 'Normal',\n  };\n\n  return {\n    ...state,\n    counselMap,\n    serviceMap,\n    reasonMapping,\n    milestoneTypeMap,\n    milestoneMap,\n    nutritionMap,\n    pregDangerMap,\n  };\n});\n\n// Evaluates client status and how to upsert Person records\nfn(state => {\n  if (dataValue('form.Status.Client_Status')(state) === 'Active' &&\n    dataValue('metadata.username')(state) !== 'test.2021' &&\n    dataValue('metadata.username')(state) !== 'openfn.test' &&\n    dataValue('form.test_user')(state)  !== 'Yes')  {\n    console.log('Upserting Person in SF...');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        field(\n          'deworming_medication__c',\n          dataValue('form.TT5.Child_Information.Deworming')\n        ),\n        field('Source__c', 1),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field(\n          'MCH_booklet__c',\n          dataValue('form.TT5.Mother_Information.mch_booklet')\n        ),\n        field('Telephone__c', dataValue('form.Status.updated_phone_number')),\n        field('CommCare_HH_Code__c', dataValue('form.HH_ID')),\n        field('Client_Status__c', dataValue('form.Status.Client_Status')),\n        //== TODO: Ask how indicated when there is an unborn child =====//\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var unborn = dataValue(\n            'form.ANCs.pregnancy_danger_signs.Delivery_Information.Person_Name'\n          )(state);\n          var name2 =\n            name1 === undefined || name1 === '' || name1 === null\n              ? unborn\n              : name1.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                });\n          return name1 !== null ? name2 : 'Unborn Child';\n        }),\n        field(\n          'Gender__c',\n          dataValue(\n            'form.ANCs.pregnancy_danger_signs.Delivery_Information.Person_Sex'\n          )\n        ),\n        field('Child_Status__c', state => {\n          var status = dataValue('form.case.update.child_status')(state);\n          var rt = dataValue('form.RecordType')(state);\n          if (status && rt === 'Unborn') {\n            status = 'Unborn';\n          } else if (status && rt === 'Born') {\n            status = 'Born';\n          }\n          return status;\n        }),\n        //===================================================//\n        relationship('RecordType', 'Name', state => {\n          var rt = dataValue('form.RecordType')(state);\n          return rt === 'Unborn' || rt === ''\n            ? 'Child'\n            : rt.toString().replace(/_/g, ' '); //convert Unborn children to Child RT\n        }),\n        field(\n          'Individual_birth_plan_counselling__c',\n          dataValue('form.ANCs.pregnancy_danger_signs.individual_birth_plan')\n        ),\n        field('Reason_for_not_taking_a_pregnancy_test__c', state => {\n          var reason = dataValue('form.TT5.Mother_Information.No_Preg_Test')(\n            state\n          );\n          return reason ? reason.toString().replace(/_/g, ' ') : undefined;\n        }),\n        field('Pregnancy_danger_signs__c', state => {\n          var signs = dataValue(\n            'form.ANCs.pregnancy_danger_signs.pregnancy_danger_signs'\n          )(state);\n          return signs ? state.pregDangerMap[signs] : undefined;\n        }),\n        field('Child_Danger_Signs__c', state => {\n          var signs = dataValue(\n            'form.TT5.Child_Information.Danger_Signs.Other_Danger_Signs'\n          )(state);\n          return signs\n            ? signs\n                .toLowerCase()\n                .split(' ')\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                .join(';')\n                .toString()\n                .replace(/_/g, ' ')\n            : signs;\n        }),\n        field('Current_Malaria_Status__c', dataValue('form.treatment_and_tracking.malaria_test_results')),\n        field(\n          'Unique_Patient_Code__c',\n          dataValue('form.HAWI.Unique_Patient_Code')\n        ),\n        field(\n          'Active_in_Support_Group__c',\n          dataValue('form.HAWI.Support_Group')\n        ),\n        field(\n          'Preferred_Care_Facility__c',\n          dataValue('form.HAWI.Preferred_Care_F.Preferred_Care_Facility')\n        ),\n        field('HAWI_Defaulter__c', state => {\n          var hawi = dataValue('form.HAWI.Preferred_Care_F.default')(state);\n          return hawi === 'Yes' ? true : false;\n        }),\n        field(\n          'Date_of_Default__c',\n          dataValue('form.HAWI.Preferred_Care_F.date_of_default')\n        ),\n        field(\n          'Persons_temperature__c',\n          dataValue('form.treatment_and_tracking.temperature')\n        ),\n        field(\n          'Days_since_illness_start__c',\n          dataValue('form.treatment_and_tracking.duration_of_sickness')\n        ),\n        field(\n          'Newborn_visited_48_hours_of_delivery__c',\n          dataValue(\n            'form.TT5.Child_Information.newborn_visited_48_hours_of_delivery'\n          )\n        ),\n        field(\n          'Newborn_visited_by_a_CHW_within_6_days__c',\n          dataValue('form.TT5.Child_Information.visit_6_days_from_delivery')\n        ),\n        field(\n          'Current_Malaria_Status__c',\n          dataValue('form.treatment_and_tracking.malaria_test_results')\n        ),\n        field(\n          'Malaria_Facility__c',\n          dataValue('form.treatment_and_tracking.malaria_referral_facility')\n        ),\n        //== QUESTION: TO update these mappings?? ========///\n        // field(\n        //   'Last_Malaria_Home_Test__c',\n        //   dataValue('form.treatment_and_tracking.malaria_test_date')\n        // ),\n        // field('Last_Malaria_Home_Treatment__c', (state) => {\n        //   var home = dataValue('form.treatment_and_tracking.home_treatment');\n        //   return home === 'yes'\n        //     ? dataValue('form.treatment_and_tracking.malaria_test_date')(state)\n        //     : undefined;\n        // }),\n        field(\n          'Fever_over_7days__c',\n          dataValue('form.treatment_and_tracking.symptoms_check_fever')\n        ),\n        field(\n          'Cough_over_14days__c',\n          dataValue('form.treatment_and_tracking.symptoms_check_cough')\n        ),\n        //=========================================//\n        field(\n          'Diarrhoea_over_14days__c',\n          dataValue('form.treatment_and_tracking.symptoms_check_diarrhea')\n        ),\n        field(\n          'Diarrhoea_less_than_14_days__c',\n          dataValue('form.treatment_and_tracking.mild_symptoms_check_diarrhea')\n        ),\n        field(\n          'TB_patients_therapy_observed__c',\n          dataValue('form.treatment_and_tracking.observed_tb_therapy')\n        ),\n        field(\n          'Injuries_or_wounds__c',\n          dataValue('form.treatment_and_tracking.wounds_or_injuries')\n        ),\n        field('Currently_on_ART_s__c', dataValue('form.HAWI.ART')),\n        field('ART_Regimen__c', dataValue('form.HAWI.ARVs')),\n        field(\n          'Immediate_Breastfeeding__c',\n          dataValue(\n            'form.ANCs.pregnancy_danger_signs.Delivery_Information.Breastfeeding_Delivery'\n          )\n        ),\n        field(\n          'Date_of_Birth__c',\n          dataValue('form.ANCs.pregnancy_danger_signs.Delivery_Information.DOB')\n        ),\n        field('Place_of_Delivery__c', state => {\n          var facility = dataValue('form.TT5.Child_Information.Delivery_Type')(\n            state\n          );\n          return facility === 'Skilled'\n            ? 'Facility'\n            : facility === 'Unskilled'\n            ? 'Home'\n            : undefined;\n        }),\n        field('Delivery_Facility__c', state => {\n          var facility = dataValue(\n            'form.TT5.Child_Information.Delivery_Facility'\n          )(state);\n          return facility ? facility.toString().replace(/_/g, ' ') : null;\n        }),\n        field(\n          'Delivery_Facility_Other__c',\n          dataValue('form.TT5.Child_Information.Delivery_Facility_Other')\n        ),\n        field(\n          'Exclusive_Breastfeeding__c',\n          dataValue(\n            'form.TT5.Child_Information.Exclusive_Breastfeeding.Exclusive_Breastfeeding'\n          )\n        ),\n        field(\n          'Counselled_on_Exclusive_Breastfeeding__c',\n          dataValue(\n            'form.TT5.Child_Information.Exclusive_Breastfeeding.counseling'\n          )\n        ),\n        field(\n          'Family_Planning__c',\n          dataValue('form.TT5.Mother_Information.family_planning')\n        ),\n        field(\n          'Family_Planning_Method__c',\n          dataValue('form.TT5.Mother_Information.family_planning_method')\n        ),\n        field('Reasons_for_not_taking_FP_method__c', state => {\n          var reason = dataValue(\n            'form.TT5.Mother_Information.No_FPmethod_reason'\n          )(state);\n          return reason ? state.reasonMapping[reason] : '';\n        }),\n        field('Pregnant__c', state => {\n          var preg = dataValue('form.TT5.Mother_Information.Pregnant')(state);\n          return preg === 'Yes' ? true : false;\n        }),\n        field(\n          'Counselled_on_FP_Methods__c',\n          dataValue('form.TT5.Mother_Information.CounselledFP_methods')\n        ),\n        field('Client_counselled_on__c', state => {\n          var choices =\n            dataValue('form.treatment_and_tracking.counseling.counsel_topic')(\n              state\n            ) || dataValue('form.counseling.counsel_topic')(state);\n          var choiceGroups = choices ? choices.split(' ') : null;\n          //console.log(choices);\n          var choicesMulti = choiceGroups\n            ? choiceGroups\n                .map(cg => {\n                  return state.counselMap[cg];\n                })\n                .join(';')\n            : choiceGroups;\n          return choicesMulti;\n        }),\n        field('Client_provided_with_FP__c', state => {\n          var choice = dataValue(\n            'form.TT5.Mother_Information.was_the_woman_15-49yrs_provided_with_family_planning_commodities_by_chv'\n          )(state);\n          return state.cleanChoice(state, choice);\n        }),\n        field(\n          'Newborn_visited_48_hours_of_delivery__c',\n          dataValue(\n            'form.TT5.Child_Information.newborn_visited_48_hours_of_delivery'\n          )\n        ),\n        field('Newborn_visit_counselling__c', state => {\n          var choice = dataValue(\n            'form.TT5.Child_Information.did_you_consel_the_mother_on1'\n          )(state);\n          return state.cleanChoice(state, choice);\n        }),\n        field(\n          'mother_visited_48_hours_of_the_delivery__c',\n          dataValue('form.TT5.Child_Information.visit_mother_48')\n        ),\n        field('Mother_visit_counselling__c', state => {\n          var choice = dataValue(\n            'form.TT5.Child_Information.did_you_consel_the_mother_on2'\n          )(state);\n          return state.cleanChoice(state, choice);\n        }),\n        field('Know_HIV_status__c', dataValue('form.HAWI.known_hiv_status')),\n        field('HIV_Status__c', state => {\n          var status = dataValue('form.HAWI.hiv_status')(state);\n          return status === 'yes'\n            ? 'Known'\n            : status === 'no'\n            ? 'Unknown'\n            : undefined;\n        }),\n        field('Treatment_Distribution__c', state => {\n          var choice = dataValue(\n            'form.treatment_and_tracking.distribution.distributed_treatments'\n          )(state);\n          return state.cleanChoice(state, choice);\n        }),\n        field(\n          'Current_Weight__c',\n          dataValue('form.TT5.Child_Information.Nutrition.current_weight')\n        ),\n        field(\n          'Current_Height__c',\n          dataValue('form.TT5.Child_Information.Nutrition.current_height')\n        ),\n        field(\n          'Current_MUAC__c',\n          dataValue('form.TT5.Child_Information.Nutrition.MUAC')\n        ),\n        field('Current_Nutrition_Status__c', state => {\n          var status = dataValue(\n            'form.TT5.Child_Information.Nutrition2.Nutrition_Status'\n          )(state);\n          return status ? state.nutritionMap[status] : undefined;\n        }),\n        field(\n          'Child_missed_immunization_type__c',\n          dataValue(\n            'form.TT5.Child_Information.Immunizations.immunization_type'\n          )\n        ),\n        field('Default_on_TB_treatment__c', state => {\n          var choice = dataValue(\n            'form.treatment_and_tracking.default_tb_treatment'\n          )(state);\n          return state.cleanChoice(state, choice);\n        }),\n        field(\n          'Received_pregnancy_test__c',\n          dataValue(\n            'form.TT5.Mother_Information.did_you_adminsiter_a_pregnancy_test'\n          )\n        ),\n        field(\n          'Pregnancy_test_result__c',\n          dataValue('form.TT5.Mother_Information.pregnancy_test_result')\n        ),\n        field('Chronic_illness__c', state => {\n          var choice = dataValue(\n            'form.question1.please_specify_which_chronic_illness_the_person_has'\n          )(state);\n          var choice2 = state.handleMultiSelect(state, choice);\n          return choice2 ? choice2.replace(/_/g, ' ') : '';\n        }),\n        field(\n          'Birth_Certificate__c',\n          dataValue('form.Status.birth_certificate')\n        ),\n        field(\n          'Child_zinc__c',\n          dataValue(\n            'form.TT5.Child_Information.Clinical_Services.diarrhea_clinic_treatment_zinc'\n          )\n        ),\n        field(\n          'Child_ORS__c',\n          dataValue(\n            'form.TT5.Child_Information.Clinical_Services.diarrhea_clinic_treatment_ORS'\n          )\n        ),\n        field(\n          'Childs_breath_per_minute__c',\n          dataValue('form.psbi.breaths_per_minuite')\n        ),\n        field(\n          'Child_chest_in_drawing__c',\n          dataValue('form.psbi.Child_chest_in_drawing_c')\n        ),\n        field(\n          'Did_you_counsel_caregiver_on__c',\n          dataValue(\n            'form.TT5.Child_Information.ecd_milestones.did_you_counsel_the_caregiver_on_delayed_milestones'\n          )\n        ),\n        field(\n          'Delayed_Milestone__c',\n          dataValue(\n            'form.TT5.Child_Information.ecd_milestones.does_the_child_has_a_delayed_milestone'\n          )\n        ),\n        field(\n          'Child_has_2_or_more_play_items__c',\n          dataValue(\n            'form.TT5.Child_Information.ecd_milestones.does_the_child_has_2_or_more_play_items_at_home'\n          )\n        ),\n        field(\n          'Child_has_3_or_more_picture_books__c',\n          dataValue(\n            'form.TT5.Child_Information.ecd_milestones.does_the_child_has_3_or_more_picture_books'\n          )\n        ),\n        field('Delayed_Milestones_Counselled_On__c', state => {\n          var ms = dataValue(\n            'form.TT5.Child_Information.ecd_milestones.which_delayed_milestone_area_did_you_counsel_the_caregiver_on'\n          )(state);\n          return ms ? state.milestoneMap[ms] : undefined;\n        }),\n        field('Delayed_Milestone_Type__c', state => {\n          var ms = dataValue(\n            'form.TT5.Child_Information.ecd_milestones.which_delayed_milestone'\n          )(state);\n          return ms ? state.milestoneTypeMap[ms] : undefined;\n        }),\n        field('Caretaker_trained_in_muac__c',dataValue('form.TT5.Child_Information.caretaker_muac.mother_trained_muac')),\n        field('Caretaker_screened_for_muac_this__c',dataValue('form.TT5.Child_Information.caretaker_muac.mother_screened_child_muac')),\n        field('Caretaker_muac_findings__c',dataValue('form.TT5.Child_Information.caretaker_muac.mother_screened_child_muac_result')), \n        field('Caretaker_action_after_muac_screening__c',dataValue('form.TT5.Child_Information.caretaker_muac.mother_screened_muac_action')), \n        field('of_Caretaker_MUAC_screenings__c',dataValue('form.TT5.Child_Information.caretaker_muac.mother_nb_screening')),\n        field('Pulse_Oximeter__c',dataValue('form.psbi.pulse_oximeter_available')),\n        field('Heart_Rate_Pulse_Oximeter__c',dataValue('form.psbi.heart_rate_pulse_oximeter')),\n        field('Oxygen_Concentration_Pulse_Oximeter__c',dataValue('form.psbi.oxygen_concentration')),\n        field('Can_child_drink__c',dataValue('form.psbi.can_child_drink')),\n        field('Antibiotic_provided_for_fast_breathing__c',dataValue('form.psbi.antibiotic_fast_breathing')),\n        field('Antibiotic_provided_for_chest_indrawing__c',dataValue('form.psbi.antibiotic_chest_indrawing')),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n  // Transfer Outs\n  else if (\n    dataValue('form.Status.Client_Status')(state) === 'Transferred_Out'\n  ) {\n    console.log('Transferred out');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('Source__c', 1),\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var name2 = name1.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n          return name2;\n        }),\n        field('Client_Status__c', 'Transferred Out'),\n        field('TT5_Mother_Registrant__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Thrive_Thru_5_Registrant__c', 'No'),\n        field('Inactive_Date__c', dataValue('form.Date')),\n        field('Active_in_HAWI__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field(\n          'Date_of_Transfer_Out__c',\n          dataValue('form.Status.Date_of_Transfer_Out')\n        ),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n  // Lost to Follow Up\n  else if (\n    dataValue('form.Status.Client_Status')(state) === 'Lost_to_Follow_Up'\n  ) {\n    console.log('Lost to follow up');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('Source__c', 1),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var name2 = name1.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n          return name2;\n        }),\n        field('Client_Status__c', 'Lost to Follow-Up'),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('TT5_Mother_Registrant__c', 'No'),\n        field('Active_in_HAWI__c', 'No'),\n        field('Date_Last_Seen__c', dataValue('form.Status.Date_Last_Seen')),\n        field('Inactive_Date__c', dataValue('form.Date')),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n  // Graduated from Thrive Thru 5\n  else if (\n    dataValue('form.Status.Client_Status')(state) === 'Graduated_From_TT5'\n  ) {\n    console.log('Graduated from TT5');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('Source__c', 1),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var name2 = name1.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n          return name2;\n        }),\n        field('Client_Status__c', 'Graduated From TT5'),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('TT5_Mother_Registrant__c', 'No'),\n        field('Active_in_HAWI__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('Date_Last_Seen__c', dataValue('form.Status.Date_Last_Seen')),\n        field('Inactive_Date__c', dataValue('form.Date')),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n  // Data entry error\n  else if (\n    dataValue('form.Status.Client_Status')(state) === 'Data_Entry_Error'\n  ) {\n    console.log('Data entry error flagged in CommCare; resyncing');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('Source__c', 1),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var name2 = name1.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n          return name2;\n        }),\n        field('Client_Status__c', 'Data Entry Error'),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('TT5_Mother_Registrant__c', 'No'),\n        field('Active_in_HAWI__c', 'No'),\n        field('Inactive_Date__c', dataValue('form.Date')),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n  // Deceased\n  else if (dataValue('form.Status.Client_Status')(state) === 'Deceased') {\n    console.log('Person is deceased');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('Source__c', 1),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Name', state => {\n          var name1 = dataValue('form.Person_Name')(state);\n          var name2 = name1.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n          return name2 + 'deceased';\n        }),\n        field('Verbal_autopsy__c', dataValue('form.Status.verbal_autopsy')),\n        field('Client_Status__c', 'Deceased'),\n        field('Child_Status__c', 'Deceased'),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Thrive_Thru_5_Registrant__c', 'No'),\n        field('Active_in_HAWI__c', 'No'),\n        field('Active_TT5_Mother__c', 'No'),\n        field('TT5_Mother_Registrant__c', 'No'),\n        field('Date_of_Death__c', dataValue('form.Status.Date_of_Death')),\n        field('Cause_of_Death__c', state => {\n          var death = dataValue('form.Status.Cause_of_Death')(state);\n          return death ? death.toString().replace(/_/g, ' ') : death;\n        }),\n        field('Inactive_Date__c', dataValue('form.Date')),\n        field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n        field('Case_Closed_Date__c', state => {\n          var closed = dataValue('form.case.update.closed')(state); \n          var date =  dataValue('server_modified_on')(state); \n          return closed && closed == true ? date : undefined; \n        })\n      )\n    )(state);\n  }\n\n  console.log('None of the ifs matched, skipping upsert and returning state.');\n  return state;\n});\n\n// Person is added to TT5 ?\nfn(state => {\n  if (\n    (dataValue('form.case.update.TT5_enrollment_status')(state) ==\n      'Enrolled in TT5' ||\n      dataValue('form.age')(state) < 5 ||\n      dataValue('form.case.update.Active_in_TT5')(state) === 'Yes' ||\n      dataValue('form.TT5.Mother_Information.Pregnant') === 'Yes') &&\n    dataValue('form.Status.Client_Status')(state) === 'Active'\n  ) {\n    console.log('Person active in TT5');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Active_in_Thrive_Thru_5__c', 'Yes'),\n        field('Enrollment_Date__c', dataValue('metadata.timeEnd')),\n        field('Thrive_Thru_5_Registrant__c', 'Yes'),\n        field('Active_TT5_Mother__c', state => {\n          var preg = dataValue('form.TT5.Mother_Information.Pregnant')(state);\n          return preg === 'Yes' ? 'Yes' : null;\n        }),\n        field('TT5_Mother_Registrant__c', state => {\n          var preg = dataValue('form.TT5.Mother_Information.Pregnant')(state);\n          return preg === 'Yes' ? 'Yes' : null;\n        })\n      )\n    )(state);\n  }\n\n  console.log('No person was added to TT5, skipping upsert.');\n  return state;\n});\n\n//Person over age 5 / NOT active in TT5\nfn(state => {\n  if (\n    (dataValue('form.age')(state) > 5 ||\n      dataValue('form.case.update.Active_in_TT5')(state) === 'No') &&\n    dataValue('form.Status.Client_Status')(state) === 'Active'\n  ) {\n    console.log('Person NOT active in TT5');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Active_in_Thrive_Thru_5__c', 'No'),\n        field('Thrive_Thru_5_Registrant__c', 'No')\n      )\n    )(state);\n  }\n\n  console.log('No person over age 5, skipping upsert.');\n  return state;\n});\n\n//Person is added to HAWI ?\nfn(state => {\n  if (\n    (dataValue('form.case.update.HAWI_enrollment_status')(state) ==\n      'Enrolled in HAWI' ||\n      dataValue('form.hiv_status')(state) === 'positive' ||\n      dataValue('form.case.update.Active_in_HAWI')(state) === 'Yes') &&\n    dataValue('form.Status.Client_Status')(state) === 'Active'\n  ) {\n    console.log('Person in HAWI');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Active_in_HAWI__c', 'Yes'),\n        field('HAWI_Enrollment_Date__c', dataValue('metadata.timeEnd')),\n        field('HAWI_Registrant__c', 'Yes'),\n        field('HIV_Status__c', 'positive')\n      )\n    )(state);\n  }\n\n  console.log('No person added to HAWI, skipping upsert.');\n  return state;\n});\n\n// Person is NOT enrolled in HAWI\nfn(state => {\n  if (\n    dataValue('form.case.update.HAWI_enrollment_status')(state) ==\n      'Not enrolled in HAWI' &&\n    dataValue('form.Status.Client_Status')(state) === 'Active'\n  ) {\n    console.log('Person NOT in HAWI');\n    return upsert(\n      'Person__c',\n      'CommCare_ID__c',\n      fields(\n        relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.HH_ID')\n        ),\n        field('CommCare_ID__c', dataValue('form.case.@case_id')),\n        field('Active_in_HAWI__c', 'No'),\n        field('HAWI_Registrant__c', 'No')\n      )\n    )(state);\n  }\n\n  console.log('No person added to HAWI, skipping upsert.');\n  return state;\n});\n\n")))}f.isMDXComponent=!0}}]);