"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78314],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),u=o,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(f,p(p({ref:t},c),{},{components:n})):r.createElement(f,p({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,p[1]=i;for(var s=2;s<a;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},17384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={title:"nexmo developer readme",id:"nexmo-readme",keywords:["adaptor","readme","nexmo"]},p="nexmo Adaptor developer README.md",i={unversionedId:"packages/nexmo-readme",id:"packages/nexmo-readme",title:"nexmo developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/nexmo",source:"@site/adaptors/packages/nexmo-readme.md",sourceDirName:"packages",slug:"/packages/nexmo-readme",permalink:"/adaptors/packages/nexmo-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"nexmo developer readme",id:"nexmo-readme",keywords:["adaptor","readme","nexmo"]},sidebar:"adaptors",previous:{title:"nexmo changelog",permalink:"/adaptors/packages/nexmo-changelog"},next:{title:"ocl@0.2.5",permalink:"/adaptors/packages/ocl-docs"}},l={},s=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"sendSMS",id:"sendsms",level:3},{value:"sample expression",id:"sample-expression",level:4},{value:"Development",id:"development",level:2}],c={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nexmo-adaptor-developer-readmemd"},"nexmo Adaptor developer README.md"),(0,o.kt)("p",null,"Source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/nexmo"},"https://github.com/OpenFn/adaptors/tree/main/packages/nexmo")),(0,o.kt)("h1",{id:"language-nexmo"},"Language Nexmo"),(0,o.kt)("p",null,"Language Pack for building expressions and operations to interact with the Nexmo\nAPI."),(0,o.kt)("h2",{id:"documentation"},"Documentation"),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"View all the required and optional properties for ",(0,o.kt)("inlineCode",{parentName:"p"},"state.configuration")," in the\nofficial\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/nexmo-configuration-schema/"},"configuration-schema"),"\ndefinition."),(0,o.kt)("h3",{id:"sendsms"},"sendSMS"),(0,o.kt)("h4",{id:"sample-expression"},"sample expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"sendSMS('OpenFn', '0123456789', 'HelloWorld!');\n")),(0,o.kt)("h2",{id:"development"},"Development"),(0,o.kt)("p",null,"Clone the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,o.kt)("p",null,"Run tests using ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,o.kt)("p",null,"Build the project using ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,o.kt)("p",null,"To just build the docs run ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}m.isMDXComponent=!0}}]);