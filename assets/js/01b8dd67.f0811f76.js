(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{336:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var a=r(0),n=r.n(a);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),u=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),b=a,f=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return r?n.a.createElement(f,s(s({ref:t},c),{},{components:r})):n.a.createElement(f,s({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},72:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return u}));var a=r(3),n=r(8),o=(r(0),r(336)),i={title:"Create Person in SF with salesforce",sidebar_label:"Create Person in SF",id:"Create Person in SF-2019-02-25",keywords:["library","job","expression","salesforce","dataValue","field","fields","humanProper","upsert"]},s={unversionedId:"jobs/auto/Create Person in SF-2019-02-25",id:"jobs/auto/Create Person in SF-2019-02-25",isDocsHomePage:!1,title:"Create Person in SF with salesforce",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Create Person in SF-2019-02-25.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Create Person in SF-2019-02-25",permalink:"/library/jobs/auto/Create Person in SF-2019-02-25",version:"current",sidebar_label:"Create Person in SF",frontMatter:{title:"Create Person in SF with salesforce",sidebar_label:"Create Person in SF",id:"Create Person in SF-2019-02-25",keywords:["library","job","expression","salesforce","dataValue","field","fields","humanProper","upsert"]},sidebar:"library",previous:{title:"Create Person in SF (Sandbox) with salesforce",permalink:"/library/jobs/auto/Create Person in SF Sandbox-2016-12-29"},next:{title:"Create SF Contact with salesforce",permalink:"/library/jobs/auto/Create SF Contact-2021-03-01"}},l=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],c={toc:l};function u(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("em",null,"This job was provided by an OpenFn.org user via the job library API."),Object(o.b)("h2",{id:"metadata"},"Metadata"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Name: Create Person in SF"),Object(o.b)("li",{parentName:"ul"},"Adaptor: ",Object(o.b)("inlineCode",{parentName:"li"},"@openfn/language-salesforce")),Object(o.b)("li",{parentName:"ul"},"Adaptor Version: ",Object(o.b)("inlineCode",{parentName:"li"},"v1.3.2")),Object(o.b)("li",{parentName:"ul"},"Created about 2 years ago"),Object(o.b)("li",{parentName:"ul"},"Updated about 2 years ago")),Object(o.b)("h2",{id:"key-functions"},"Key Functions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dataValue"),", ",Object(o.b)("inlineCode",{parentName:"p"},"field"),", ",Object(o.b)("inlineCode",{parentName:"p"},"fields"),", ",Object(o.b)("inlineCode",{parentName:"p"},"humanProper"),", ",Object(o.b)("inlineCode",{parentName:"p"},"upsert")),Object(o.b)("h2",{id:"expression"},"Expression"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"upsert(\"Patient__c\", \"CommCare_Case_ID__c\", fields(\n  field('CommCare_Case_ID__c', dataValue(\"form.case.@case_id\")),\n  relationship('Clinic__r', 'Location_ID__c', dataValue('form.case.create.owner_id')),\n  field('First_Name__c', humanProper(state.data.form.case.update.patient_first_name)),\n  field('Last_Name__c', humanProper(state.data.form.case.update.patient_last_name)),\n  field('Patient_ID__c', dataValue('form.case.update.patient_id')),\n  field('Age_Months_Started_Treatment__c', dataValue('form.case.update.age_months_start_treatment_rounded')),\n  field('Registration_Date__c', (state) => {\n    const validDate = state.data.form.case.update.registration_date\n    return ( validDate ? new Date(validDate).toISOString() : null )\n  })\n))\n")))}u.isMDXComponent=!0}}]);