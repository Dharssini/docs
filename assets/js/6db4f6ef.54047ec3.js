(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[598],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50563:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),i={title:"Chaining HTTP Requests with http",sidebar_label:"\u2b50 Chaining HTTP Requests",id:"complex-http-request-chains",keywords:["library","job","expression","http","dataPath","each","get","post","put"]},s={unversionedId:"jobs/auto/complex-http-request-chains",id:"jobs/auto/complex-http-request-chains",isDocsHomePage:!1,title:"Chaining HTTP Requests with http",description:"\u2b50 This job is an official example from OpenFn.",source:"@site/library/jobs/auto/complex-http-request-chains.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/complex-http-request-chains",permalink:"/library/jobs/auto/complex-http-request-chains",version:"current",sidebar_label:"\u2b50 Chaining HTTP Requests",frontMatter:{title:"Chaining HTTP Requests with http",sidebar_label:"\u2b50 Chaining HTTP Requests",id:"complex-http-request-chains",keywords:["library","job","expression","http","dataPath","each","get","post","put"]},sidebar:"library",previous:{title:"Using async and array.map with http",permalink:"/library/jobs/auto/async-and-array-dot-map"},next:{title:"Promises and nested requests with http",permalink:"/library/jobs/auto/promise-all-nested-requests"}},p=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],l={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"\u2b50 This job is an official example from OpenFn."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: Chaining HTTP Requests"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("inlineCode",{parentName:"li"},"@openfn/language-http")),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("inlineCode",{parentName:"li"},"latest")),(0,o.kt)("li",{parentName:"ul"},"Created date unknown"),(0,o.kt)("li",{parentName:"ul"},"Updated date unknown")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"each"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"post"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"put")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"each(\n  dataPath('someArray[*]'),\n  post(\n    'https://en7a5l7u3izq6.x.pipedream.net/',\n    {\n      body: state => {\n        return { name: state.data.surname, age: state.data.age };\n      },\n    },\n    state => {\n      console.log('in the callback');\n      console.log(state.data);\n      get(\n        'https://en7a5l7u3izq6.x.pipedream.net/',\n        {},\n        // Note how we don't use: `put(args)(state)` because state is already\n        // provided by the parent operation, get(), to its callback...\n        put('https://en7a5l7u3izq6.x.pipedream.net/')\n        // ...but since we've called get() INSIDE an anonymous function, we'll\n        // need to pass state to it manually: get(args)(state)...\n      )(state);\n      return state;\n    }\n  )\n);\n\n")))}u.isMDXComponent=!0}}]);