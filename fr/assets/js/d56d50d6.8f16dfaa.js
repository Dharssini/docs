"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[1576],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return _}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),_=r,f=u["".concat(l,".").concat(_)]||u[_]||c[_]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},67242:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),o=["components"],s={title:"TEST] Household Case Update in SF",sidebar_label:"TEST] Household Case Update in SF",id:"TEST-Household-Case-Update-in-SF-2022-02-24",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","relationship","upsert","Array"]},l=void 0,p={unversionedId:"jobs/auto/TEST-Household-Case-Update-in-SF-2022-02-24",id:"jobs/auto/TEST-Household-Case-Update-in-SF-2022-02-24",title:"TEST] Household Case Update in SF",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/TEST-Household-Case-Update-in-SF-2022-02-24.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/TEST-Household-Case-Update-in-SF-2022-02-24",permalink:"/fr/library/jobs/auto/TEST-Household-Case-Update-in-SF-2022-02-24",tags:[],version:"current",frontMatter:{title:"TEST] Household Case Update in SF",sidebar_label:"TEST] Household Case Update in SF",id:"TEST-Household-Case-Update-in-SF-2022-02-24",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","relationship","upsert","Array"]},sidebar:"library",previous:{title:"TEST] 513_Enroll_Household_in_SF",permalink:"/fr/library/jobs/auto/TEST-513_Enroll_Household_in_SF-2021-09-27"},next:{title:"Upsert Aggregate Service Referrals",permalink:"/fr/library/jobs/auto/Upsert-Aggregate-Service-Referrals-2021-04-30"}},d=[{value:"Metadata",id:"metadata",children:[],level:2},{value:"Key Functions",id:"key-functions",children:[],level:2},{value:"Expression",id:"expression",children:[],level:2}],c={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: TEST] Household Case Update in SF"),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,i.kt)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,i.kt)("li",{parentName:"ul"},"Created 26 days ago"),(0,i.kt)("li",{parentName:"ul"},"Updated 25 days ago"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"35")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Array")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"//fn(state => {\n//  const person = state.data.form.Person;\n//  if (!Array.isArray(person)) {\n//    state.data.form.Person = [person];\n//  }\n\n//  titleCase = str => {\n//    var splitStr = str.toLowerCase().split(' ');\n//    for (var i = 0; i < splitStr.length; i++) {\n//      splitStr[i] =\n//        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n//    }\n//    return splitStr.join(' ');\n//  };\n\n//Not necessary - relates to a person (MOTG)\n // const reasonMapping = {\n //   pregnant: 'The client is pregnant',\n //   intentions_of_getting_pregnant: 'Intentions of getting pregnant',\n //   lack_of_access_to_fp_information: 'Lack of access to FP information',\n //   not_sexually_active: 'The client is not sexually active',\n //   other_barriers_culture_male_partners_parents_etc:\n //     'Other barriers (culture, male partners, parents, etc)',\n //   no_access_to_fp_services_hospitals:\n //     'Lack of hospitals or places where FP services can be accessed',\n //   not_willing_to_use_fp_due_to_negative_effects_myths_and_misconceptions:\n //     'Myths and misconceptions',\n //   barriers_at_service_delivery_points: 'Barriers at service delivery points',\n // };\n\n//  state.area = state.data.properties.area_name; \n//  state.catchment = state.data.properties.catchment_name;\n\n//  return { ...state, reasonMapping };\n//});\n\n//Upserting Household, checks if Household exists via MOH Household Code\nupsert(\n  'Household__c',\n  'CommCare_Code__c',\n  fields(\n    field('CommCare_Username__c', dataValue('form.meta.username')),\n    field('MOH_household_code__c', dataValue('properties.MOH_code')),\n    field('CommCare_Code__c', dataValue('case_id'),\n    field('Source__c', true),\n    field('Household_CHW__c', state => {\n      var chw = dataValue('properties.CHW_ID')(state);\n      return chw === 'a030800001zQrk'\n        ? 'a030800001zQrk5'\n        : chw\n        ? chw\n        : undefined;\n    }),\n    //field('Household_CHW__c', 'a031x000002S9lm'), //HARDCODED FOR SANDBOX TESTING --\x3e To replace with line above\n    relationship('Catchment__r', 'Name', state => {\n      var catchment =\n        state.data.form.catchment ||\n        state.data.form.location_info.catchment_name;\n      return catchment === '' || catchment === undefined\n        ? 'Unknown Location'\n        : catchment;\n    }), // check\n    field('Area__c', state => {\n      var area = dataValue('properties.Area_Name')(state);\n      return area === '' || area === undefined ? 'a002400000k6IKi' : area;\n    }),\n    field('Household_village__c', dataValue('properties.village')),\n    field(' Village__c',dataValue('properties.village_name')),\n    field('Deaths_in_the_last_6_months__c', state => {\n      var death = dataValue(\n        'properties.deaths_in_past_6_months'\n      )(state);\n      return death > 0 ? 'Yes' : 'No';\n    }),\n    field(\n      'Access_to_safe_water__c',\n      dataValue('properties.Safe_Water')\n    ),\n    field(\n      'Treats_Drinking_Water__c',\n    dataValue('properties.Treats_Drinking_Water')\n    ),\n    field(\n      'Tippy_Tap__c',\n     dataValue('properties.Active_Handwashing_Station')\n    ),\n    field(\n      'Pit_Latrine__c',\n    dataValue('properties.Functional_Latrine')\n    ),\n    field(\n      'Rubbish_Pit__c',\n      dataValue('properties.Rubbish_Pit')\n    ),\n    field(\n      'Drying_Rack__c',\n     dataValue('properties.Drying_Rack')\n    ),\n    field(\n      'Kitchen_Garden__c',\n      dataValue('properties.Kitchen_Garden')\n    ),\n    field(\n      'Cookstove__c',\n      dataValue('properties.Improved_Cooking_Method')\n    ),\n  dataValue('properties.Clothesline')\n    ),\n    field(\n      'WASH_Trained__c',\n    dataValue('properties.WASH_Trained')\n    ),\n    field(\n      'Total_household_people__c',\n dataValue('properties.Total_Number_of_Members')\n    ),\n    field('Health_insurance__c', dataValue('properties.health_insurace_cover')),\n    field(\n      'Health_insurance_active_status__c',\n      dataValue('properties.healthinsurance_active')\n    ),\n    field('Health_insurance_type__c', state => {\n      var status = dataValue('properties.health_insurance')(state);\n      return status && status === 'other_please_specify_if_active'\n        ? 'Other'\n        : status === 'nhif'\n        ? 'NHIF'\n        : status === 'Linda_mama' || 'linda_mama'\n        ? 'Linda mama'\n        : status;\n    }),\n    field(\n      'Other_Health_Insurance__c',\n      dataValue('properties.if_other_please_specify')\n    ),\n    field('Work_with_TBA__c', dataValue('properties.tba')),\n    field('TBA_name__c', dataValue('properties.which_tba')),\n    field('Last_Modified_Date_CommCare__c', \n   dataValue('server_date_modified')\n    ),\n    field('Case_Closed_Date__c', state => {\n      var closed = dataValue('date_closed')(state); \n      var date =  dataValue('server_date_modified')(state); \n      return closed && closed == true ? date : undefined; \n    })\n  )\n);\n")))}u.isMDXComponent=!0}}]);