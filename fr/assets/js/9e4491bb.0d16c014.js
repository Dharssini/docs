"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[806],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(t),m=r,f=c["".concat(l,".").concat(m)]||c[m]||p[m]||i;return t?a.createElement(f,s(s({ref:n},u),{},{components:t})):a.createElement(f,s({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4576:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),s={title:"Introduction aux Jobs"},o=void 0,l={unversionedId:"build/jobs",id:"build/jobs",isDocsHomePage:!1,title:"Introduction aux Jobs",description:"Un job d\xe9finit la s\xe9rie sp\xe9cifique de t\xe2ches ou d'actions de base de donn\xe9es \xe0 ex\xe9cuter lorsqu'un message d\xe9clencheur est re\xe7u (\xe0 partir d'un \xe9v\xe9nement) ou lorsqu'une heure pr\xe9programm\xe9e (et r\xe9currente) est atteinte.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/build/jobs.md",sourceDirName:"build",slug:"/build/jobs",permalink:"/fr/documentation/build/jobs",editUrl:"https://github.com/openfn/docs/edit/main/docs/build/jobs.md",tags:[],version:"current",frontMatter:{title:"Introduction aux Jobs"},sidebar:"docs",previous:{title:"La Bo\xeete \xe0 outils d'int\xe9gration",permalink:"/fr/documentation/getting-started/integration-toolkit"},next:{title:"Designing a job",permalink:"/fr/documentation/jobs/job-design-intro"}},d=[{value:"Les propri\xe9t\xe9s d&#39;un job",id:"les-propri\xe9t\xe9s-dun-job",children:[{value:"Adaptateurs",id:"adaptateurs",children:[]}]},{value:"Formulation d&#39;expressions de job",id:"formulation-dexpressions-de-job",children:[{value:"Une expression fondamentale",id:"une-expression-fondamentale",children:[]},{value:"dataValue",id:"datavalue",children:[]},{value:"Une expression avec Javascript personnalis\xe9",id:"une-expression-avec-javascript-personnalis\xe9",children:[]}]},{value:"Variables Globales Javascript disponibles",id:"variables-globales-javascript-disponibles",children:[]},{value:"Exemples de fonctions sp\xe9cifiques aux adaptateurs",id:"exemples-de-fonctions-sp\xe9cifiques-aux-adaptateurs",children:[{value:"langage-commun",id:"langage-commun",children:[]},{value:"Salesforce",id:"salesforce",children:[]},{value:"dhis2",id:"dhis2",children:[]},{value:"OpenMRS",id:"openmrs",children:[]}]},{value:"Extraits et \xe9chantillons",id:"extraits-et-\xe9chantillons",children:[{value:"Expression de job (pour CommCare vers SF)",id:"expression-de-job-pour-commcare-vers-sf",children:[]},{value:"Acc\xe8s au \xab\xa0tableau de donn\xe9es\xa0\xbb dans les soumissions Open Data Kit",id:"acc\xe8s-au-\xab-tableau-de-donn\xe9es-\xbb-dans-les-soumissions-open-data-kit",children:[]},{value:"ODK vers Salesforce: cr\xe9er un enregistrement parent avec de nombreux enfants \xe0 partir de donn\xe9es parentales",id:"odk-vers-salesforce-cr\xe9er-un-enregistrement-parent-avec-de-nombreux-enfants-\xe0-partir-de-donn\xe9es-parentales",children:[]},{value:"Cr\xe9er plusieurs enregistrements enfants SANS groupe de r\xe9p\xe9tition dans ODK",id:"cr\xe9er-plusieurs-enregistrements-enfants-sans-groupe-de-r\xe9p\xe9tition-dans-odk",children:[]},{value:"Salesforce\xa0: effectuer une mise \xe0 jour",id:"salesforce--effectuer-une-mise-\xe0-jour",children:[]},{value:"Salesforce: D\xe9finir le type d&#39;enregistrement en utilisant &#39;relationship(...)&#39;",id:"salesforce-d\xe9finir-le-type-denregistrement-en-utilisant-relationship",children:[]},{value:"Salesforce: D\xe9finir le type d&#39;enregistrement en utilisant record Type ID",id:"salesforce-d\xe9finir-le-type-denregistrement-en-utilisant-record-type-id",children:[]},{value:"Telerivet\xa0: Envoyer des SMS en fonction de l&#39;alerte du flux de travail de Salesforce",id:"telerivet--envoyer-des-sms-en-fonction-de-lalerte-du-flux-de-travail-de-salesforce",children:[]},{value:"HTTP\xa0: r\xe9cup\xe8re mais n&#39;\xe9choue pas\xa0!",id:"http--r\xe9cup\xe8re-mais-n\xe9choue-pas-",children:[]},{value:"Exemple de job API pour les \xe9v\xe9nements DHIS2\xa0:",id:"exemple-de-job-api-pour-les-\xe9v\xe9nements-dhis2-",children:[]},{value:"Exemple de job API d&#39;ensembles de valeurs de donn\xe9es DHIS2\xa0:",id:"exemple-de-job-api-densembles-de-valeurs-de-donn\xe9es-dhis2-",children:[]},{value:"exemple d&#39;expression openMRS, cr\xe9e une personne puis un patient",id:"exemple-dexpression-openmrs-cr\xe9e-une-personne-puis-un-patient",children:[]},{value:"fusionner plusieurs valeurs dans un path enfant",id:"fusionner-plusieurs-valeurs-dans-un-path-enfant",children:[]},{value:"arrayToString",id:"arraytostring",children:[]},{value:"acc\xe9der \xe0 l&#39;URL d&#39;une image \xe0 partir d&#39;une soumission ODK",id:"acc\xe9der-\xe0-lurl-dune-image-\xe0-partir-dune-soumission-odk",children:[]},{value:"alterState (alter state) pour s&#39;assurer que les donn\xe9es sont dans un tableau",id:"alterstate-alter-state-pour-sassurer-que-les-donn\xe9es-sont-dans-un-tableau",children:[]},{value:"Connectez-vous \xe0 un serveur avec un certificat SSL personnalis\xe9",id:"connectez-vous-\xe0-un-serveur-avec-un-certificat-ssl-personnalis\xe9",children:[]}]},{value:"Fonctions Anonymes",id:"fonctions-anonymes",children:[{value:"Remplacement personnalis\xe9",id:"remplacement-personnalis\xe9",children:[]},{value:"Personnaliser arrayToString",id:"personnaliser-arraytostring",children:[]},{value:"Concat\xe9nation personnalis\xe9e",id:"concat\xe9nation-personnalis\xe9e",children:[]},{value:"Concat\xe9nation des valeurs nulles",id:"concat\xe9nation-des-valeurs-nulles",children:[]},{value:"ID de la Ni\xe8me r\xe9f\xe9rence personnalis\xe9e",id:"id-de-la-ni\xe8me-r\xe9f\xe9rence-personnalis\xe9e",children:[]},{value:"Convertir une cha\xeene de date en date ISO standard pour Salesforce",id:"convertir-une-cha\xeene-de-date-en-date-iso-standard-pour-salesforce",children:[]},{value:"Utiliser les champs ID externes pour les relations lors d&#39;une charge en masse dans Salesforce",id:"utiliser-les-champs-id-externes-pour-les-relations-lors-dune-charge-en-masse-dans-salesforce",children:[]},{value:"Bulk upsert avec un ID externe dans salesforce",id:"bulk-upsert-avec-un-id-externe-dans-salesforce",children:[]}]}],u={toc:d};function p(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Un job d\xe9finit la s\xe9rie sp\xe9cifique de t\xe2ches ou d'actions de base de donn\xe9es \xe0 ex\xe9cuter lorsqu'un message d\xe9clencheur est re\xe7u (\xe0 partir d'un \xe9v\xe9nement) ou lorsqu'une heure pr\xe9programm\xe9e (et r\xe9currente) est atteinte."),(0,i.kt)("h2",{id:"les-propri\xe9t\xe9s-dun-job"},"Les propri\xe9t\xe9s d'un job"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Name")," (Nom)\xa0- un nom lisible par l'homme"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Project")," (Projet)\xa0-\xa0le projet auquel le job appartient"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Trigger"),"\xa0- le trigger utilis\xe9 pour contr\xf4ler le d\xe9marrage du job"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Adaptor")," (Adaptateur)\xa0-\xa0l'adaptateur utilis\xe9 pour apporter une fonctionnalit\xe9 sp\xe9cifique \xe0 l'outil pour ce job (p. ex., ",(0,i.kt)("inlineCode",{parentName:"li"},"language-dhis2")," ou ",(0,i.kt)("inlineCode",{parentName:"li"},"language-commcare"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Auto-process?")," (Traitement automatique ?)\xa0- un commutateur vrai/faux qui configure le job pour qu'il s'ex\xe9cute automatiquement sur les messages correspondants lorsqu'ils arrivent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Expression")," - le \xab\xa0script\xa0\xbb du job lui-m\xeame, une s\xe9quence d'op\xe9rations qui indiquent au job ce qu'il doit faire.")),(0,i.kt)("p",null,"Ici, concentrons nous sur l'expression."),(0,i.kt)("h3",{id:"adaptateurs"},"Adaptateurs"),(0,i.kt)("p",null,"We've got a whole section on creating new ",(0,i.kt)("a",{parentName:"p",href:"/documentation/build/adaptors"},"Adaptors"),", but the critical thing to be aware of when writing a job is that you've got to choose an ",(0,i.kt)("strong",{parentName:"p"},"adaptor"),", and an ",(0,i.kt)("strong",{parentName:"p"},"adaptor version"),"."),(0,i.kt)("p",null,"Toute la discussion ci-dessous des fonctions d'aide comme ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"findPatient")," n\xe9cessite une certaine compr\xe9hension des adaptateurs. Lorsque vous ex\xe9cutez un job, vous empruntez un ensemble de fonctionnalit\xe9s qui ont \xe9t\xe9 construites pour se connecter \xe0 un type particulier d'API ."),(0,i.kt)("p",null,"Par exemple, ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," signifie une chose dans ",(0,i.kt)("inlineCode",{parentName:"p"},"language-salesforce")," et tout autre chose dans ",(0,i.kt)("inlineCode",{parentName:"p"},"language-dhis2"),". Pour cette raison, avant de commencer \xe0 r\xe9diger un job, vous devez savoir avec quel ",(0,i.kt)("inlineCode",{parentName:"p"},"adaptateur")," vous travaillez."),(0,i.kt)("p",null,"Regardez les logs suivants\xa0:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 \u25f2 \u25f1  @openfn/core#v1.3.12 (Node.js v12.20.1) \u2502\n\u2502 \u25f3 \u25f0             @openfn/language-http#v3.1.5 \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n... the rest of the logs\n\nFinished.\n")),(0,i.kt)("p",null,"Notez comment les ",(0,i.kt)("em",{parentName:"p"},"4 premi\xe8res lignes")," du log de n'importe quelle ex\xe9cution d'OpenFn vous indiqueront quel adaptateur vous ex\xe9cutez. (Ainsi que la version du core et de NodeJs). Ceci est extr\xeamement important, particuli\xe8rement si vous essayez de d\xe9panner des jobs dans divers environnements (comme votre propre shell, OpenFn.org, OpenFn/microservice, etc.)."),(0,i.kt)("h4",{id:"versions-de-ladaptateur"},"Versions de l'adaptateur"),(0,i.kt)("p",null,"Notez que les adaptateurs peuvent changer au fil du temps. Ils sont open source, et nous encourageons le plus de contribution possible\xa0: les nouvelles versions sont mises \xe0 disposition sur OpenFn.org d\xe8s qu'elles passent nos \xe9valuations de s\xe9curit\xe9."),(0,i.kt)("p",null,"Faites bien attention \xe0 la ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," que vous utilisez pour r\xe9diger un job. Consid\xe9rez les logs suivants\xa0:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 \u25f2 \u25f1  @openfn/core#v1.3.12 (Node.js v12.20.1)  \u2502\n\u2502 \u25f3 \u25f0             @openfn/language-http#v2.4.15 \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n... the rest of the logs\n\nFinished.\n")),(0,i.kt)("p",null,"Notez qu'ici, OpenFn/core version ",(0,i.kt)("inlineCode",{parentName:"p"},"1.3.12")," fonctionne sur Node.js ",(0,i.kt)("inlineCode",{parentName:"p"},"12.20.1")," et en utilisant ",(0,i.kt)("inlineCode",{parentName:"p"},"@openfn/language-http#v2. .15")," qui pourrait avoir des fonctions d'aide tr\xe8s diff\xe9rentes de ",(0,i.kt)("inlineCode",{parentName:"p"},"@openfn/language-http#v3.1.5")),(0,i.kt)("p",null,"Les adaptateurs respectent ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"SEMVER")," afin que vous puissiez \xeatre raisonnablement assur\xe9 que la mise \xe0 jour de ",(0,i.kt)("inlineCode",{parentName:"p"},"x.1.z")," \xe0 ",(0,i.kt)("inlineCode",{parentName:"p"},"x.2.z")," n'entra\xeene pas l'\xe9chec du code job existant. Mais une mise \xe0 jour de ",(0,i.kt)("inlineCode",{parentName:"p"},"3.y.z")," \xe0 ",(0,i.kt)("inlineCode",{parentName:"p"},"4.y.z")," peut, dans les mises \xe0 jour ",(0,i.kt)("em",{parentName:"p"},"majeures")," SEMVER (celles qui changent le premier chiffre dans le num\xe9ro de version ",(0,i.kt)("inlineCode",{parentName:"p"},"x.y.z"),") avoir des \xab\xa0cassures\xa0\xbb ou des changements \xab\xa0non r\xe9trocompatibles\xa0\xbb."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"See ",(0,i.kt)("a",{parentName:"p",href:"/documentation/build/adaptors#install-on-platform-via-npm"},"the npm section")," on the adaptors docs page to learn how to install an adaptor from ",(0,i.kt)("inlineCode",{parentName:"p"},"npm")," while using ",(0,i.kt)("inlineCode",{parentName:"p"},"platform"),"."))),(0,i.kt)("h2",{id:"formulation-dexpressions-de-job"},"Formulation d'expressions de job"),(0,i.kt)("p",null,"In most cases, a job expression is a series of ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert")," actions that are run after a message arrives, using data from that message. It could look like this:"),(0,i.kt)("h3",{id:"une-expression-fondamentale"},"Une expression fondamentale"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"create(\n  'Patient__c',\n  fields(\n    field('Name', dataValue('form.surname')),\n    field('Other Names', dataValue('form.firstName')),\n    field('Age__c', dataValue('form.ageInYears')),\n    field('Is_Enrolled__c', true),\n    field('Enrollment_Status__c', 3)\n  )\n);\n")),(0,i.kt)("p",null,"That would create a new ",(0,i.kt)("inlineCode",{parentName:"p"},"Patient__c")," in some other system. The patient's ",(0,i.kt)("inlineCode",{parentName:"p"},"Name")," will be determined by the triggering message (the value inside ",(0,i.kt)("inlineCode",{parentName:"p"},"form.surname"),", specifically) and the patient's ",(0,i.kt)("inlineCode",{parentName:"p"},"Is_Enrolled__c")," will ",(0,i.kt)("em",{parentName:"p"},"always")," be ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),". See how we hard coded it?"),(0,i.kt)("p",null,"What you see above is OpenFn's own syntax, and you've got access to dozens of common \"helper functions\" like ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue(path)")," and destination specific functions like ",(0,i.kt)("inlineCode",{parentName:"p"},"create(object,attributes)"),". While most cases are covered out-of-the-box, jobs are ",(0,i.kt)("strong",{parentName:"p"},"evaluated as Javascript"),". This means that you can write your own custom, anonymous functions to do whatever your heart desires:"),(0,i.kt)("h3",{id:"datavalue"},"dataValue"),(0,i.kt)("p",null,'The most commonly used "helper function" is ',(0,i.kt)("inlineCode",{parentName:"p"},"dataValue(...)"),". This function takes a single argument\u2014the ",(0,i.kt)("em",{parentName:"p"},"path")," to some data that you're trying to access inside the message that has triggered a particular run. In the above example, you'll notice that ",(0,i.kt)("inlineCode",{parentName:"p"},"Is_Enrolled__c")," is ",(0,i.kt)("em",{parentName:"p"},"always")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", but ",(0,i.kt)("inlineCode",{parentName:"p"},"Name")," will change for each message that triggers the running of this job. It's set to ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue('form.surname')")," which means it will set ",(0,i.kt)("inlineCode",{parentName:"p"},"Name")," to whatever value is present at ",(0,i.kt)("inlineCode",{parentName:"p"},"state.data.form.surname")," for the triggering message. It might be Bob for one message, and Alice for another."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Note that for message-triggered jobs, ",(0,i.kt)("inlineCode",{parentName:"p"},"state")," will always have it's ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," key (i.e., ",(0,i.kt)("inlineCode",{parentName:"p"},"state.data"),") set to the body of the triggering message (aka HTTP request)."),(0,i.kt)("p",{parentName:"div"},"I.e., ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue('some.path') === state.data.some.path"),", as evaluated at the time that the operation (",(0,i.kt)("inlineCode",{parentName:"p"},"create")," in the above expression) is executed."))),(0,i.kt)("h3",{id:"une-expression-avec-javascript-personnalis\xe9"},"Une expression avec Javascript personnalis\xe9"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"create(\n  'Patient__c',\n  fields(\n    field('Name', state => {\n      console.log('Manipulate state to get your desired output.');\n      return Array.apply(null, state.data.form.names).join(', ');\n    }),\n    field('Age__c', 7)\n  )\n);\n")),(0,i.kt)("p",null,"Here, the patient's name will be a comma separated concatenation of all the values in the ",(0,i.kt)("inlineCode",{parentName:"p"},"patient_names")," array from our source message."),(0,i.kt)("h2",{id:"variables-globales-javascript-disponibles"},"Variables Globales Javascript disponibles"),(0,i.kt)("p",null,"For security reasons, users start with access to the following standard Javascript globals, and can request more by opening an issue on Github:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Array (tableau)"),(0,i.kt)("li",{parentName:"ul"},"console"),(0,i.kt)("li",{parentName:"ul"},"JSON"),(0,i.kt)("li",{parentName:"ul"},"Number (Nombre)"),(0,i.kt)("li",{parentName:"ul"},"Promise"),(0,i.kt)("li",{parentName:"ul"},"String (cha\xeene de caract\xe8re)")),(0,i.kt)("p",null,"*","N.B. The runtime environment on the server is Node v6.17.0."),(0,i.kt)("p",null,"Other than the expression tree, Jobs have certain attributes that must be set:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Filter")," (Filtre)\xa0- Le filtre de message qui d\xe9clenchera le job."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Adaptor")," (Adaptateur)\xa0- L'adaptateur pour le syst\xe8me de destination auquel vous vous connectez."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Credential")," - Le credential qui est utilis\xe9 pour acc\xe9der \xe0 ce syst\xe8me de destination."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Actif ?")," - Un bool\xe9en qui d\xe9termine si la t\xe2che s'ex\xe9cute en temps r\xe9el lorsque les messages correspondants arrivent.")),(0,i.kt)("h2",{id:"exemples-de-fonctions-sp\xe9cifiques-aux-adaptateurs"},"Exemples de fonctions sp\xe9cifiques aux adaptateurs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"N.B.: This is just a sample.")," There are lots more available in the language-packs."),(0,i.kt)("h3",{id:"langage-commun"},"langage-commun"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field('destination_field_name__c', 'value')")," Renvoie une cl\xe9 ou la paire de valeurs dans un tableau. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L248"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fields(list_of_fields)")," compresse les paires de valeurs cl\xe9s dans un objet. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L258"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dataValue('JSON_path')")," extrait une seule valeur des donn\xe9es sources. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L71"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"each(JSON_path, op\xe9ration(...))")," D\xe9termine un tableau de donn\xe9es en fonction d'un JSONPath ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L194"},"(source)"),". Voir beta.each lorsque vous utilisez plusieurs each() dans une expression."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'each(merge(dataPath("CHILD_ARRAY[*]"),fields(field("metaId", dataValue("*meta-instance-id*")),field("parentId", lastReferenceValue("id")))), create(...))')," fusionne les donn\xe9es dans un tableau puis cr\xe9e pour chaque \xe9l\xe9ment du tableau ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L272"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lastReferenceValue('id')")," obtient le sfID du dernier \xe9l\xe9ment cr\xe9\xe9 ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L96-L100"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"function(state){return state.references[state.references.length-N].id})")," r\xe9cup\xe8re le sfID du ni\xe8me \xe9l\xe9ment cr\xe9\xe9")),(0,i.kt)("h4",{id:"each"},"each()"),(0,i.kt)("p",null,"Read more about each here: ",(0,i.kt)("a",{parentName:"p",href:"/documentation/jobs/each"},"The each(...) operation")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"each(\n  dataPath('csvData[*]'),\n  upsertTEI(\n    'aX5hD4qUpRW', //piirs uid\n    {\n      trackedEntityType: 'bsDL4dvl2ni',\n      orgUnit: dataValue('OrgUnit'),\n      attributes: [\n        {\n          attribute: 'aX5hD4qUpRW',\n          value: dataValue('aX5hD4qUpRW'),\n        },\n        {\n          attribute: 'MxQPuS9G7hh',\n          value: dataValue('MxQPuS9G7hh'),\n        },\n      ],\n    },\n    { strict: false }\n  )\n);\n")),(0,i.kt)("h4",{id:"betaeach"},"beta.each"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"beta.each(JSON_path, operation(...))\n")),(0,i.kt)("p",null,"Scopes an array of data based on a JSONPath but then returns to the state it was given upon completion ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/language-common/blob/master/src/beta.js#L44"},"(source)"),". This is necessary if you string multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"each(...)")," functions together in-line in the same expression. (E.g., Given data which has multiple separate 'repeat groups' in a form which are rendered as arrays, you want to create new records for each item inside the first repeat group, then ",(0,i.kt)("em",{parentName:"p"},"RETURN TO THE TOP LEVEL")," of the data, and then create new records for each item in the second repeat group. Using ",(0,i.kt)("inlineCode",{parentName:"p"},"beta.each(...)")," lets you enter the first array, create your records, then return to the top level and be able to enter the second array."),(0,i.kt)("h3",{id:"salesforce"},"Salesforce"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'create("DEST_OBJECT_NAME__C", fields(...))')," Cr\xe9er un nouvel objet. Prend 2 param\xe8tres : un objet et des attributs. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-salesforce/blob/master/src/Adaptor.js#L42-L63"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'upsert("DEST_OBJECT_NAME__C", "DEST_OBJECT_EXTERNAL_ID__C", fields(...))')," Cr\xe9e ou met \xe0 jour un objet. Prend 3 param\xe8tres\xa0: un objet, un champ ID et des attributs . ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-salesforce/blob/master/src/Adaptor.js#L65-L80"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'relation ("DEST_RELATIONSHIP_NAME__r", "EXTERNAL_ID_ON_RELATED_OBJECT__C", "SOURCE_DATA_OR_VALUE")')," Ajoute une recherche ou une \xab\xa0insersion de d\xf4me\xa0\xbb \xe0 un enregistrement. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-salesforce/blob/master/src/sourceHelpers.js#L21-L40"},"(source)"))),(0,i.kt)("h3",{id:"dhis2"},"dhis2"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event(...)")," Cr\xe9e un \xe9v\xe9nement. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-dhis2/blob/master/src/Adaptor.js#L31-L60"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dataValueSet(...)")," Envoie des valeurs de donn\xe9es en utilisant la ressource dataValueSets ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-dhis2/blob/master/src/Adaptor.js#L62-L82"},"(source)"))),(0,i.kt)("h3",{id:"openmrs"},"OpenMRS"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"person(...)")," Prend une charge utile de donn\xe9es pour cr\xe9er une personne ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-openmrs/blob/master/src/Adaptor.js#L31-L60"},"(source)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"patient(...)")," Prend une charge utile de donn\xe9es pour cr\xe9er un patient ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-openmrs/blob/master/src/Adaptor.js#L62-L90"},"(source)"))),(0,i.kt)("h2",{id:"extraits-et-\xe9chantillons"},"Extraits et \xe9chantillons"),(0,i.kt)("p",null,"Below you can find some examples of block code for different functions and data handling contexts."),(0,i.kt)("h3",{id:"expression-de-job-pour-commcare-vers-sf"},"Expression de job (pour CommCare vers SF)"),(0,i.kt)("p",null,"The following job expression will take a matching receipt and use data from that receipt to upsert a ",(0,i.kt)("inlineCode",{parentName:"p"},"Patient__c")," record in Salesforce and create multiple new ",(0,i.kt)("inlineCode",{parentName:"p"},"Patient_Visit__c")," (child to Patient) records."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"upsert(\n  'Patient__c',\n  'Patient_Id__c',\n  fields(\n    field('Patient_Id__c', dataValue('form.patient_ID')),\n    relationship('Nurse__r', 'Nurse_ID_code__c', dataValue('form.staff_id')),\n    field('Phone_Number__c', dataValue('form.mobile_phone'))\n  )\n),\n  each(\n    join('$.data.form.visits[*]', '$.references[0].id', 'Id'),\n    create(\n      'Visit__c',\n      fields(\n        field('Patient__c', dataValue('Id')),\n        field('Date__c', dataValue('date')),\n        field('Reason__c', dataValue('why_did_they_see_doctor'))\n      )\n    )\n  );\n")),(0,i.kt)("h3",{id:"acc\xe8s-au-\xab-tableau-de-donn\xe9es-\xbb-dans-les-soumissions-open-data-kit"},"Acc\xe8s au \xab\xa0tableau de donn\xe9es\xa0\xbb dans les soumissions Open Data Kit"),(0,i.kt)("p",null,'Notice how we use "each" to get data from each item inside the "data array" in ODK.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"each(\n  '$.data.data[*]',\n  create(\n    'ODK_Submission__c',\n    fields(\n      field('Site_School_ID_Number__c', dataValue('school')),\n      field('Date_Completed__c', dataValue('date')),\n      field('comments__c', dataValue('comments')),\n      field('ODK_Key__c', dataValue('*meta-instance-id*'))\n    )\n  )\n);\n")),(0,i.kt)("h3",{id:"odk-vers-salesforce-cr\xe9er-un-enregistrement-parent-avec-de-nombreux-enfants-\xe0-partir-de-donn\xe9es-parentales"},"ODK vers Salesforce: cr\xe9er un enregistrement parent avec de nombreux enfants \xe0 partir de donn\xe9es parentales"),(0,i.kt)("p",null,"Here, the user brings ",(0,i.kt)("inlineCode",{parentName:"p"},"time_end")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"parentId")," onto the line items from the parent object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"each(\n  dataPath('data[*]'),\n  combine(\n    create(\n      'transaction__c',\n      fields(\n        field('Transaction_Date__c', dataValue('today')),\n        relationship(\n          'Person_Responsible__r',\n          'Staff_ID_Code__c',\n          dataValue('person_code')\n        ),\n        field('metainstanceid__c', dataValue('*meta-instance-id*'))\n      )\n    ),\n    each(\n      merge(\n        dataPath('line_items[*]'),\n        fields(\n          field('end', dataValue('time_end')),\n          field('parentId', lastReferenceValue('id'))\n        )\n      ),\n      create(\n        'line_item__c',\n        fields(\n          field('transaction__c', dataValue('parentId')),\n          field('Barcode__c', dataValue('product_barcode')),\n          field('ODK_Form_Completed__c', dataValue('end'))\n        )\n      )\n    )\n  )\n);\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"NB\xa0: il y a eu un bug connu avec la fonction ",(0,i.kt)("inlineCode",{parentName:"strong"},"combine")," qui a \xe9t\xe9 r\xe9solue. ",(0,i.kt)("inlineCode",{parentName:"strong"},"combine")," peut \xeatre utilis\xe9e pour combiner deux op\xe9rations en une et est commun\xe9ment utilis\xe9 pour ex\xe9cuter plusieurs ",(0,i.kt)("inlineCode",{parentName:"strong"},"create")," \xe0 l'int\xe9rieur d'un ",(0,i.kt)("inlineCode",{parentName:"strong"},"each(path, operation)"),". Le code source de combine peut \xeatre trouv\xe9 ici : ",(0,i.kt)("a",{parentName:"strong",href:"https://github.com/OpenFn/language-common/blob/master/src/index.js#L204-L222"},"language-common: combine")))),(0,i.kt)("h3",{id:"cr\xe9er-plusieurs-enregistrements-enfants-sans-groupe-de-r\xe9p\xe9tition-dans-odk"},"Cr\xe9er plusieurs enregistrements enfants SANS groupe de r\xe9p\xe9tition dans ODK"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"beta.each(\n  '$.data.data[*]',\n  upsert(\n    'Outlet__c',\n    'Outlet_Code__c',\n    fields(\n      field('Outlet_Code__c', dataValue('outlet_code')),\n      field('Location__Latitude__s', dataValue('gps:Latitude')),\n      field('Location__Longitude__s', dataValue('gps:Longitude'))\n    )\n  )\n),\n  beta.each(\n    '$.data.data[*]',\n    upsert(\n      'Outlet_Call__c',\n      'Invoice_Number__c',\n      fields(\n        field('Invoice_Number__c', dataValue('invoice_number')),\n        relationship('Outlet__r', 'Outlet_Code__c', dataValue('outlet_code')),\n        relationship('RecordType', 'name', 'No Call Card'),\n        field('Trip__c', 'a0FN0000008jPue'),\n        relationship(\n          'Sales_Person__r',\n          'Sales_Rep_Code__c',\n          dataValue('sales_rep_code')\n        ),\n        field('Date__c', dataValue('date')),\n        field('Comments__c', dataValue('comments'))\n      )\n    )\n  );\n")),(0,i.kt)("h3",{id:"salesforce--effectuer-une-mise-\xe0-jour"},"Salesforce\xa0: effectuer une mise \xe0 jour"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'update("Patient__c", fields(\n  field("Id", dataValue("pathToSalesforceId")),\n  field("Name__c", dataValue("patient.first_name")),\n  field(...)\n));\n')),(0,i.kt)("h3",{id:"salesforce-d\xe9finir-le-type-denregistrement-en-utilisant-relationship"},"Salesforce: D\xe9finir le type d'enregistrement en utilisant 'relationship(...)'"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"create(\n  'custom_obj__c',\n  fields(\n    relationship(\n      'RecordType',\n      'name',\n      dataValue('submission_type'),\n      field('name', dataValue('Name'))\n    )\n  )\n);\n")),(0,i.kt)("h3",{id:"salesforce-d\xe9finir-le-type-denregistrement-en-utilisant-record-type-id"},"Salesforce: D\xe9finir le type d'enregistrement en utilisant record Type ID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"each(\n  '$.data.data[*]',\n  create(\n    'fancy_object__c',\n    fields(\n      field('RecordTypeId', '012110000008s19'),\n      field('site_size', dataValue('size'))\n    )\n  )\n);\n")),(0,i.kt)("h3",{id:"telerivet--envoyer-des-sms-en-fonction-de-lalerte-du-flux-de-travail-de-salesforce"},"Telerivet\xa0: Envoyer des SMS en fonction de l'alerte du flux de travail de Salesforce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"send(\n  fields(\n    field(\n      'to_number',\n      dataValue(\n        'Envelope.Body.notifications.Notification.sObject.phone_number__c'\n      )\n    ),\n    field('message_type', 'sms'),\n    field('route_id', ''),\n    field('content', function (state) {\n      return 'Hey there. Your name is '.concat(\n        dataValue('Envelope.Body.notifications.Notification.sObject.name__c')(\n          state\n        ),\n        '.'\n      );\n    })\n  )\n);\n")),(0,i.kt)("h3",{id:"http--r\xe9cup\xe8re-mais-n\xe9choue-pas-"},"HTTP\xa0: r\xe9cup\xe8re mais n'\xe9choue pas\xa0!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// =============\n// We use "fetchWithErrors(...)" so that when the\n// SMS gateway returns an error the run does not "fail".\n// It "succeeds" and then delivers that error message\n// back to Salesforce with the "Update SMS Status" job.\n// =============\nfetchWithErrors({\n  getEndpoint: \'send_to_contact\',\n  query: function (state) {\n    return {\n      msisdn:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Phone_Number__c,\n      message:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Message__c,\n      api_key: \'some-secret-key\',\n    };\n  },\n  externalId: state.data.Envelope.Body.notifications.Notification.sObject.Id,\n  postUrl: \'https://www.openfn.org/inbox/another-secret-key\',\n});\n')),(0,i.kt)("h3",{id:"exemple-de-job-api-pour-les-\xe9v\xe9nements-dhis2-"},"Exemple de job API pour les \xe9v\xe9nements DHIS2\xa0:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"event(\n  fields(\n    field('program', 'eBAyeGv0exc'),\n    field('orgUnit', 'DiszpKrYNg8'),\n    field('eventDate', dataValue('properties.date')),\n    field('status', 'COMPLETED'),\n    field('storedBy', 'admin'),\n    field('coordinate', {\n      latitude: '59.8',\n      longitude: '10.9',\n    }),\n    field('dataValues', function (state) {\n      return [\n        {\n          dataElement: 'qrur9Dvnyt5',\n          value: dataValue('properties.prop_a')(state),\n        },\n        {\n          dataElement: 'oZg33kd9taw',\n          value: dataValue('properties.prop_b')(state),\n        },\n        {\n          dataElement: 'msodh3rEMJa',\n          value: dataValue('properties.prop_c')(state),\n        },\n      ];\n    })\n  )\n);\n")),(0,i.kt)("h3",{id:"exemple-de-job-api-densembles-de-valeurs-de-donn\xe9es-dhis2-"},"Exemple de job API d'ensembles de valeurs de donn\xe9es DHIS2\xa0:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"dataValueSet(\n  fields(\n    field('dataSet', 'pBOMPrpg1QX'),\n    field('orgUnit', 'DiszpKrYNg8'),\n    field('period', '201401'),\n    field('completeData', dataValue('date')),\n    field('dataValues', function (state) {\n      return [\n        { dataElement: 'f7n9E0hX8qk', value: dataValue('prop_a')(state) },\n        { dataElement: 'Ix2HsbDMLea', value: dataValue('prop_b')(state) },\n        { dataElement: 'eY5ehpbEsB7', value: dataValue('prop_c')(state) },\n      ];\n    })\n  )\n);\n")),(0,i.kt)("h3",{id:"exemple-dexpression-openmrs-cr\xe9e-une-personne-puis-un-patient"},"exemple d'expression openMRS, cr\xe9e une personne puis un patient"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"person(\n  fields(\n    field('gender', 'F'),\n    field('names', function (state) {\n      return [\n        {\n          givenName: dataValue('form.first_name')(state),\n          familyName: dataValue('form.last_name')(state),\n        },\n      ];\n    })\n  )\n),\n  patient(\n    fields(\n      field('person', lastReferenceValue('uuid')),\n      field('identifiers', function (state) {\n        return [\n          {\n            identifier: '1234',\n            identifierType: '8d79403a-c2cc-11de-8d13-0010c6dffd0f',\n            location: '8d6c993e-c2cc-11de-8d13-0010c6dffd0f',\n            preferred: true,\n          },\n        ];\n      })\n    )\n  );\n")),(0,i.kt)("h3",{id:"fusionner-plusieurs-valeurs-dans-un-path-enfant"},"fusionner plusieurs valeurs dans un path enfant"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'each(\n  merge(\n    dataPath("CHILD_ARRAY[*]"),\n    fields(\n      field("metaId", dataValue("*meta-instance-id*")),\n      field("parentId", lastReferenceValue("id"))\n    )\n  ),\n  create(...)\n)\n')),(0,i.kt)("h3",{id:"arraytostring"},"arrayToString"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"arrayToString(arr, separator_string);\n")),(0,i.kt)("h3",{id:"acc\xe9der-\xe0-lurl-dune-image-\xe0-partir-dune-soumission-odk"},"acc\xe9der \xe0 l'URL d'une image \xe0 partir d'une soumission ODK"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// In ODK the image URL is inside an image object...\nfield("Photo_URL_text__c", dataValue("image.url")),\n')),(0,i.kt)("h3",{id:"alterstate-alter-state-pour-sassurer-que-les-donn\xe9es-sont-dans-un-tableau"},"alterState (alter state) pour s'assurer que les donn\xe9es sont dans un tableau"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Here, we make sure CommCare gives us an array to use in each(merge(...), ...)\nalterState(state => {\n  const idCards = state.data.form.ID_cards_given_to_vendor;\n  if (!Array.isArray(idCards)) {\n    state.data.form.ID_cards_given_to_vendor = [idCards];\n  }\n  return state;\n});\n\n// Now state has been changed, and we carry on...\neach(\n  merge(\n    dataPath('form.ID_cards_given_to_vendor[*]'),\n    fields(\n      field('Vendor_Id', dataValue('form.ID_vendor')),\n      field('form_finished_time', dataValue('form.meta.timeEnd'))\n    )\n  ),\n  upsert(\n    'Small_Packet__c',\n    'sp_id__c',\n    fields(\n      field('sp_id__c', dataValue('ID_cards_given_to_vendor')),\n      relationship('Vendor__r', 'Badge_Code__c', dataValue('Vendor_Id')),\n      field(\n        'Small_Packet_Distribution_Date__c',\n        dataValue('form_finished_time')\n      )\n    )\n  )\n);\n")),(0,i.kt)("h3",{id:"connectez-vous-\xe0-un-serveur-avec-un-certificat-ssl-personnalis\xe9"},"Connectez-vous \xe0 un serveur avec un certificat SSL personnalis\xe9"),(0,i.kt)("p",null,"This snippet describes how you would connect to a secure server ignoring SSL certificate verification. Set ",(0,i.kt)("inlineCode",{parentName:"p"},"strictSSL: false")," in the options argument of the ",(0,i.kt)("inlineCode",{parentName:"p"},"post")," function in ",(0,i.kt)("inlineCode",{parentName:"p"},"language-http"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"post(\n  `${state.configuration.url}/${path}`,\n  {\n    headers: { 'content-type': 'application/json' },\n    body: {\n      email: 'Luka',\n      password: 'somethingSecret',\n    },\n    strictSSL: false,\n  },\n  callback\n);\n")),(0,i.kt)("h2",{id:"fonctions-anonymes"},"Fonctions Anonymes"),(0,i.kt)("p",null,"Different to ",(0,i.kt)("a",{parentName:"p",href:"#examples-of-adaptor-specific-functions"},"Named Functions"),", Anonymous functions are generic pieces of javascript which you can write to suit your needs. Here are some examples of these custom functions:"),(0,i.kt)("h3",{id:"remplacement-personnalis\xe9"},"Remplacement personnalis\xe9"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"field('destination__c', state => {\n  console.log(something);\n  return dataValue('path_to_data')(state).toString().replace('cats', 'dogs');\n});\n")),(0,i.kt)("p",null,'This will replace all "cats" with "dogs" in the string that lives at ',(0,i.kt)("inlineCode",{parentName:"p"},"path_to_data"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"REMARQUE :")," La fonction JavaScript ",(0,i.kt)("inlineCode",{parentName:"p"},"replace()")," ne remplace que la premi\xe8re instance de n'importe quel argument que vous sp\xe9cifiez. Si vous cherchez un moyen de remplacer toutes les occurences , nous vous sugg\xe9rons d'utiliser un regex comme dans l'",(0,i.kt)("a",{parentName:"p",href:"#custom-concatenation-of-null-values"},"exemple")," ci-dessous.")),(0,i.kt)("h3",{id:"personnaliser-arraytostring"},"Personnaliser arrayToString"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'field("target_specie_list__c", function(state) {\n  return Array.apply(\n    null, sourceValue("$.data.target_specie_list")(state)\n  ).join(\', \')\n}),\n')),(0,i.kt)("p",null,'It will take an array, and concatenate each item into a string with a ", " separator.'),(0,i.kt)("h3",{id:"concat\xe9nation-personnalis\xe9e"},"Concat\xe9nation personnalis\xe9e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"field('ODK_Key__c', function (state) {\n  return dataValue('metaId')(state).concat('(', dataValue('index')(state), ')');\n});\n")),(0,i.kt)("p",null,"This will concatenate two values."),(0,i.kt)("h3",{id:"concat\xe9nation-des-valeurs-nulles"},"Concat\xe9nation des valeurs nulles"),(0,i.kt)("p",null,"This will concatenate many values, even if one or more are null, writing them to a field called Main_Office_City_c."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'...\n  field("Main_Office_City__c", function(state) {\n    return arrayToString([\n      dataValue("Main_Office_City_a")(state) === null ? "" : dataValue("Main_Office_City_a")(state).toString().replace(/-/g, ""),\n      dataValue("Main_Office_City_b")(state) === null ? "" : dataValue("Main_Office_City_a")(state).toString().replace(/-/g, ""),\n      dataValue("Main_Office_City_b")(state) === null ? "" : dataValue("Main_Office_City_a")(state).toString().replace(/-/g, ""),\n      dataValue("Main_Office_City_b")(state) === null ? "" : dataValue("Main_Office_City_d")(state).toString().replace(/-/g, " "),\n    ].filter(Boolean), \',\')\n})\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Notez comment cette fonction personnalis\xe9e utilise la fonction ",(0,i.kt)("strong",{parentName:"p"},"regex")," ",(0,i.kt)("inlineCode",{parentName:"p"},"/-/g")," pour s'assurer que toutes les instances sont comptabilis\xe9es pour (g = recherche globale).")),(0,i.kt)("h3",{id:"id-de-la-ni\xe8me-r\xe9f\xe9rence-personnalis\xe9e"},"ID de la Ni\xe8me r\xe9f\xe9rence personnalis\xe9e"),(0,i.kt)("p",null,"If you ever want to retrieve the FIRST object you created, or the SECOND, or the Nth, for that matter, a function like this will do the trick."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"field('parent__c', function (state) {\n  return state.references[state.references.length - 1].id;\n});\n")),(0,i.kt)("p",null,'See how instead of taking the id of the "last" thing that was created in Salesforce, you\'re taking the id of the 1st thing, or 2nd thing if you replace "length-1" with "length-2".'),(0,i.kt)("h3",{id:"convertir-une-cha\xeene-de-date-en-date-iso-standard-pour-salesforce"},"Convertir une cha\xeene de date en date ISO standard pour Salesforce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"field('Payment_Date__c', function (state) {\n  return new Date(dataValue('payment_date')(state)).toISOString();\n});\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"REMARQUE"),": La sortie de cette fonction sera toujours format\xe9e en fonction du fuseau horaire GMT.")),(0,i.kt)("h3",{id:"utiliser-les-champs-id-externes-pour-les-relations-lors-dune-charge-en-masse-dans-salesforce"},"Utiliser les champs ID externes pour les relations lors d'une charge en masse dans Salesforce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"array.map(item => {\n  return {\n    Patient_Name__c: item.fullName,\n    'Clinic__r.Unique_Clinic_Identifier__c': item.clinicId,\n    'RecordType.Name': item.type,\n  };\n});\n")),(0,i.kt)("h3",{id:"bulk-upsert-avec-un-id-externe-dans-salesforce"},"Bulk upsert avec un ID externe dans salesforce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"bulk(\n  'Visit_new__c',\n  'upsert',\n  {\n    extIdField: 'commcare_case_id__c',\n    failOnError: true,\n    allowNoOp: true,\n  },\n  dataValue('patients')\n);\n")))}p.isMDXComponent=!0}}]);