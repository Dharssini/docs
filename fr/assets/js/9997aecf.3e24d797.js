"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[18047],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),g=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=g(e.components);return r.createElement(i.Provider,{value:t},e.children)},h="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=g(a),d=n,u=h["".concat(i,".").concat(d)]||h[d]||s[d]||o;return a?r.createElement(u,l(l({ref:t},p),{},{components:a})):r.createElement(u,l({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[h]="string"==typeof e?e:n,l[1]=c;for(var g=2;g<o;g++)l[g]=a[g];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},12378:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>c,toc:()=>g});var r=a(87462),n=(a(67294),a(3905));const o={title:"googlehealthcare changelog",id:"googlehealthcare-changelog",keywords:["adaptor","changelog","googlehealthcare"]},l="Changelog for the googlehealthcare adaptor",c={unversionedId:"packages/googlehealthcare-changelog",id:"packages/googlehealthcare-changelog",title:"googlehealthcare changelog",description:"1.0.0",source:"@site/adaptors/packages/googlehealthcare-changelog.md",sourceDirName:"packages",slug:"/packages/googlehealthcare-changelog",permalink:"/fr/adaptors/packages/googlehealthcare-changelog",draft:!1,tags:[],version:"current",frontMatter:{title:"googlehealthcare changelog",id:"googlehealthcare-changelog",keywords:["adaptor","changelog","googlehealthcare"]},sidebar:"adaptors",previous:{title:"Config for googlehealthcare",permalink:"/fr/adaptors/packages/googlehealthcare-configuration-schema"},next:{title:"googlehealthcare developer readme",permalink:"/fr/adaptors/packages/googlehealthcare-readme"}},i={},g=[{value:"1.0.0",id:"100",level:2},{value:"Major Changes",id:"major-changes",level:3},{value:"0.1.0",id:"010",level:2},{value:"Minor Changes",id:"minor-changes",level:3},{value:"Patch Changes",id:"patch-changes",level:3}],p={toc:g},h="wrapper";function s(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"changelog-for-the-googlehealthcare-adaptor"},"Changelog for the googlehealthcare adaptor"),(0,n.kt)("h1",{id:"openfnlanguage-googlehealthcare"},"@openfn/language-googlehealthcare"),(0,n.kt)("h2",{id:"100"},"1.0.0"),(0,n.kt)("h3",{id:"major-changes"},"Major Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"7df7e20: remove ",(0,n.kt)("inlineCode",{parentName:"p"},"projectId"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"dataSetId"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"cloudRegion"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"fhirStoreId")," out\nof configuration"),(0,n.kt)("p",{parentName:"li"},"The new implementation of ",(0,n.kt)("inlineCode",{parentName:"p"},"createFhirResource(fhirStore, resource, callback)"),"\nallows you to use one set of credentials to access different Google Healthcare\nCloud FHIR stores. ",(0,n.kt)("inlineCode",{parentName:"p"},"fhirStore")," is an object that contains the FHIR store\ninformation\n(",(0,n.kt)("inlineCode",{parentName:"p"},"{cloudRegion: string, projectId: string, datasetId: string, fhirStoreId: string}"),")."))),(0,n.kt)("h2",{id:"010"},"0.1.0"),(0,n.kt)("h3",{id:"minor-changes"},"Minor Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"861d774: add createFhirResource function")),(0,n.kt)("h3",{id:"patch-changes"},"Patch Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'aad9549: Ensure that standard OAuth2 credentials with snake-cased\n"access_token" keys can be used for OAuth2-reliant adaptors'),(0,n.kt)("li",{parentName:"ul"},"Updated dependencies ","[aad9549]",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"@openfn/",(0,n.kt)("a",{parentName:"li",href:"mailto:language-common@1.10.0"},"language-common@1.10.0"))))))}s.isMDXComponent=!0}}]);