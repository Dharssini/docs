"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[74198],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=l(a),d=r,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||o;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},90706:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const o={title:"Q3 2022] Update HH Name in CommCare",sidebar_label:"\u2728 Q3 2022] Update HH Name in CommCare",id:"Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",keywords:["library","job","expression","commcare","map","submitXls","Array"]},i=void 0,c={unversionedId:"library/jobs/auto/Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",id:"library/jobs/auto/Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",title:"Q3 2022] Update HH Name in CommCare",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Q3-2022-Update-HH-Name-in-CommCare-2021-09-27.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",permalink:"/fr/adaptors/library/jobs/auto/Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",draft:!1,tags:[],version:"current",frontMatter:{title:"Q3 2022] Update HH Name in CommCare",sidebar_label:"\u2728 Q3 2022] Update HH Name in CommCare",id:"Q3-2022-Update-HH-Name-in-CommCare-2021-09-27",keywords:["library","job","expression","commcare","map","submitXls","Array"]},sidebar:"adaptors",previous:{title:"commcare@1.5.2",permalink:"/fr/adaptors/packages/commcare-docs"},next:{title:"commcare changelog",permalink:"/fr/adaptors/packages/commcare-changelog"}},s={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],m={toc:l},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Name: Q3 2022] Update HH Name in CommCare"),(0,r.kt)("li",{parentName:"ul"},"Adaptor: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-commcare"},(0,r.kt)("inlineCode",{parentName:"a"},"@openfn/language-commcare"))),(0,r.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-commcare/releases/tag/v1.4.1"},(0,r.kt)("inlineCode",{parentName:"a"},"v1.4.1"))),(0,r.kt)("li",{parentName:"ul"},"Created over 1 year ago"),(0,r.kt)("li",{parentName:"ul"},"Updated 15 days ago"),(0,r.kt)("li",{parentName:"ul"},"Score: ",(0,r.kt)("b",null,"80")," (an ",(0,r.kt)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.kt)("h2",{id:"key-functions"},"Key Functions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"submitXls"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("h2",{id:"expression"},"Expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Update CommCare case\nfn(state => {\n  const { Notification } = state.data.Envelope.Body.notifications;\n\n  const Notifications = Array.isArray(Notification)\n    ? Notification\n    : [Notification];\n\n  const notifications = Notifications.map(notification => {\n    console.log(\n      `Mapping HH code to CommCare: `,\n      notification.sObject.Household_Code_Autonumber__c\n    );\n    return {\n      case_id: notification.sObject.Commcare_Code__c,\n      name: notification.sObject.Household_Code_Autonumber__c,\n    };\n  });\n\n  return { ...state, notifications };\n});\n\nsubmitXls(state => state.notifications, {\n  case_type: 'Household',\n  search_field: 'case_id',\n  search_column: 'case_id',\n  name_column: 'name',\n  create_new_cases: 'off',\n});\n\n")))}u.isMDXComponent=!0}}]);