(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[4966],{3905:function(e,n,a){"use strict";a.d(n,{Zo:function(){return d},kt:function(){return f}});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var _=t.createContext({}),s=function(e){var n=t.useContext(_),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},d=function(e){var n=s(e.components);return t.createElement(_.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,_=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(a),f=r,m=c["".concat(_,".").concat(f)]||c[f]||u[f]||i;return a?t.createElement(m,o(o({ref:n},d),{},{components:a})):t.createElement(m,o({ref:n},d))}));function f(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var _ in n)hasOwnProperty.call(n,_)&&(l[_]=n[_]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},48805:function(e,n,a){"use strict";a.r(n),a.d(n,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return _},default:function(){return d}});var t=a(22122),r=a(19756),i=(a(67294),a(3905)),o={title:"513_Enroll_Household_in_SF",sidebar_label:"\u2728 513_Enroll_Household_in_SF",id:"513_Enroll_Household_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","join","map","merge","relationship","upsert","upsertIf","Array"]},l={unversionedId:"jobs/auto/513_Enroll_Household_in_SF-2019-09-17",id:"jobs/auto/513_Enroll_Household_in_SF-2019-09-17",isDocsHomePage:!1,title:"513_Enroll_Household_in_SF",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/513_Enroll_Household_in_SF-2019-09-17.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/513_Enroll_Household_in_SF-2019-09-17",permalink:"/fr/library/jobs/auto/513_Enroll_Household_in_SF-2019-09-17",version:"current",sidebar_label:"\u2728 513_Enroll_Household_in_SF",sidebarPosition:513,frontMatter:{title:"513_Enroll_Household_in_SF",sidebar_label:"\u2728 513_Enroll_Household_in_SF",id:"513_Enroll_Household_in_SF-2019-09-17",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","join","map","merge","relationship","upsert","upsertIf","Array"]},sidebar:"library",previous:{title:"1. Create Payment in SF",permalink:"/fr/library/jobs/auto/1-Create-Payment-in-SF-2018-09-03"},next:{title:"Attendance",permalink:"/fr/library/jobs/auto/Attendance-2021-05-03"}},_=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],s={toc:_};function d(e){var n=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: 513_Enroll_Household_in_SF"),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v1.3.2"},(0,i.kt)("inlineCode",{parentName:"a"},"v1.3.2"))),(0,i.kt)("li",{parentName:"ul"},"Created almost 2 years ago"),(0,i.kt)("li",{parentName:"ul"},"Updated about 14 hours ago"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"86")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"alterState"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"each"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"merge"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsertIf"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Array")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'//MOH513 Enroll Household Form\n//Alters CommCare Person arrays so that they are formatted as arrays instead of just single values.\nalterState((state) => {\n  const person = state.data.form.Person;\n  if (!Array.isArray(person)) {\n    state.data.form.Person = [person];\n  }\n\n  titleCase = (str) => {\n    var splitStr = str.toLowerCase().split(" ");\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] =\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(" ");\n  };\n\n  const reasonMapping = {\n    pregnant: "The client is pregnant",\n    intentions_of_getting_pregnant: "Intentions of getting pregnant",\n    lack_of_access_to_fp_information: "Lack of access to FP information",\n    not_sexually_active: "The client is not sexually active",\n    other_barriers_culture_male_partners_parents_etc:\n      "Other barriers (culture, male partners, parents, etc)",\n    no_access_to_fp_services_hospitals:\n      "Lack of hospitals or places where FP services can be accessed",\n    not_willing_to_use_fp_due_to_negative_effects_myths_and_misconceptions:\n      "Myths and misconceptions",\n    barriers_at_service_delivery_points: "Barriers at service delivery points",\n  };\n\n  return { ...state, reasonMapping };\n});\n\n//Upserting Household, checks if Household exists via MOH Household Code\nupsert(\n  "Household__c",\n  "CommCare_Code__c",\n  fields(\n    field("MOH_household_code__c", dataValue("form.moh_code")),\n    field("CommCare_Code__c", dataValue("form.case.@case_id")),\n    field("Source__c", true),\n    field("Household_CHW__c", dataValue("form.CHW_ID")), //CONFIRM IDs MATCH PRODUCTION\n    //field("Household_CHW__c", "a031x000002S9lm"), //HARDCODED FOR SANDBOX TESTING --\x3e To replace with line above\n    relationship("Catchment__r", "Name", dataValue("form.catchment")), // check\n    field("Area__c", dataValue("form.area")),\n    field("Household_village__c", dataValue("form.village")),\n    field("Deaths_in_the_last_6_months__c", (state) => {\n      var death = dataValue(\n        "form.Household_Information.deaths_in_past_6_months"\n      )(state);\n      return death > 0 ? "Yes" : "No";\n    }),\n    field(\n      "Access_to_safe_water__c",\n      dataValue("form.Household_Information.Safe_Water")\n    ),\n    field(\n      "Treats_Drinking_Water__c",\n      dataValue("form.Household_Information.Treats_Drinking_Water")\n    ),\n    field(\n      "Tippy_Tap__c",\n      dataValue("form.Household_Information.Active_Handwashing_Station")\n    ),\n    field(\n      "Pit_Latrine__c",\n      dataValue("form.Household_Information.Functional_Latrine")\n    ),\n    field(\n      "Rubbish_Pit__c",\n      dataValue("form.Household_Information.Rubbish_Pit")\n    ),\n    field(\n      "Drying_Rack__c",\n      dataValue("form.Household_Information.Drying_Rack")\n    ),\n    field(\n      "Kitchen_Garden__c",\n      dataValue("form.Household_Information.Kitchen_Garden")\n    ),\n    field(\n      "Cookstove__c",\n      dataValue("form.Household_Information.Improved_Cooking_Method")\n    ),\n    field("Clothe__c", dataValue("form.Household_Information.Clothesline")),\n    field(\n      "WASH_Trained__c",\n      dataValue("form.Household_Information.WASH_Trained")\n    ),\n    field(\n      "Total_household_people__c",\n      dataValue("form.Total_Number_of_Members")\n    ),\n    field("Health_insurance__c", dataValue("form.health_insurace_cover")),\n    field(\n      "Health_insurance_active_status__c",\n      dataValue("form.healthinsurance_active")\n    ),\n    field("Health_insurance_type__c", (state) => {\n      var status = dataValue("form.health_insurance")(state);\n      return status && status === "other_please_specify_if_active"\n        ? "Other"\n        : status === "nhif"\n        ? "NHIF"\n        : status === "Linda_mama" || "linda_mama"\n        ? "Linda mama"\n        : status;\n    }),\n    field(\n      "Other_Health_Insurance__c",\n      dataValue("form.if_other_please_specify")\n    ),\n    field("Work_with_TBA__c", dataValue("form.tba")),\n    field("TBA_name__c", dataValue("form.which_tba"))\n  )\n);\n\n//Upsert Person via CommCare case ID for each person enrolled\nalterState((state) => {\n  if (dataValue("form.Person[0].Source")(state) == 1) {\n    return beta.each(\n      dataPath("form.Person[*]"),\n      upsert(\n        "Person__c",\n        "CommCare_ID__c",\n        fields(\n          //relationship("Household__r", "CommCare_Code__c", dataValue("case.index.parent.#text")),\n          field("CommCare_ID__c", dataValue("case.@case_id")),\n          field("CommCare_HH_Code__c", dataValue("case.index.parent.#text")),\n          relationship("RecordType", "Name", (state) => {\n            var rt = dataValue("Basic_Information.Record_Type")(state);\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            return status == "Unborn"\n              ? "Child"\n              : rt.toString().replace(/_/g, " "); //convert Unborn children to Child RT\n          }),\n          field("Name", (state) => {\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            var name1 = dataValue("Basic_Information.Name")(state);\n            var name2 =\n              name1 === undefined || name1 === ""\n                ? "Unborn Child"\n                : name1.replace(/\\w\\S*/g, function (txt) {\n                    return (\n                      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                    );\n                  });\n            return status !== "Unborn" ? name2 : "Unborn Child";\n          }),\n          field("Source__c", true),\n          relationship("Catchment__r", "Name", dataValue("catchment")),\n          field("Client_Status__c", "Active"),\n          field("Area__c", state.data.form.area),\n          field("Household_Village__c", state.data.form.village),\n          field("Relation_to_the_head_of_the_household__c", (state) => {\n            var relation = dataValue("Basic_Information.relation_to_hh")(state);\n            var toTitleCase =\n              relation !== undefined\n                ? relation.toString().replace(/_/g, " ")\n                : null;\n            return toTitleCase !== null\n              ? toTitleCase.charAt(0).toUpperCase() + toTitleCase.slice(1)\n              : null;\n          }),\n          field("Active_TT5_Mother__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? "Yes" : null;\n          }),\n          field("TT5_Mother_Registrant__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? "Yes" : null;\n          }),\n          field("Active_in_Thrive_Thru_5__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? "Yes" : "No";\n          }),\n          field("Active_in_HAWI__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            return status == "positive" ? "Yes" : "No";\n          }),\n          field("Enrollment_Date__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var date = dataValue("Date")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? date : null;\n          }),\n          field("HAWI_Enrollment_Date__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            var date = dataValue("Date")(state);\n            return status == "positive" ? date : null;\n          }),\n          field("Thrive_Thru_5_Registrant__c", (state) => {\n            var age = dataValue("Basic_Information.age")(state);\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return age < 5 || preg == "Yes" ? "Yes" : "No";\n          }),\n          field("HAWI_Registrant__c", (state) => {\n            var status = dataValue("Basic_Information.person_info.hiv_status")(\n              state\n            );\n            return status == "positive" ? "Yes" : "No";\n          }),\n          field("Date_of_Birth__c", dataValue("Basic_Information.DOB")),\n          field("Child_Status__c", (state) => {\n            var dob = dataValue("Basic_Information.DOB")(state);\n            var status = dataValue("Basic_Information.Child_Status")(state);\n            return dob !== undefined || status == "Born" ? "Born" : "Unborn"; //what about deceased?\n          }),\n          field("Gender__c", dataValue("Basic_Information.Gender")),\n          field(\n            "Birth_Certificate__c",\n            dataValue("Basic_Information.birth_certificate")\n          ),\n          field("Education_Level__c", (state) => {\n            var edu = dataValue("Basic_Information.Education_Level")(state);\n            return edu !== undefined ? edu.toString().replace(/_/g, " ") : null;\n          }),\n          field(\n            "Currently_enrolled_in_school__c",\n            dataValue("Basic_Information.enrolled_in_school")\n          ),\n          field(\n            "Telephone__c",\n            dataValue("Basic_Information.Contact_Info.contact_phone_number_short")\n          ),\n          field("Family_Planning__c", (state) => {\n            var plan = dataValue(\n              "Basic_Information.family_planning.Currently_on_family_planning"\n            )(state);\n            return plan ? "Yes" : plan;\n          }),\n          field("Family_Planning_Method__c", (state) => {\n            var method = dataValue(\n              "Basic_Information.family_planning.Family_Planning_Method"\n            )(state);\n            return method ? method.toString().replace(/_/g, " ") : method;\n          }),\n          field("Reasons_for_not_taking_FP_method__c", (state) => {\n            var reason = dataValue(\n              "Basic_Information.family_planning.No_FPmethod_reason"\n            )(state);\n            return reason ? state.reasonMapping[reason] : "";\n          }),\n          field(\n            "Use_mosquito_net__c",\n            dataValue("Basic_Information.person_info.sleep_under_net")\n          ),\n          field(\n            "Two_weeks_or_more_cough__c",\n            dataValue("Basic_Information.person_info.cough_for_2wks")\n          ),\n          field("Chronic_illness__c", (state) => {\n            var value = dataValue(\n              "Basic_Information.person_info.chronic_illness"\n            )(state);\n            var illness =\n              value !== undefined\n                ? value\n                    .toLowerCase()\n                    .split(" ")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(";")\n                : null;\n            return illness !== null\n              ? illness.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\n            "Knowledge_of_HIV_status__c",\n            dataValue("Basic_Information.person_info.known_hiv_status")\n          ),\n          field(\n            "HIV_Status__c",\n            dataValue("Basic_Information.person_info.hiv_status")\n          ),\n          field("Disability__c", (state) => {\n            var disability = dataValue(\n              "Basic_Information.person_info.disability"\n            )(state);\n            var toTitleCase =\n              disability !== undefined\n                ? disability\n                    .toLowerCase()\n                    .split(" ")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(";")\n                : null;\n            return toTitleCase;\n          }),\n          field("Other_disability__c", (state) => {\n            var disability = dataValue(\n              "Basic_Information.person_info.other_disability"\n            )(state);\n            var toTitleCase =\n              disability !== undefined\n                ? disability\n                    .toLowerCase()\n                    .split(" ")\n                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(";")\n                : null;\n            return toTitleCase;\n          }),\n          field(\n            "Unique_Patient_Code__c",\n            dataValue("HAWI.Unique_Patient_Code")\n          ),\n          field(\n            "Active_in_Support_Group__c",\n            dataValue("HAWI.Active_in_Support_Group")\n          ),\n          field("Currently_on_ART_s__c", dataValue("HAWI.ART")),\n          field("ART_Regimen__c", dataValue("form.Person.HAWI.ARVs")),\n          field("Preferred_Care_Facility__c", (state) => {\n            var facility = dataValue("HAWI.Preferred_Care_Facility")(state);\n            return facility !== undefined\n              ? facility.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\n            "MCH_booklet__c",\n            dataValue("TT5.Mother_Information.mch_booklet")\n          ),\n          field("LMP__c", dataValue("TT5.Child_Information.ANCs.LMP")),\n          field("ANC_1__c", dataValue("TT5.Child_Information.ANCs.ANC_1")),\n          field("ANC_2__c", dataValue("TT5.Child_Information.ANCs.ANC_2")),\n          field("ANC_3__c", dataValue("TT5.Child_Information.ANCs.ANC_3")),\n          field("ANC_4__c", dataValue("TT5.Child_Information.ANCs.ANC_4")),\n          field("ANC_5__c", dataValue("TT5.Child_Information.ANCs.ANC_5")),\n          field("Delivery_Facility__c", (state) => {\n            var facility = dataValue(\n              "TT5.Child_Information.Delivery_Information.Birth_Facility"\n            )(state);\n            return facility !== undefined\n              ? facility.toString().replace(/_/g, " ")\n              : null;\n          }),\n          field(\n            "Delivery_Facility_Other__c",\n            dataValue("TT5.Child_Information.Delivery_Information.Other")\n          ),\n          field("Place_of_Delivery__c", (state) => {\n            var facility = dataValue(\n              "TT5.Child_Information.Delivery_Information.Skilled_Unskilled"\n            )(state);\n            if (facility !== undefined) {\n              return facility == "Skilled" ? "Facility" : "Home";\n            }\n            return facility;\n          }),\n          field("BCG__c", dataValue("TT5.Child_Information.Immunizations.BCG")),\n          field(\n            "OPV_0__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_0")\n          ),\n          field(\n            "OPV_1__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_1")\n          ),\n          field(\n            "OPV_2__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_2")\n          ),\n          field(\n            "OPV_3__c",\n            dataValue("TT5.Child_Information.Immunizations.OPV_PCV_Penta_3")\n          ),\n          field(\n            "Measles_6__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_6")\n          ),\n          field(\n            "Measles_9__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_9")\n          ),\n          field(\n            "Measles_18__c",\n            dataValue("TT5.Child_Information.Immunizations.Measles_18")\n          ),\n          field(\n            "Vitamin_A__c",\n            dataValue("TT5.Child_Information.nutrition.vitamin_a")\n          ),\n          field(\n            "Food_groups_3_times_a_day__c",\n            dataValue("TT5.Child_Information.nutrition.food_groups")\n          ),\n          field(\n            "Initial_MUAC__c",\n            dataValue("TT5.Child_Information.nutrition.MUAC")\n          ),\n          field(\n            "Exclusive_Breastfeeding__c",\n            dataValue(\n              "TT5.Child_Information.Exclusive_Breastfeeding.Exclusive_Breastfeeding"\n            )\n          ),\n          field("Pregnant__c", (state) => {\n            var preg = dataValue("TT5.Mother_Information.Pregnant")(state);\n            return preg == "Yes" ? true : false;\n          }),\n          field(\n            "Gravida__c",\n            dataValue("TT5.Mother_Information.Pregnancy_Information.Gravida")\n          ),\n          field(\n            "Parity__c",\n            dataValue("TT5.Mother_Information.Pregnancy_Information.Parity")\n          ),\n          field(\n            "Nutrition_referral__c",\n            dataValue("TT5.Child_Information.nutrition.Referral")\n          ),\n          field(\n            "Nutrition_referral_date__c",\n            dataValue("TT5.Child_Information.nutrition.date_malnutrition")\n          ),\n          field(\n            "HIV_counseling_and_testing_referral_date__c",\n            dataValue("Basic_Information.person_info.when_hiv")\n          ),\n          field(\n            "Received_pregnancy_test__c",\n            dataValue(\n              "Basic_Information.family_planning.did_you_adminsiter_a_pregnancy_test"\n            )\n          ),\n          field(\n            "Pregnancy_test_result__c",\n            dataValue("Basic_Information.family_planning.pregnancy_test_result")\n          ),\n          field(\n            "Pregnancy_referral__c",\n            dataValue("Basic_Information.family_planning.refer_preg")\n          ),\n          field(\n            "Pregnancy_referral_date__c",\n            dataValue("Basic_Information.family_planning.referal_pregnancy")\n          ),\n          field("Family_Planning__c", (state) => {\n            var plan = dataValue(\n              "Basic_Information.family_planning.Currently_on_family_planning"\n            )(state);\n            return plan ? "Yes" : plan;\n          }),\n          field("Family_Planning_Method__c", (state) => {\n            var method = dataValue(\n              "Basic_Information.family_planning.Family_Planning_Method"\n            )(state);\n            return method ? method.toString().replace(/_/g, " ") : method;\n          }),\n          field("Reason_for_not_taking_a_pregnancy_test__c", (state) => {\n            var reason = dataValue(\n              "Basic_Information.family_planning.No_Preg_Test"\n            )(state);\n            return reason ? reason.toString().replace(/_/g, " ") : reason;\n          })\n        )\n      )\n    )(state);\n  }\n\n  console.log("No first person found, not upserting.");\n  return state;\n});\n\neach(\n  merge(\n    dataPath("$.form.household_deaths.deaths[*]"),\n    fields(\n      field("caseId", dataValue("form.case.@case_id")),\n      field("catchment", dataValue("form.catchment")),\n      field("Date", dataValue("form.Date"))\n    )\n  ),\n  upsertIf(\n    state.data.form.household_deaths &&\n      state.data.form.household_deaths.deaths_in_past_6_months > 0, //only insert deceased Person if deaths\n    "Person__c",\n    "CommCare_ID__c",\n    fields(\n      field("CommCare_ID__c", (state) => {\n        var age = dataValue("age_dead")(state);\n        return `${state.data.caseId}${age}`;\n      }),\n      field("CommCare_HH_Code__c", dataValue("caseId")),\n      relationship("RecordType", "Name", (state) => {\n        var age = dataValue("age_dead")(state);\n        var gender = dataValue("gender_dead")(state);\n        var rt = "";\n        if (age < 5) {\n          rt = "Child";\n        } else if (age < 18) {\n          rt = "Youth";\n        } else if (gender === "female") {\n          rt = "Female Adult";\n        } else {\n          rt = "Male Adult";\n        }\n        return rt;\n      }),\n      field("Name", "Deceased Person"),\n      field("Source__c", true),\n      relationship("Catchment__r", "Name", dataValue("catchment")),\n      field("Client_Status__c", "Deceased"),\n      field("Dead_age__c", dataValue("age_dead")),\n      field("Cause_of_Death__c", (state) => {\n        var cause = dataValue("cause_of_death_dead")(state);\n        return cause !== undefined ? cause.toString().replace(/_/g, " ") : null;\n      }),\n      field("Verbal_autopsy__c", dataValue("verbal_autopsy")),\n      field("Client_Status__c", "Deceased"),\n      field("Active_in_Thrive_Thru_5__c", "No"),\n      field("Active_in_HAWI__c", "No"),\n      field("Active_TT5_Mother__c", "No"),\n      field("TT5_Mother_Registrant__c", "No"),\n      field("Date_of_Death__c", dataValue("Date")),\n      field("Inactive_Date__c", dataValue("Date"))\n    )\n  )\n);\n\n')))}d.isMDXComponent=!0}}]);