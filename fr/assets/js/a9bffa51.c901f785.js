"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[52943],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},20305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"fhir developer readme",id:"fhir-readme",keywords:["adaptor","readme","fhir"]},i="Developer README for the fhir adaptor",p={unversionedId:"packages/fhir-readme",id:"packages/fhir-readme",title:"fhir developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/fhir",source:"@site/adaptors/packages/fhir-readme.md",sourceDirName:"packages",slug:"/packages/fhir-readme",permalink:"/fr/adaptors/packages/fhir-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"fhir developer readme",id:"fhir-readme",keywords:["adaptor","readme","fhir"]},sidebar:"adaptors",previous:{title:"fhir changelog",permalink:"/fr/adaptors/packages/fhir-changelog"},next:{title:"Go.Data",permalink:"/fr/adaptors/godata"}},l={},s=[{value:"FHIR Documentation",id:"fhir-documentation",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Technical Documentation",id:"technical-documentation",level:2},{value:"Sample configuration",id:"sample-configuration",level:4},{value:"Creates a resource in a destination system using a POST request",id:"creates-a-resource-in-a-destination-system-using-a-post-request",level:4},{value:"Creates a transactionBundle for HAPI FHIR",id:"creates-a-transactionbundle-for-hapi-fhir",level:4},{value:"Development",id:"development",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"developer-readme-for-the-fhir-adaptor"},"Developer README for the fhir adaptor"),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/fhir"},"https://github.com/OpenFn/adaptors/tree/main/packages/fhir")),(0,a.kt)("h1",{id:"language-fhir"},"language-fhir"),(0,a.kt)("p",null,"An OpenFn ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"adaptor"))," for building integration jobs for use with the HAPI FHIR\nAPI."),(0,a.kt)("h2",{id:"fhir-documentation"},"FHIR Documentation"),(0,a.kt)("p",null,"The Restfull API can be seen here: ",(0,a.kt)("a",{parentName:"p",href:"https://www.hl7.org/fhir/http.html"},"https://www.hl7.org/fhir/http.html")),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"View the documentation at ",(0,a.kt)("a",{parentName:"li",href:"https://openfn.github.io/adaptor/"},"https://openfn.github.io/adaptor/")),(0,a.kt)("li",{parentName:"ul"},"To update the documentation site, run:\n",(0,a.kt)("inlineCode",{parentName:"li"},"./node_modules/.bin/jsdoc --readme ./README.md ./lib -d docs"))),(0,a.kt)("h2",{id:"technical-documentation"},"Technical Documentation"),(0,a.kt)("h4",{id:"sample-configuration"},"Sample configuration"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"See\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/fhir/credential-schema.json"},"credential schema "))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "resource": "resource_url",\n  "authType": "Basic",\n  "token": "supersecrettoken"\n}\n')),(0,a.kt)("h4",{id:"creates-a-resource-in-a-destination-system-using-a-post-request"},"Creates a resource in a destination system using a POST request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"create('/endpoint', { foo: 'bar' });\n")),(0,a.kt)("h4",{id:"creates-a-transactionbundle-for-hapi-fhir"},"Creates a transactionBundle for HAPI FHIR"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"createTransactionBundle({\n  entry: [transactionBundle],\n});\n")),(0,a.kt)("h2",{id:"development"},"Development"),(0,a.kt)("p",null,"Clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,a.kt)("p",null,"Run tests using ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,a.kt)("p",null,"Build the project using ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,a.kt)("p",null,"To just build the docs run ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}u.isMDXComponent=!0}}]);