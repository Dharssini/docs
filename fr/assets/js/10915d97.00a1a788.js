"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78314],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(f,p(p({ref:n},c),{},{components:t})):r.createElement(f,p({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:o,p[1]=i;for(var s=2;s<a;s++)p[s]=t[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},17384:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(87462),o=(t(67294),t(3905));const a={title:"nexmo developer readme",id:"nexmo-readme",keywords:["adaptor","readme","nexmo"]},p="Developer README for the nexmo adaptor",i={unversionedId:"packages/nexmo-readme",id:"packages/nexmo-readme",title:"nexmo developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/nexmo",source:"@site/adaptors/packages/nexmo-readme.md",sourceDirName:"packages",slug:"/packages/nexmo-readme",permalink:"/fr/adaptors/packages/nexmo-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"nexmo developer readme",id:"nexmo-readme",keywords:["adaptor","readme","nexmo"]},sidebar:"adaptors",previous:{title:"nexmo changelog",permalink:"/fr/adaptors/packages/nexmo-changelog"},next:{title:"nexmo Config",permalink:"/fr/adaptors/packages/nexmo-configuration-schema"}},l={},s=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"sendSMS",id:"sendsms",level:3},{value:"sample expression",id:"sample-expression",level:4},{value:"Development",id:"development",level:2}],c={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developer-readme-for-the-nexmo-adaptor"},"Developer README for the nexmo adaptor"),(0,o.kt)("p",null,"Source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/nexmo"},"https://github.com/OpenFn/adaptors/tree/main/packages/nexmo")),(0,o.kt)("h1",{id:"language-nexmo"},"Language Nexmo"),(0,o.kt)("p",null,"Language Pack for building expressions and operations to interact with the Nexmo\nAPI."),(0,o.kt)("h2",{id:"documentation"},"Documentation"),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"View all the required and optional properties for ",(0,o.kt)("inlineCode",{parentName:"p"},"state.configuration")," in the\nofficial\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/nexmo-configuration-schema/"},"configuration-schema"),"\ndefinition."),(0,o.kt)("h3",{id:"sendsms"},"sendSMS"),(0,o.kt)("h4",{id:"sample-expression"},"sample expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"sendSMS('OpenFn', '0123456789', 'HelloWorld!');\n")),(0,o.kt)("h2",{id:"development"},"Development"),(0,o.kt)("p",null,"Clone the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,o.kt)("p",null,"Run tests using ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,o.kt)("p",null,"Build the project using ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,o.kt)("p",null,"To just build the docs run ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}d.isMDXComponent=!0}}]);