"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[81475],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(r),f=o,d=c["".concat(i,".").concat(f)]||c[f]||y[f]||n;return r?a.createElement(d,l(l({ref:t},u),{},{components:r})):a.createElement(d,l({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=c;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var s=2;s<n;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5422:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>y,frontMatter:()=>n,metadata:()=>p,toc:()=>s});var a=r(87462),o=(r(67294),r(3905));const n={title:"02a/ Query DB for people to pay",sidebar_label:"02a/ Query DB for people to pay",id:"02a-Query-DB-for-people-to-pay-2019-12-11",keywords:["library","job","expression","mysql","alterState"]},l=void 0,p={unversionedId:"library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",id:"library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",title:"02a/ Query DB for people to pay",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",permalink:"/fr/adaptors/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11",draft:!1,tags:[],version:"current",frontMatter:{title:"02a/ Query DB for people to pay",sidebar_label:"02a/ Query DB for people to pay",id:"02a-Query-DB-for-people-to-pay-2019-12-11",keywords:["library","job","expression","mysql","alterState"]},sidebar:"adaptors",previous:{title:"04a/Query for job changes",permalink:"/fr/adaptors/library/jobs/auto/04a-Query-for-job-changes-2019-12-12"},next:{title:"mysql changelog",permalink:"/fr/adaptors/packages/mysql-changelog"}},i={},s=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],u={toc:s};function y(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: 02a/ Query DB for people to pay"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,o.kt)("inlineCode",{parentName:"a"},"@openfn/language-mysql"))),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-mysql"},(0,o.kt)("inlineCode",{parentName:"a"},"latest"))),(0,o.kt)("li",{parentName:"ul"},"Created almost 3 years ago"),(0,o.kt)("li",{parentName:"ul"},"Updated over 2 years ago"),(0,o.kt)("li",{parentName:"ul"},"Score: ",(0,o.kt)("b",null,"0")," (an ",(0,o.kt)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"alterState")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"\nsqlString(state => {\n  // stored procedure will return a list of names, phone numbers (MSISDN), and salary info for employees that should be paid today\n  return 'CALL get_employees_to_pay();';\n});\n\n//alterState(state => {\n  // Note: we pluck out on the 'RowDataResponses' from the SQL server.\n//  state.data.records = state.response.body[0];\n//  return state;\n//});\n")))}y.isMDXComponent=!0}}]);