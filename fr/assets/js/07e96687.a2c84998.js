"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[40280],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={title:"medicmobile developer readme",id:"medicmobile-readme",keywords:["adaptor","readme","medicmobile"]},i="Developer README for the medicmobile adaptor",p={unversionedId:"packages/medicmobile-readme",id:"packages/medicmobile-readme",title:"medicmobile developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/medicmobile",source:"@site/adaptors/packages/medicmobile-readme.md",sourceDirName:"packages",slug:"/packages/medicmobile-readme",permalink:"/fr/adaptors/packages/medicmobile-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"medicmobile developer readme",id:"medicmobile-readme",keywords:["adaptor","readme","medicmobile"]},sidebar:"adaptors",previous:{title:"medicmobile changelog",permalink:"/fr/adaptors/packages/medicmobile-changelog"},next:{title:"mogli@0.3.1",permalink:"/fr/adaptors/packages/mogli-docs"}},l={},s=[{value:"Documentation",id:"documentation",level:2},{value:"sample configuration",id:"sample-configuration",level:4},{value:"sample fetchSubmissions expression",id:"sample-fetchsubmissions-expression",level:4},{value:"sample changesApi and pickFormData usage",id:"sample-changesapi-and-pickformdata-usage",level:4},{value:"Development",id:"development",level:2}],c={toc:s},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"developer-readme-for-the-medicmobile-adaptor"},"Developer README for the medicmobile adaptor"),(0,r.kt)("p",null,"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/medicmobile"},"https://github.com/OpenFn/adaptors/tree/main/packages/medicmobile")),(0,r.kt)("h1",{id:"language-medic-mobile"},"Language Medic Mobile"),(0,r.kt)("p",null,"Language Pack for building expressions and operations to make calls to the Medic\nMobile API.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"For an overview of Medic's database, check out\n",(0,r.kt)("a",{parentName:"strong",href:"https://github.com/medic/medic-docs/blob/master/development/db-schema.md"},"Medic's DB Schema v2")),(0,r.kt)("br",{parentName:"p"}),"\n","The exported functions in this language package can be executed by\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/core"},"OpenFn/core"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"../core/lib/cli.js execute -l ./lib/Adaptor -s ./tmp/state.json -e ./tmp/expression.js\n")),(0,r.kt)("p",null,"For quick-start help, clone\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/openfn-devtools"},"OpenFn/openfn-devtools")," and follow\nthe README.md"),(0,r.kt)("h2",{id:"documentation"},"Documentation"),(0,r.kt)("h4",{id:"sample-configuration"},"sample configuration"),(0,r.kt)("p",null,"We connect to Medic's CouchDB api."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "server": "https://standard.app.medicmobile.org",\n  "db": "medic",\n  "username": "something",\n  "password": "secret"\n}\n')),(0,r.kt)("h4",{id:"sample-fetchsubmissions-expression"},"sample fetchSubmissions expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fetchSubmissions(\n  'pregnancy', // formId\n  { 'last-event-id': 334 }, // params, last-event-id will be replaced by cursor\n  'http://localhost:4000/inbox/abc-123-xyz' // postUrl\n);\n")),(0,r.kt)("h4",{id:"sample-changesapi-and-pickformdata-usage"},"sample changesApi and pickFormData usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// get all the changes...\nchangesApi({\n  include_docs: true,\n  // This only gets used the first time the job is run.\n  // Subsequent runs take the lastSeq value as their cursor.\n  // \"last-event-id\": 789,\n});\n\n// Picks out the field data for a given formId.\npickFormData('pregnancy');\n")),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("p",null,"Clone the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,r.kt)("p",null,"Run tests using ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,r.kt)("p",null,"Build the project using ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,r.kt)("p",null,"To just build the docs run ",(0,r.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}d.isMDXComponent=!0}}]);