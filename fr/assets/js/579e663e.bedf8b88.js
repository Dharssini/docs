(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[3369],{3905:function(e,t,o){"use strict";o.d(t,{Zo:function(){return l},kt:function(){return h}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),u=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(o),h=r,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return o?n.createElement(f,i(i({ref:t},l),{},{components:o})):n.createElement(f,i({ref:t},l))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=o[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},20346:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c},default:function(){return l}});var n=o(22122),r=o(19756),a=(o(67294),o(3905)),i={title:"Generic Data Sources",sidebar_label:"Generic Sources"},s={unversionedId:"source-apps",id:"source-apps",isDocsHomePage:!1,title:"Generic Data Sources",description:"Standard webhook configuration",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/source-apps.md",sourceDirName:".",slug:"/source-apps",permalink:"/fr/documentation/source-apps",editUrl:"https://github.com/openfn/docs/edit/main/docs/source-apps.md",version:"current",sidebar_label:"Generic Sources",frontMatter:{title:"Generic Data Sources",sidebar_label:"Generic Sources"},sidebar:"docs",previous:{title:"The Inbox",permalink:"/fr/documentation/build/inbox"},next:{title:"Devtools",permalink:"/fr/documentation/devtools/home"}},c=[{value:"Standard webhook configuration",id:"standard-webhook-configuration",children:[]},{value:"How webhooks enable real time integration",id:"how-webhooks-enable-real-time-integration",children:[]},{value:"Providing a UI for your webhook?",id:"providing-a-ui-for-your-webhook",children:[]},{value:"When to send?",id:"when-to-send",children:[]},{value:"What to send?",id:"what-to-send",children:[]}],u={toc:c};function l(e){var t=e.components,i=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"standard-webhook-configuration"},"Standard webhook configuration"),(0,a.kt)("p",null,"This section describes how to enable push notifications from selected source applications or how to configure pull jobs to fetch data from those sources. If you don't see yours in the alphabetical list below feel free to add it with a pull request."),(0,a.kt)("p",null,"Every OpenFn project has a unique ",(0,a.kt)("strong",{parentName:"p"},"Inbox URL")," address that can be used as an endpoint for any JSON webhook. To set up a data source, configure that source to make a POST over HTTPS to your Inbox URL. See ",(0,a.kt)("a",{parentName:"p",href:"/fr/documentation/build/inbox"},"Your Inbox"),"."),(0,a.kt)("p",null,'To connect an application with standard JSON webhooks, copy your inbox URL from the "Inbox" page or your "Project Settings" screen and use it as the destination URL on your source application. Unless you have specifically configured it on the "Access & Security" page, no authentication is required.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"N.B.: This is by no means an exhaustive list."))," It is merely a list of common sources that external contributors have added. Remember that anything with a REST api or a JSON-based notification service can be used with OpenFn."),(0,a.kt)("h2",{id:"how-webhooks-enable-real-time-integration"},"How webhooks enable real time integration"),(0,a.kt)("p",null,"Webhooks services (sometimes called \u201cREST Services\u201d) are services that your users can configure on your application which make posts to other REST endpoints. The most common example we\u2019ll come across is a form, submission, or case forwarding service that will send a copy of a submission to an external API."),(0,a.kt)("h2",{id:"providing-a-ui-for-your-webhook"},"Providing a UI for your webhook?"),(0,a.kt)("p",null,"This is likely the most end-user interactive part of your API, and you\u2019ll probably want a feature in your user-interface that allows them to turn on and off these various services. See the below example from Kobo Toolbox (left) and CommCare (right)."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"kobo_to_commcare",src:o(54958).Z})),(0,a.kt)("h2",{id:"when-to-send"},"When to send?"),(0,a.kt)("p",null,"Consider whether to set up watches or triggers at the DB level (this seems like overkill but is provided by some databases relatively inexpensively) or at several key interfaces in your application. What types of updates/submissions/changes in your application might other applications need to be notified of in real time? A new submission is the most common, but updates to a \u201ccase\u201d, changes to UAM, or any other events could be valuable."),(0,a.kt)("h2",{id:"what-to-send"},"What to send?"),(0,a.kt)("p",null,"The whole resource, please. This anticipates our thoughts on sector-wide data standards slightly, but (within reason) it makes sense to expose everything your end-user will need to run the next step in their logic. Some interfaces allow the user to control which fields (and even which related resources) are sent in a given payload, but often the default is to send everything and let them pick and choose what they want to use."))}l.isMDXComponent=!0},54958:function(e,t,o){"use strict";t.Z=o.p+"assets/images/webhooks1-3e958a7135bf652f131e99266bd47c59.png"}}]);