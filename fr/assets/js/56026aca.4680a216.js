(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[3731],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(r),d=a,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},47191:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=r(22122),a=r(19756),i=(r(67294),r(3905)),o={title:"Create/update records if...",sidebar_label:"\ud83d\udcdc Create/update records if...",id:"create-if-proposal",keywords:["library","job","expression","salesforce","createIf","dataValue","field","fields","relationship","upsertIf"]},l={unversionedId:"jobs/auto/create-if-proposal",id:"jobs/auto/create-if-proposal",isDocsHomePage:!1,title:"Create/update records if...",description:"\ud83d\udcdc This job is an official example from OpenFn.",source:"@site/library/jobs/auto/create-if-proposal.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/create-if-proposal",permalink:"/fr/library/jobs/auto/create-if-proposal",version:"current",sidebar_label:"\ud83d\udcdc Create/update records if...",frontMatter:{title:"Create/update records if...",sidebar_label:"\ud83d\udcdc Create/update records if...",id:"create-if-proposal",keywords:["library","job","expression","salesforce","createIf","dataValue","field","fields","relationship","upsertIf"]},sidebar:"library",previous:{title:"Concat fields with nulls",permalink:"/fr/library/jobs/auto/concatenate-many-fields-with-nulls"},next:{title:"Merge data into child array then upsert",permalink:"/fr/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array"}},s=[{value:"Metadata",id:"metadata",children:[]},{value:"Key Functions",id:"key-functions",children:[]},{value:"Expression",id:"expression",children:[]}],c={toc:s};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\ud83d\udcdc ",(0,i.kt)("em",null,"This job is an official example from OpenFn.")),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: Create/update records if..."),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.1.0"},(0,i.kt)("inlineCode",{parentName:"a"},"v2.1.0"))),(0,i.kt)("li",{parentName:"ul"},"Created date unknown"),(0,i.kt)("li",{parentName:"ul"},"Updated date unknown"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"100")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createIf"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsertIf")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Using upsertIf and createIf we can conditionally create or update records if\n// some condition in the source data is met.\n\nupsertIf(\n  // a path which resolves to true/false\n  dataValue('form.legal.allowedToSync'), \n  'Patient__c',\n  'Patient_ID__c',\n  fields(\n    field('Name__c', dataValue('form.name')),\n    field('Patient_ID__c', dataValue('form.identification.govId'))\n  )\n);\n\ncreateIf(\n  // or a function which returns true/false\n  state => state.data.form.completedVisit === 'yes',\n  'Visit__c',\n  fields(\n    field('Date__c', dataValue('form.visit.visit_date')),\n    field('Type__c', 'checkup'),\n    relationship(\n      'Patient__r',\n      'Patient_ID__c',\n      dataValue('form.identification.govId')\n    )\n  )\n);\n\n")))}p.isMDXComponent=!0}}]);