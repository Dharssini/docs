(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[5395],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61322:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var o=n(22122),r=n(19756),i=(n(67294),n(3905)),a={title:"Planning for Deployment"},l={unversionedId:"deploy/options",id:"deploy/options",isDocsHomePage:!1,title:"Planning for Deployment",description:"Introduction",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/deploy/options.md",sourceDirName:"deploy",slug:"/deploy/options",permalink:"/fr/documentation/deploy/options",editUrl:"https://github.com/openfn/docs/edit/main/docs/deploy/options.md",version:"current",frontMatter:{title:"Planning for Deployment"},sidebar:"docs",previous:{title:"Adaptateurs",permalink:"/fr/documentation/build/adaptors"},next:{title:"Portabilit\xe9",permalink:"/fr/documentation/portability"}},p=[{value:"Introduction",id:"introduction",children:[]},{value:"Platform",id:"platform",children:[]},{value:"Microservice",id:"microservice",children:[]},{value:"DIY",id:"diy",children:[]}],s={toc:p};function c(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"OpenFn/platform (the iPaaS), OpenFn/microservice, OpenFn/diy and more than 50 open-source adaptors maintained by OpenFn can be used locally or on the cloud, and as stand-alone solutions or as modules in other applications. Together the interoperability suite provides organizations with the tools they need to connect with any application or database, adhere to any data standards, and automate any rote digital process. The tools themselves range from lightweight NodeJS apps to robust and highly-fault-tolerant enterprise applications running on the ErlangVM. They are typically used in their hosted forms on the cloud or deployed with Docker and/or Kubernetes."),(0,i.kt)("p",null,"See below for a chart of the available implementation pathways."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Implementation Pathways",src:n(14355).Z})),(0,i.kt)("p",null,"When you configure projects (think ",(0,i.kt)("inlineCode",{parentName:"p"},"jobs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"triggers"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"credentials"),") to run on OpenFn, you can deploy them in a number of different ways. In fact, a key feature of OpenFn's offerings are the versatility they provide to users. A user can build her project using OpenFn's enterprise platform, or using components of the open source integration toolkit. A user may then choose to deploy the project initially on the platform and later migrate to her own servers when doing so makes sense. The good news is that OpenFn project ",(0,i.kt)("a",{parentName:"p",href:"/fr/documentation/portability"},"portability")," will make these transitions easy. You will have full control and ownership of your integration project regardless of the deployment pathway you pursue."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Deployment Options",src:n(58433).Z})),(0,i.kt)("h2",{id:"platform"},"Platform"),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"platform"},"platform")),(0,i.kt)("p",null,"The OpenFn integration platform provides a flexible, scalable, and secure infrastructure to connect your existing systems, streamline data sharing, and automate workflows."),(0,i.kt)("p",null,"Platform is right for you if you are very serious about security, stability and scalability, or you don't have a strong/well-resourced IT team with devops experience in your organization."),(0,i.kt)("p",null,"The least expensive way to do deploy on platform is using our cloud servers, currently based in the US and Switzerland but availalbe in many more countries on-demand."),(0,i.kt)("p",null,"If you've got data-residency requirements to comply with, you might consider a local-deployment of ",(0,i.kt)("inlineCode",{parentName:"p"},"platform"),"\u2014this will still require a paid license but you can pick and choose exactly how and where OpenFn runs."),(0,i.kt)("h2",{id:"microservice"},"Microservice"),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"/documentation/microservice/home"},"microservice")),(0,i.kt)("p",null,"Microservice is right for you if you are already managing high-availability software and don't need a web-front end. Microservice gives you lots of flexbility, and it's completely FOSS\u2014meaning you use it for free and can even develop your own new features as needed."),(0,i.kt)("p",null,"While this community-supported variant of OpenFn may lack some of the more powerful features of ",(0,i.kt)("inlineCode",{parentName:"p"},"platform"),", it's 100% cross-compatible, meaning that you can even build and test entire projects on ",(0,i.kt)("inlineCode",{parentName:"p"},"platform")," and then export the ",(0,i.kt)("inlineCode",{parentName:"p"},"project.yaml")," file to run on your own servers using ",(0,i.kt)("inlineCode",{parentName:"p"},"microservice"),"."),(0,i.kt)("h2",{id:"diy"},"DIY"),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"diy"},"diy")),(0,i.kt)("p",null,"The OpenFn intgration toolkit is a collection of dozens of completely free and open source integration tools, applications, and modules. If the out-of-the-box functionality provided by ",(0,i.kt)("inlineCode",{parentName:"p"},"microservice")," doesn't meet your needs, look to the ",(0,i.kt)("inlineCode",{parentName:"p"},"engine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"core")," and the individual adaptors to build your own enterprise-grade integration and interoperability layer."))}c.isMDXComponent=!0},58433:function(e,t,n){"use strict";t.Z=n.p+"assets/images/deployment_options-f37306a186db8d0e57f46229aa017c11.png"},14355:function(e,t,n){"use strict";t.Z=n.p+"assets/images/implementation_pathways-3af58b71f293cf65ec3c10ad9d4ba45b.png"}}]);