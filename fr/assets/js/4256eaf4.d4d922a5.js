"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[86719],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>k});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var c=a.createContext({}),u=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},s=function(t){var e=u(t.components);return a.createElement(c.Provider,{value:e},t.children)},i="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,c=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),i=u(n),m=l,k=i["".concat(c,".").concat(m)]||i[m]||d[m]||r;return n?a.createElement(k,o(o({ref:e},s),{},{components:n})):a.createElement(k,o({ref:e},s))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,o=new Array(r);o[0]=m;var p={};for(var c in e)hasOwnProperty.call(e,c)&&(p[c]=e[c]);p.originalType=t,p[i]="string"==typeof t?t:l,o[1]=p;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46828:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const r={title:"mongodb@1.0.5",id:"mongodb-docs",keywords:["adaptor","mongodb"]},o=void 0,p={unversionedId:"packages/mongodb-docs",id:"packages/mongodb-docs",title:"mongodb@1.0.5",description:"Functions",source:"@site/adaptors/packages/mongodb-docs.md",sourceDirName:"packages",slug:"/packages/mongodb-docs",permalink:"/fr/adaptors/packages/mongodb-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"mongodb@1.0.5",id:"mongodb-docs",keywords:["adaptor","mongodb"]},sidebar:"adaptors",previous:{title:"mogli Config",permalink:"/fr/adaptors/packages/mogli-configuration-schema"},next:{title:"mongodb changelog",permalink:"/fr/adaptors/packages/mongodb-changelog"}},c={},u=[{value:"Functions",id:"functions",level:2},{value:"execute(operations) \u21d2 <code>Operation</code>",id:"executeoperations--operation",level:2},{value:"connect(state) \u21d2 <code>State</code>",id:"connectstate--state",level:2},{value:"disconnect(state) \u21d2 <code>State</code>",id:"disconnectstate--state",level:2},{value:"insertDocuments(params) \u21d2 <code>State</code>",id:"insertdocumentsparams--state",level:2},{value:"findDocuments(params) \u21d2 <code>State</code>",id:"finddocumentsparams--state",level:2},{value:"updateDocument(params) \u21d2 <code>State</code>",id:"updatedocumentparams--state",level:2}],s={toc:u},i="wrapper";function d(t){let{components:e,...n}=t;return(0,l.kt)(i,(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("dl",null,(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#execute"},"execute(operations)")," \u21d2 ",(0,l.kt)("code",null,"Operation")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Execute a sequence of operations. Wraps ",(0,l.kt)("code",null,"@openfn/language-common/execute"),", and prepends initial state for http.")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#connect"},"connect(state)")," \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Connects to a mongoDb instance")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#disconnect"},"disconnect(state)")," \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Removes connection from the state.")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#insertDocuments"},"insertDocuments(params)")," \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Inserts documents into a mongoDb collection")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#findDocuments"},"findDocuments(params)")," \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Find documents in a mongoDb collection")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#updateDocument"},"updateDocument(params)")," \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("dd",null,(0,l.kt)("p",null,"Updates document (optionally upserting) into a mongoDb collection"))),(0,l.kt)("a",{name:"execute"}),(0,l.kt)("h2",{id:"executeoperations--operation"},"execute(operations) \u21d2 ",(0,l.kt)("code",null,"Operation")),(0,l.kt)("p",null,"Execute a sequence of operations.\nWraps ",(0,l.kt)("inlineCode",{parentName:"p"},"@openfn/language-common/execute"),", and prepends initial state for http."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"operations"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Operations")),(0,l.kt)("td",{parentName:"tr",align:null},"Operations to be performed.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"execute(\n  insertDocuments(params),\n  findDocuments(params)\n)(state)\n")),(0,l.kt)("a",{name:"connect"}),(0,l.kt)("h2",{id:"connectstate--state"},"connect(state) \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("p",null,"Connects to a mongoDb instance"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"State")),(0,l.kt)("td",{parentName:"tr",align:null},"Runtime state.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"connect(state)\n")),(0,l.kt)("a",{name:"disconnect"}),(0,l.kt)("h2",{id:"disconnectstate--state"},"disconnect(state) \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("p",null,"Removes connection from the state."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"State"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"disconnect(state)\n")),(0,l.kt)("a",{name:"insertDocuments"}),(0,l.kt)("h2",{id:"insertdocumentsparams--state"},"insertDocuments(params) \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("p",null,"Inserts documents into a mongoDb collection"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration for mongo")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"insertDocuments({\n   database: 'str',\n   collection: 'kids',\n   documents: [1,2,3]\n  });\n")),(0,l.kt)("a",{name:"findDocuments"}),(0,l.kt)("h2",{id:"finddocumentsparams--state"},"findDocuments(params) \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("p",null,"Find documents in a mongoDb collection"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration for mongo")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"findDocuments({\n   database: 'str',\n   collection: 'cases',\n   query: {a:3}\n  });\n")),(0,l.kt)("a",{name:"updateDocument"}),(0,l.kt)("h2",{id:"updatedocumentparams--state"},"updateDocument(params) \u21d2 ",(0,l.kt)("code",null,"State")),(0,l.kt)("p",null,"Updates document (optionally upserting) into a mongoDb collection"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration for mongo")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"updateDocuments({\n   database: 'str',\n   collection: 'animals',\n   filter: { type: 'fuzzy' },\n   changes: { kind: 'soft' },\n   options: { upsert: true }\n  });\n")))}d.isMDXComponent=!0}}]);