"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[88652],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return r?a.createElement(g,p(p({ref:t},d),{},{components:r})):a.createElement(g,p({ref:t},d))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:n,p[1]=i;for(var l=2;l<o;l++)p[l]=r[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},44257:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={title:"rapidpro developer readme",id:"rapidpro-readme",keywords:["adaptor","readme","rapidpro"]},p="rapidpro Adaptor developer README.md",i={unversionedId:"packages/rapidpro-readme",id:"packages/rapidpro-readme",title:"rapidpro developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/rapidpro",source:"@site/adaptors/packages/rapidpro-readme.md",sourceDirName:"packages",slug:"/packages/rapidpro-readme",permalink:"/fr/adaptors/packages/rapidpro-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"rapidpro developer readme",id:"rapidpro-readme",keywords:["adaptor","readme","rapidpro"]},sidebar:"adaptors",previous:{title:"rapidpro changelog",permalink:"/fr/adaptors/packages/rapidpro-changelog"},next:{title:"resourcemap@0.3.1",permalink:"/fr/adaptors/packages/resourcemap-docs"}},s={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:3},{value:"sample job expression using operation",id:"sample-job-expression-using-operation",level:4},{value:"Key helper functions",id:"key-helper-functions",level:3},{value:"Development",id:"development",level:2}],d={toc:l},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rapidpro-adaptor-developer-readmemd"},"rapidpro Adaptor developer README.md"),(0,n.kt)("p",null,"Source: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/rapidpro"},"https://github.com/OpenFn/adaptors/tree/main/packages/rapidpro")),(0,n.kt)("h1",{id:"language-rapidpro"},"language-rapidpro"),(0,n.kt)("p",null,"An OpenFn ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"adaptor"))," for building integration jobs for use with the\n",(0,n.kt)("a",{parentName:"p",href:"https://rapidpro.io/api/v2/"},"RapidPro API"),"."),(0,n.kt)("h2",{id:"documentation"},"Documentation"),(0,n.kt)("p",null,"View the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/rapidpro-docs"},"docs site"),"\nfor full technical documentation."),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("h3",{id:"configuration"},"Configuration"),(0,n.kt)("p",null,"View all the required and optional properties for ",(0,n.kt)("inlineCode",{parentName:"p"},"state.configuration")," in the\nofficial\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/rapidpro-configuration-schema/"},"configuration-schema"),"\ndefinition."),(0,n.kt)("h4",{id:"sample-job-expression-using-operation"},"sample job expression using operation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'sendBroadcast({\n  "text": "Hello friends.",\n  "urns": [],\n  "contacts": [],\n  "groups", [],\n});\n')),(0,n.kt)("h3",{id:"key-helper-functions"},"Key helper functions"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"sendBroadcast(...) to send broadcast message to multiple contacts")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"sendBroadcast({\n  text: 'Hello world',\n  urns: ['twitter:sirmixalot'],\n  contacts: ['a052b00c-15b3-48e6-9771-edbaa277a353'],\n});\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"startFlow(...) to trigger an automation flow in RapidPro")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"startFlow({\n  flow: 'f5901b62-ba76-4003-9c62-72fdacc1b7b7',\n  restart_participants: false,\n  contacts: ['a052b00c-15b3-48e6-9771-edbaa277a353'],\n});\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"upsertContact(...) to update/insert a Contact (and check if exists using\nexternal identifiers)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"upsertContact({\n  name: 'Mamadou',\n  language: 'ENG',\n  urns: ['tel:+250788123123'],\n});\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"addContact(...) to insert a Contact")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"addContact({\n  name: 'Mamadou',\n  language: 'ENG',\n  urns: ['tel:+250788123123'],\n});\n")),(0,n.kt)("h2",{id:"development"},"Development"),(0,n.kt)("p",null,"Clone the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,n.kt)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,n.kt)("p",null,"Run tests using ",(0,n.kt)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,n.kt)("p",null,"Build the project using ",(0,n.kt)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,n.kt)("p",null,"To just build the docs run ",(0,n.kt)("inlineCode",{parentName:"p"},"pnpm build docs")))}u.isMDXComponent=!0}}]);