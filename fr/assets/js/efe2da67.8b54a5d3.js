"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[1009],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=a,m=c["".concat(u,".").concat(d)]||c[d]||f[d]||i;return r?t.createElement(m,o(o({ref:n},p),{},{components:r})):t.createElement(m,o({ref:n},p))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},64861:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var t=r(83117),a=r(80102),i=(r(67294),r(3905)),o=["components"],l={title:"Create Distribution & Referral in SF",sidebar_label:"Create Distribution & Referral in SF",id:"Create-Distribution-Referral-in-SF-2020-06-19",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},u=void 0,s={unversionedId:"jobs/auto/Create-Distribution-Referral-in-SF-2020-06-19",id:"jobs/auto/Create-Distribution-Referral-in-SF-2020-06-19",title:"Create Distribution & Referral in SF",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/Create-Distribution-Referral-in-SF-2020-06-19.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/Create-Distribution-Referral-in-SF-2020-06-19",permalink:"/fr/library/jobs/auto/Create-Distribution-Referral-in-SF-2020-06-19",tags:[],version:"current",frontMatter:{title:"Create Distribution & Referral in SF",sidebar_label:"Create Distribution & Referral in SF",id:"Create-Distribution-Referral-in-SF-2020-06-19",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},sidebar:"library",previous:{title:"Create contact (sf)",permalink:"/fr/library/jobs/auto/Create-contact-sf-2021-03-01"},next:{title:"\u2728 Create Intervention",permalink:"/fr/library/jobs/auto/Create-Intervention-2021-04-08"}},p=[{value:"Metadata",id:"metadata",children:[],level:2},{value:"Key Functions",id:"key-functions",children:[],level:2},{value:"Expression",id:"expression",children:[],level:2}],f={toc:p};function c(e){var n=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name: Create Distribution & Referral in SF"),(0,i.kt)("li",{parentName:"ul"},"Adaptor: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,i.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,i.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,i.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v1.3.2"},(0,i.kt)("inlineCode",{parentName:"a"},"v1.3.2"))),(0,i.kt)("li",{parentName:"ul"},"Created over 1 year ago"),(0,i.kt)("li",{parentName:"ul"},"Updated over 1 year ago"),(0,i.kt)("li",{parentName:"ul"},"Score: ",(0,i.kt)("b",null,"70")," (an ",(0,i.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,i.kt)("h2",{id:"key-functions"},"Key Functions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"upsert")),(0,i.kt)("h2",{id:"expression"},"Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"//Job to integrate CommCare 'Distribution & Referrals' form\nupsert(\n  'Family_Planning_community_Distribution__c',\n  'Commcare_Case_ID__c',\n  fields(\n    field('Commcare_Case_ID__c', dataValue('id')),\n    relationship('RecordType', 'Name', 'FP Community Distribution & Referrals'),\n    field('Distribute_Date__c', dataValue('form.date')),\n    field('Client_Name__c', dataValue('form.name')),\n    field('Client_Gender__c', dataValue('form.gender')),\n    field('Client_Age__c', dataValue('form.age')),\n    field('Client_currently_on_FP__c', dataValue('form.current_use')),\n    field('Referral_Date__c', dataValue('form.Referral_Date')),\n    field('Referral_Method__c', state => {\n      var method = dataValue('form.referral_method')(state);\n      var newMethod = method\n        ? method\n            .split(/_/g)\n            .map(\n              word =>\n                `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n            )\n            .join(' ')\n        : '';\n      return newMethod;\n    }),\n    field('Implant_Type__c', state => {\n      var type = dataValue('form.implant_type')(state);\n      var newType = '';\n      if (type) {\n        if (type === 'implanon') {\n          newType = '3-year Implanon';\n        } else {\n          newType = type === 'jadelle' ? '5-year Jadelle' : null;\n        }\n      }\n      return newType;\n    }),\n    field('Male_Condoms__c', dataValue('form.male_condoms_count')),\n    field('Female_Condoms__c', dataValue('form.female_condoms_count')),\n    field('POP__c', dataValue('form.POP_count')),\n    field('COC__c', dataValue('form.COC_count')),\n    field('Emergency_Pills__c', dataValue('form.emergency_pills_count')),\n    field(\n      'Pregnancy_test_positive__c',\n      dataValue('form.positive_pregnancy_tests')\n    ),\n    field('Pregnancy_referrals__c', dataValue('form.pregnancy_referrals')),\n    field(\n      'Contraception_referrals__c',\n      dataValue('form.family_planning_referrals')\n    )\n  )\n);\n\n")))}c.isMDXComponent=!0}}]);