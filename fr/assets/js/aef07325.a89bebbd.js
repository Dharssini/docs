(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[5810],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},87094:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),i=["components"],s={title:"Adaptateurs"},u={unversionedId:"build/adaptors",id:"build/adaptors",isDocsHomePage:!1,title:"Adaptateurs",description:"Un adaptateur est un module Javascript open-source qui fournit aux utilisateurs principaux d'OpenFn core un ensemble d'op\xe9rations qui aident \xe0 communiquer avec un syst\xe8me externe sp\xe9cifique. Dans le pass\xe9, nous les appelions souvent \xab\xa0paquets linguistiques\xa0\xbb. On utilise parfois les deux termes de mani\xe8re interchangeable, mais la meilleure fa\xe7on de communiquer sur les adaptateurs est la suivante\xa0:",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/build/adaptors.md",sourceDirName:"build",slug:"/build/adaptors",permalink:"/fr/documentation/build/adaptors",editUrl:"https://github.com/openfn/docs/edit/main/docs/build/adaptors.md",version:"current",frontMatter:{title:"Adaptateurs"},sidebar:"docs",previous:{title:"Devtools",permalink:"/fr/documentation/devtools/home"},next:{title:"Planification du d\xe9ploiement",permalink:"/fr/documentation/deploy/options"}},p=[{value:"O\xf9 les trouver\xa0?",id:"o\xf9-les-trouver-",children:[{value:"Sur Github",id:"sur-github",children:[]},{value:"Sur la plateforme",id:"sur-la-plateforme",children:[]},{value:"Sur npm",id:"sur-npm",children:[]}]},{value:"D\xe9veloppement d&#39;un adaptateur",id:"d\xe9veloppement-dun-adaptateur",children:[{value:"Extension d&#39;un adaptateur",id:"extension-dun-adaptateur",children:[]},{value:"D\xe9veloppement d&#39;un nouvel adaptateur",id:"d\xe9veloppement-dun-nouvel-adaptateur",children:[]},{value:"Op\xe9ration par d\xe9faut",id:"op\xe9ration-par-d\xe9faut",children:[]},{value:"Consid\xe9rations g\xe9n\xe9rales",id:"consid\xe9rations-g\xe9n\xe9rales",children:[]}]},{value:"Construire et Tester",id:"construire-et-tester",children:[{value:"Construire",id:"construire",children:[]},{value:"Tests",id:"tests",children:[]}]}],l={toc:p};function d(e){var t=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Un adaptateur est un module Javascript open-source qui fournit aux utilisateurs principaux d'OpenFn core un ensemble d'op\xe9rations qui aident \xe0 communiquer avec un syst\xe8me externe sp\xe9cifique. Dans le pass\xe9, nous les appelions souvent \xab\xa0paquets linguistiques\xa0\xbb. On utilise parfois les deux termes de mani\xe8re interchangeable, mais la meilleure fa\xe7on de communiquer sur les adaptateurs est la suivante\xa0:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\xab\xa0Quel ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("strong",{parentName:"em"},"adaptateur"))," ce job utilise-t-il\xa0?\xa0\xbb (\xab\xa0Ce job utilise ",(0,o.kt)("inlineCode",{parentName:"li"},"language-dhis2"),".\xa0\xbb)"),(0,o.kt)("li",{parentName:"ul"},"\xab\xa0L'",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("strong",{parentName:"em"},"adaptateur"))," DHIS2 est appel\xe9 ",(0,o.kt)("inlineCode",{parentName:"li"},"language-dhis2"),".\xa0\xbb"),(0,o.kt)("li",{parentName:"ul"},"\"Je n'ai pas l'",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("strong",{parentName:"em"},"adaptateur "))," appropri\xe9 pour ce job, laissez-moi l'installer en ex\xe9cutant ",(0,o.kt)("inlineCode",{parentName:"li"},"npm install @openfn/language-dhis2"),".")),(0,o.kt)("p",null,"En bref, la ",(0,o.kt)("em",{parentName:"p"},"plupart")," des ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"adptateurs"))," suivent la convention de d\xe9nomination ",(0,o.kt)("inlineCode",{parentName:"p"},"@openfn/language-xyz"),", mais pas tous\xa0!"),(0,o.kt)("h2",{id:"o\xf9-les-trouver-"},"O\xf9 les trouver\xa0?"),(0,o.kt)("h3",{id:"sur-github"},"Sur Github"),(0,o.kt)("p",null,"Les adaptateurs d\xe9velopp\xe9s peuvent \xeatre trouv\xe9s dans GitHub sous ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com/openfn"),", en commen\xe7ant par le pr\xe9fixe ",(0,o.kt)("inlineCode",{parentName:"p"},"language-xyz"),". Voici quelques exemples\xa0:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-http"},"language-http")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-postgresql"},"language-postgresql")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/OpenFn/language-primero"},"language-primero"))),(0,o.kt)("h3",{id:"sur-la-plateforme"},"Sur la plateforme"),(0,o.kt)("p",null,"Lors de la cr\xe9ation ou de la modification d'un job sur la plateforme, vous pouvez choisir l'adaptateur pour ex\xe9cuter le job. De cette fa\xe7on, vous \xab importez \xbb les op\xe9rations n\xe9cessaires. Ouvrez simplement la liste d\xe9roulante des adaptateurs, et cliquez sur l'un d'entre eux."),(0,o.kt)("img",{src:"/img/adaptor_choice_openfn.png",width:"300"}),(0,o.kt)("h3",{id:"sur-npm"},"Sur npm"),(0,o.kt)("p",null,"La plupart de nos adaptateurs sont \xe9galement disponibles sur ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/search?q=%40openfn"},"npmjs"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Liste des adaptateurs dans npm",src:n(94342).Z})),(0,o.kt)("h2",{id:"d\xe9veloppement-dun-adaptateur"},"D\xe9veloppement d'un adaptateur"),(0,o.kt)("p",null,"Vous pouvez d\xe9velopper un nouvel adaptateur en partant de z\xe9ro ou \xe9tendre un adaptateur existant."),(0,o.kt)("h3",{id:"extension-dun-adaptateur"},"Extension d'un adaptateur"),(0,o.kt)("p",null,"\xc9tendre un adaptateur \xe9quivaut \xe0 ajouter une ou plusieurs nouvelles op\xe9rations. Les nouvelles op\xe9rations peuvent \xeatre ajout\xe9es dans le fichier ",(0,o.kt)("inlineCode",{parentName:"p"},"src/Adaptor.js")," de l'adaptateur."),(0,o.kt)("img",{src:"/img/srcfolder.png",width:"400"}),(0,o.kt)("h3",{id:"d\xe9veloppement-dun-nouvel-adaptateur"},"D\xe9veloppement d'un nouvel adaptateur"),(0,o.kt)("p",null,"La d\xe9veloppement d'un nouvel adaptateur peut \xeatre r\xe9alis\xe9 en clonant le mod\xe8le disponible ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptor"},"ici")," via le bouton ",(0,o.kt)("inlineCode",{parentName:"p"},"USE THIS TEMPLATE")," sur Github."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Utilisez le bouton de ce mod\xe8le",src:n(87004).Z})),(0,o.kt)("h3",{id:"op\xe9ration-par-d\xe9faut"},"Op\xe9ration par d\xe9faut"),(0,o.kt)("p",null,"Ce mod\xe8le contient une op\xe9ration ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," par d\xe9faut qui peut \xeatre personnalis\xe9e en fonction des objectifs du nouvel adaptateur."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export function create(path, params, callback) {\n  return state => {\n    // expand references for the data argument with state\n    // do the work\n    // return state\n  };\n}\n")),(0,o.kt)("h3",{id:"consid\xe9rations-g\xe9n\xe9rales"},"Consid\xe9rations g\xe9n\xe9rales"),(0,o.kt)("h4",{id:"en-utilisant-openfnlanguage-commonhttp"},"En utilisant ",(0,o.kt)("inlineCode",{parentName:"h4"},"@openfn/language-common.http")),(0,o.kt)("p",null,"Dans de nombreux cas, il est utile de pouvoir ex\xe9cuter des requ\xeates HTTP r\xe9guli\xe8res \xe0 l'int\xe9rieur d'un adaptateur sp\xe9cialis\xe9 (p. ex. envoyer la sortie d'une recherche de cas Primero vers une inbox OpenFn). Consid\xe9rant ces types de situations, ",(0,o.kt)("inlineCode",{parentName:"p"},"langage-common")," impl\xe9mente et exporte un module ",(0,o.kt)("inlineCode",{parentName:"p"},"http"),". Pour utiliser ",(0,o.kt)("inlineCode",{parentName:"p"},"http")," dans n'importe quel job ex\xe9cut\xe9 avec un adaptateur sp\xe9cifique, envisagez de l'exporter directement \xe0 partir de ",(0,o.kt)("inlineCode",{parentName:"p"},"langue-common"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"...\nexport {\n  alterState,\n  ...\n  http,\n  ...\n  sourceValue,\n} from '@openfn/language-common';\n")),(0,o.kt)("h4",{id:"importer-language-common-depuis-npm"},"Importer language-common depuis npm"),(0,o.kt)("p",null,"Pour tirer parti de la derni\xe8re version disponible test\xe9e de notre adaptateur language-common, pensez \xe0 importer celle publi\xe9e dans ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," par ",(0,o.kt)("inlineCode",{parentName:"p"},"@openfn/language-commun"),"."),(0,o.kt)("p",null,"Par cons\xe9quent, votre ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," devrait ajouter une d\xe9pendance \xe0 cette version comme ceci (extrait tir\xe9 de ",(0,o.kt)("inlineCode",{parentName:"p"},"language-postgresql"),")\xa0:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@openfn/language-common": "1.2.6",\n    "pg": "^8.3.2",\n    "pg-format": "^1.0.4"\n  },\n  ...rest\n}\n')),(0,o.kt)("h2",{id:"construire-et-tester"},"Construire et Tester"),(0,o.kt)("h3",{id:"construire"},"Construire"),(0,o.kt)("p",null,"La construction d'un adaptateur se fait en ex\xe9cutant la commande ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," depuis le dossier racine."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Construire un adaptateur",src:n(63114).Z})),(0,o.kt)("h3",{id:"tests"},"Tests"),(0,o.kt)("p",null,"Les tests peuvent \xeatre \xe9crits avec nock sous le chemin ",(0,o.kt)("inlineCode",{parentName:"p"},"test/index.js"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"describe('createPatient', () => {\n  before(() => {\n    nock('https://fakepatient.server.com')\n      .post('/api/patients')\n      .reply(200, (uri, requestBody) => {\n        return { ...requestBody, fullName: 'Mamadou', gender: 'M' };\n      });\n  });\n\n  it('makes a post request to the patient endpoint', async () => {\n    const state = {\n      configuration: {\n        baseUrl: 'https://fakepatient.server.com',\n        username: 'hello',\n        password: 'there',\n      },\n      data: {\n        fullName: 'Mamadou',\n        gender: 'M',\n      },\n    };\n\n    const finalState = await execute(\n      create('api/patients', {\n        name: dataValue('fullName')(state),\n        gender: dataValue('gender')(state),\n      })\n    )(state);\n\n    expect(finalState.data).to.eql({\n      fullName: 'Mamadou',\n      gender: 'M',\n    });\n  });\n});\n")),(0,o.kt)("p",null,"Ex\xe9cutez vos tests avec ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run test"),". Les tests sont \xe9crits pour \xe9valuer les appels factices sur les fonctions d'aide disponibles."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"}," ~/devtools/adaptors/adaptor > npm run test\n\n> language-template@1.0.0 test /home/taylor/devtools/adaptors/adaptor\n> mocha --require @babel/register\n\n\n\n  execute\n    \u2713 executes each operation in sequence\n    \u2713 assigns references, data to the initialState\n\n  create\n    \u2713 makes a post request to the right endpoint\n    \u2713 throws an error for a 404\n    \u2713 handles and throws different kinds of errors\n\n  createPatient\n    \u2713 makes a post request to the patient endpoint\n\n\n  6 passing (16ms)\n\n ~/devtools/adaptors/adaptor >\n")),(0,o.kt)("p",null,"Lorsque vous r\xe9digez des tests, gardez \xe9galement \xe0 l'esprit les sc\xe9narios qui pourraient d\xe9clencher des erreurs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"describe('create', () => {\n  before(() => {\n    nock('https://fake.server.com')\n      .post('/api/noAccess')\n      .reply(404, (uri, requestBody) => {\n        return { detail: 'Not found.' };\n      });\n\n  it('throws an error for a 404', async () => {\n    const state = {\n      configuration: {\n        baseUrl: 'https://fake.server.com',\n        username: 'hello',\n        password: 'there',\n      },\n    };\n    const error = await execute(create('api/noAccess', { name: 'taylor' }))(\n      state\n    ).catch(error => {\n      return error;\n    });\n    expect(error.message).to.eql('Request failed with status code 404');\n  });\n\n});\n")))}d.isMDXComponent=!0},94342:function(e,t,n){"use strict";t.Z=n.p+"assets/images/adaptor_npm-2141b2789fbf572fb682e67a828e768f.png"},63114:function(e,t,n){"use strict";t.Z=n.p+"assets/images/make-b6567513046dce427e7928d522aabcf5.png"},87004:function(e,t,n){"use strict";t.Z=n.p+"assets/images/usethistemplate-aede212d4072939e4ed47bc6b0e95e1b.png"}}]);