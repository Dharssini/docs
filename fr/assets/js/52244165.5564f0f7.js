(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[1682],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},84588:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=t(22122),o=t(19756),i=(t(67294),t(3905)),a={title:"Versions de la proposition de portabilit\xe9"},s={unversionedId:"portability-versions",id:"portability-versions",isDocsHomePage:!1,title:"Versions de la proposition de portabilit\xe9",description:"OpenFn con\xe7oit actuellement un sch\xe9ma de configuration de projet portable qui peut \xeatre utilis\xe9 pour importer ou exporter des projets entre OpenFn / plateforme et OpenFn / engine.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/portability-versions.md",sourceDirName:".",slug:"/portability-versions",permalink:"/fr/documentation/portability-versions",editUrl:"https://github.com/openfn/docs/edit/main/docs/portability-versions.md",version:"current",frontMatter:{title:"Versions de la proposition de portabilit\xe9"}},c=[{value:"Proposition v3",id:"proposition-v3",children:[]},{value:"Proposition v1",id:"proposition-v1",children:[]}],p={toc:c};function u(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"OpenFn con\xe7oit actuellement un sch\xe9ma de configuration de projet portable qui peut \xeatre utilis\xe9 pour importer ou exporter des projets entre OpenFn / plateforme et OpenFn / engine."),(0,i.kt)("h2",{id:"proposition-v3"},"Proposition v3"),(0,i.kt)("p",null,"v3 introduit ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier"},"les sch\xe9mas URI")," ",(0,i.kt)("inlineCode",{parentName:"p"},"fichier://"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"https://"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"gcs://")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"t\xe2ches :\n  t\xe2che-1 :\n    expression : 'fichier://mes-t\xe2ches.js' # Les URIs peuvent \xeatre utilis\xe9es (par exemple https://raw.githubusercontent.com/org/repo/my-job. s)\n    adaptateur : '@openfn/language-common'\n    declencheur: declencheur-1\n    identifiant : mon-identifiant-secret \n  t\xe2che-recurente :\n    expression : >\n      alterState(state => {\n        console. og(\xab Salut ! \xbb)\n        \xe9tat de retour ;\n      })\n    adaptateur : '@openfn/language-common'\n    declencheur : chaque-minute\n flux-t\xe2che : \n    expression : >\n      alterState(state => {\n        state. data.number = state.data. num\xe9ro * 3\n        \xe9tat de retour ;\n      })\n    adaptateur : '@openfn/language-common'\n    identifiant : apr\xe8s-j1\n  attrape-t\xe2che :\n    expression : >\n      alterState(state => {\n        state. message = \xab l'a trait\xe9. \xbb\n        \xe9tat de retour ;\n      })\n    adaptateur : '@openfn/language-common'\n    declencheur: j1-echec\n\ndeclencheurs:\n  declencheur-1:\n    crit\xe8re : '{\"number\":2}'\n  chaque-minute:\n    cron: '* * * * *'\n  apr\xe8s-j1 :\n    succ\xe8s : t\xe2che-1\n  j1-echec:\n    echec: t\xe2che-1\n\nidentifiants :\n  mon-identifiant-secret : \n   nom d'utilisateur : '******' # Les cl\xe9s d'identification sont export\xe9es, mais les valeurs doivent \xeatre saisies manuellement\n    mot de passe : '******'\n  mon-autre-identifiant : 'fichier://gcp_credential.json' # Et les URI peuvent \xeatre sp\xe9cifi\xe9s directement pour le corps des informations d'identification\n")),(0,i.kt)("h2",{id:"proposition-v1"},"Proposition v1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const project = {\n  async : vrai,\n  d\xe9clencheurs : {\n    uniqueTriggerId: {\n      // propri\xe9t\xe9s de d\xe9clenchement\n    },\n    otherTrigger: {\n      // autres propri\xe9t\xe9s de d\xe9clencheur\n    },\n  },\n  identifiants : {\n    // pour le moment, les informations d'identification ne seront pas synchronis\xe9es //\n    // secret1: {\n    // nom d'utilisateur : \" mamadou \",\n    // passe : 'shhh',\n  },\n  staticData: {\n    // objets statiques accessibles depuis n'importe quelle t\xe2che\n  },\n  t\xe2ches : {\n    payHealthWorker : { trigger: 'otherTrigger' },\n    syncToSalesforce : {\n      expression : 'uri://github. /fr/jobs/expresion. s',\n      d\xe9clencheur : 'uniqueTriggerId',\n      identifiants : 'secret1',\n    },\n  },\n } ;\n")))}u.isMDXComponent=!0}}]);