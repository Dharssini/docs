"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[11483],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>s});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var i=n.createContext({}),u=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},d=function(t){var e=u(t.components);return n.createElement(i.Provider,{value:e},t.children)},k="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,i=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),k=u(a),m=l,s=k["".concat(i,".").concat(m)]||k[m]||c[m]||r;return a?n.createElement(s,p(p({ref:e},d),{},{components:a})):n.createElement(s,p({ref:e},d))}));function s(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,p=new Array(r);p[0]=m;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=t,o[k]="string"==typeof t?t:l,p[1]=o;for(var u=2;u<r;u++)p[u]=a[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},37681:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=a(87462),l=(a(67294),a(3905));const r={title:"openmrs@1.1.0",id:"openmrs-docs",keywords:["adaptor","openmrs","create","update","upsert"]},p=void 0,o={unversionedId:"packages/openmrs-docs",id:"packages/openmrs-docs",title:"openmrs@1.1.0",description:"Functions",source:"@site/adaptors/packages/openmrs-docs.md",sourceDirName:"packages",slug:"/packages/openmrs-docs",permalink:"/fr/adaptors/packages/openmrs-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"openmrs@1.1.0",id:"openmrs-docs",keywords:["adaptor","openmrs","create","update","upsert"]},sidebar:"adaptors",previous:{title:"openhim developer readme",permalink:"/fr/adaptors/packages/openhim-readme"},next:{title:"Config for openmrs",permalink:"/fr/adaptors/packages/openmrs-configuration-schema"}},i={},u=[{value:"Functions",id:"functions",level:2},{value:"create",id:"create",level:2},{value:"createEncounter",id:"createencounter",level:2},{value:"createPatient",id:"createpatient",level:2},{value:"get",id:"get",level:2},{value:"getEncounter",id:"getencounter",level:2},{value:"getEncounters",id:"getencounters",level:2},{value:"getPatient",id:"getpatient",level:2},{value:"post",id:"post",level:2},{value:"searchPatient",id:"searchpatient",level:2},{value:"searchPerson",id:"searchperson",level:2},{value:"update",id:"update",level:2},{value:"upsert",id:"upsert",level:2}],d={toc:u},k="wrapper";function c(t){let{components:e,...a}=t;return(0,l.kt)(k,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("dl",null,(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#create"},"create(resourceType, data, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#createEncounter"},"createEncounter(data, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#createPatient"},"createPatient(data, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#get"},"get(path, query, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#getEncounter"},"getEncounter(uuid, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#getEncounters"},"getEncounters(query, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#getPatient"},"getPatient(uuid, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#post"},"post(path, data, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#searchPatient"},"searchPatient(query, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#searchPerson"},"searchPerson(query, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#update"},"update(resourceType, path, data, [callback])")),(0,l.kt)("dt",null,(0,l.kt)("a",{href:"#upsert"},"upsert(resourceType, query, data, [callback])"))),(0,l.kt)("h2",{id:"create"},"create"),(0,l.kt)("p",null,"create(resourceType, data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nCreate a record"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Access"),": public  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resourceType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Type of resource to create. E.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"person"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"patient"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"encounter"),", ...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"OpenMRSData")),(0,l.kt)("td",{parentName:"tr",align:null},"Object which defines data that will be used to create a given instance of resource. To create a single instance of a resource, ",(0,l.kt)("inlineCode",{parentName:"td"},"data")," must be a javascript object, and to create multiple instances of a resources, ",(0,l.kt)("inlineCode",{parentName:"td"},"data")," must be an array of javascript objects.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(Create a person)"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'create("person", {\n  names: [\n    {\n      givenName: "Mohit",\n      familyName: "Kumar",\n    },\n  ],\n  gender: "M",\n  birthdate: "1997-09-02",\n  addresses: [\n    {\n      address1: "30, Vivekananda Layout, Munnekolal,Marathahalli",\n      cityVillage: "Bengaluru",\n      country: "India",\n      postalCode: "560037",\n    },\n  ],\n});\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"createencounter"},"createEncounter"),(0,l.kt)("p",null,"createEncounter(data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nCreates an encounter"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Data parameters of the encounter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(Create an encounter)"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"createEncounter({\n  encounterDatetime: '2023-05-25T06:08:25.000+0000',\n  patient: '1fdaa696-e759-4a7d-a066-f1ae557c151b',\n  encounterType: 'dd528487-82a5-4082-9c72-ed246bd49591',\n  location: 'ba685651-ed3b-4e63-9b35-78893060758a',\n  encounterProviders: [],\n  visit: {\n    patient: '1fdaa696-e759-4a7d-a066-f1ae557c151b',\n    visitType: '7b0f5697-27e3-40c4-8bae-f4049abfb4ed',\n    startDatetime: '2023-05-25T06:08:25.000+0000',\n    stopDatetime: '2023-05-25T06:09:25.000+0000',\n  },\n})\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"createpatient"},"createPatient"),(0,l.kt)("p",null,"createPatient(data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nCreates a new patient"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Object parameters of the patient")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"createPatient({\n  identifiers: [\n    {\n      identifier: '4023287',\n      identifierType: '05a29f94-c0ed-11e2-94be-8c13b969e334',\n      preferred: true,\n    },\n  ],\n  person: {\n    gender: 'M',\n    age: 42,\n    birthdate: '1970-01-01T00:00:00.000+0100',\n    birthdateEstimated: false,\n    names: [\n      {\n        givenName: 'Doe',\n        familyName: 'John',\n      },\n    ],\n  },\n})\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get"},"get"),(0,l.kt)("p",null,"get(path, query, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nMake a get request to any OpenMRS endpoint"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to resource")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"parameters for the request")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'get("patient", {\n  q: "Patient",\n  limit: 1,\n});\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"getencounter"},"getEncounter"),(0,l.kt)("p",null,"getEncounter(uuid, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nGets encounter matching a uuid"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uuid"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"A uuid for the encounter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'getEncounter("123")\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"getencounters"},"getEncounters"),(0,l.kt)("p",null,"getEncounters(query, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nGets encounters matching params"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Object for the patient")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'getEncounters({patient: "123", fromdate: "2023-05-18"})\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"getpatient"},"getPatient"),(0,l.kt)("p",null,"getPatient(uuid, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nGets patient matching a uuid"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uuid"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A uuid for the patient")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'getPatient("123")\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(Get a patient by uuid)"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"getPatient('681f8785-c9ca-4dc8-a091-7b869316ff93')\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"post"},"post"),(0,l.kt)("p",null,"post(path, data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nMake a post request to any OpenMRS endpoint"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to resource")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Object which defines data that will be used to create a given instance of resource")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'post(\n  "idgen/identifiersource/8549f706-7e85-4c1d-9424-217d50a2988b/identifier",\n  {}\n);\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"searchpatient"},"searchPatient"),(0,l.kt)("p",null,"searchPatient(query, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nFetch all non-retired patients that match any specified parameters"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Object with query for the patient")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"searchPatient({ q: Sarah })\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"searchperson"},"searchPerson"),(0,l.kt)("p",null,"searchPerson(query, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nFetch all non-retired persons that match any specified parameters"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"object")),(0,l.kt)("td",{parentName:"tr",align:null},"object with query for the person")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"searchPerson({ q: Sarah })\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"update"},"update"),(0,l.kt)("p",null,"update(resourceType, path, data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nUpdate data. A generic helper function to update a resource object of any type.\nUpdating an object requires to send ",(0,l.kt)("inlineCode",{parentName:"p"},"all required fields")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},"full body")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Access"),": public  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resourceType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The type of resource to be updated. E.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"person"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"patient"),", etc.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"id")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"path")," to the ",(0,l.kt)("inlineCode",{parentName:"td"},"object")," to be updated. E.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"e739808f-f166-42ae-aaf3-8b3e8fa13fda")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"e739808f-f166-42ae-aaf3-8b3e8fa13fda/{collection-name}/{object-id}"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"Data to update. It requires to send ",(0,l.kt)("inlineCode",{parentName:"td"},"all required fields")," or the ",(0,l.kt)("inlineCode",{parentName:"td"},"full body"),". If you want ",(0,l.kt)("inlineCode",{parentName:"td"},"partial updates"),", use ",(0,l.kt)("inlineCode",{parentName:"td"},"patch")," operation.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(a person)"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'update("person", \'3cad37ad-984d-4c65-a019-3eb120c9c373\',{"gender":"M","birthdate":"1997-01-13"})\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"upsert"},"upsert"),(0,l.kt)("p",null,"upsert(resourceType, query, data, ","[callback]",") \u21d2 ",(0,l.kt)("code",null,"Operation"),"\nUpsert a record. A generic helper function used to atomically either insert a row, or on the basis of the row already existing, UPDATE that existing row instead."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"RangeError")," - Throws range error")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Access"),": public  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resourceType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The type of a resource to ",(0,l.kt)("inlineCode",{parentName:"td"},"upsert"),". E.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"trackedEntityInstances"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"A query object that allows to uniquely identify the resource to update. If no matches found, then the resource will be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"The data to use for update or create depending on the result of the query.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional callback to handle the response")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(For an existing patient using upsert)"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"upsert('patient', { q: '10007JJ' }, { person: { age: 50 } });\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," ",(0,l.kt)("em",{parentName:"p"},"(For non existing patient creating a patient record using upsert )"),"  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'upsert(\n  "patient",\n  { q: "1000EHE" },\n  {\n    identifiers: [\n      {\n        identifier: "1000EHE",\n        identifierType: "05a29f94-c0ed-11e2-94be-8c13b969e334",\n        location: "44c3efb0-2583-4c80-a79e-1f756a03c0a1",\n        preferred: true,\n      },\n    ],\n    person: {\n      gender: "M",\n      age: 42,\n    },\n  }\n);\n')),(0,l.kt)("hr",null))}c.isMDXComponent=!0}}]);