(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[4556],{44912:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(22122),o=n(19756),i=(n(67294),n(3905)),l=n(22004),r={title:"Devtools"},s={unversionedId:"devtools/home",id:"devtools/home",isDocsHomePage:!1,title:"Devtools",description:"A set of tools for writing & testing expressions, managing OpenFn projects, and developing new adaptors.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/devtools/home.md",sourceDirName:"devtools",slug:"/devtools/home",permalink:"/fr/documentation/devtools/home",editUrl:"https://github.com/openfn/docs/edit/main/docs/devtools/home.md",version:"current",frontMatter:{title:"Devtools"},sidebar:"docs",previous:{title:"Generic Data Sources",permalink:"/fr/documentation/source-apps"},next:{title:"Adaptateurs",permalink:"/fr/documentation/build/adaptors"}},p=[{value:"Up and running",id:"up-and-running",children:[]},{value:"Usage",id:"usage",children:[{value:"Bash usage",id:"bash-usage",children:[]},{value:"The <code>--test</code> option",id:"the---test-option",children:[]}]},{value:"Configure an OpenFn project",id:"configure-an-openfn-project",children:[]},{value:"Pre-Requisites",id:"pre-requisites",children:[]},{value:"Scripts",id:"scripts",children:[{value:"bootstrap",id:"bootstrap",children:[]},{value:"generate-project.js",id:"generate-projectjs",children:[]},{value:"generate-doclets",id:"generate-doclets",children:[]},{value:"analyse-doclets",id:"analyse-doclets",children:[]},{value:"bundle",id:"bundle",children:[]},{value:"bundle-all",id:"bundle-all",children:[]},{value:"upload-release",id:"upload-release",children:[]}]},{value:"Releasing a new adaptor version for production use",id:"releasing-a-new-adaptor-version-for-production-use",children:[]},{value:"Using a new adaptor in an OpenFn/platform instance",id:"using-a-new-adaptor-in-an-openfnplatform-instance",children:[]}],d={toc:p};function u(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A set of tools for writing & testing expressions, managing OpenFn projects, and developing new adaptors."),(0,i.kt)(l.Z,{url:"https://www.youtube.com/watch?v=fkGI5YLp18s",mdxType:"ReactPlayer"}),(0,i.kt)("h2",{id:"up-and-running"},"Up and running"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Make sure you've got ",(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/downloads"},"git")," (maybe GitBash for Windows?)"),(0,i.kt)("li",{parentName:"ol"},"And ",(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," (version 12 or greater)"),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone git@github.com:OpenFn/devtools.git")," for SSH or ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/OpenFn/devtools.git")),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"cd devtools")),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"./install.sh ssh")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"./install.sh https")," to install core, language-common, and language-http")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},'Note: If you get a "permission denied" message when running ',(0,i.kt)("inlineCode",{parentName:"em"},"./install.sh"),", try ",(0,i.kt)("inlineCode",{parentName:"em"},"run chmod +x ./install.sh")," then retry the install command.")),(0,i.kt)("p",null,"To install specific adaptors, run ",(0,i.kt)("inlineCode",{parentName:"p"},"./install.sh ${ssh || https} language-${name}")),(0,i.kt)("p",null,"You can run core from anywhere by using ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install -g @openfn/core")," for a global install."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Execute takes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-l [language-package].Adaptor"),": The adaptor being used"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-e [expression.js]:")," The expression being tested"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-s [state.json]"),": The message ",(0,i.kt)("inlineCode",{parentName:"li"},"data: {...}")," and credential ",(0,i.kt)("inlineCode",{parentName:"li"},"configuration: {...}")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-o [output.json]"),": The file to which the output will be written")),(0,i.kt)("h3",{id:"bash-usage"},"Bash usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"~/devtools/core/bin/core execute \\\n  -l ~/devtools/adaptors/language-http \\\n  -s ./tmp/state.json \\\n  -o ./tmp/output.json \\\n  -e ./tmp/expression.js\n")),(0,i.kt)("h3",{id:"the---test-option"},"The ",(0,i.kt)("inlineCode",{parentName:"h3"},"--test")," option"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"~/devtools/core/bin/core execute \\\n  -l ~/devtools/adaptors/language-http \\\n  -s ./tmp/state.json \\\n  -o ./tmp/output.json \\\n  -e ./tmp/expression.js \\\n  --test\n")),(0,i.kt)("p",null,"This intercepts all HTTP requests and displays the request information for debugging."),(0,i.kt)("h4",{id:"fakeadaptor"},(0,i.kt)("inlineCode",{parentName:"h4"},".FakeAdaptor")),(0,i.kt)("p",null,"Adaptors may provide dummy modules for testing. ",(0,i.kt)("inlineCode",{parentName:"p"},"language-salesforce")," has a built-in ",(0,i.kt)("inlineCode",{parentName:"p"},".FakeAdaptor")," which allows a user to test expressions on data without sending them to a real Salesforce server."),(0,i.kt)("p",null,"Instead of using ",(0,i.kt)("inlineCode",{parentName:"p"},"-l ./language-salesforce.Adaptor"),", use ",(0,i.kt)("inlineCode",{parentName:"p"},"-l./language-salesforce.FakeAdaptor")," to test expressions offline: ",(0,i.kt)("inlineCode",{parentName:"p"},"./core/bin/core execute -l ./language-salesforce.FakeAdaptor -s ./tmp/state.json -o ./tmp/output.json -e ./tmp/expression.js")),(0,i.kt)("h4",{id:"offline-testing-for-other-adaptors"},"Offline testing for other adaptors"),(0,i.kt)("p",null,"For most standard adaptors which make use of HTTP requests, you can add ",(0,i.kt)("inlineCode",{parentName:"p"},"--test")," to the execute command to intercept all HTTP requests and return a ",(0,i.kt)("inlineCode",{parentName:"p"},"200"),"."),(0,i.kt)("h2",{id:"configure-an-openfn-project"},"Configure an OpenFn project"),(0,i.kt)("p",null,"You can use YAML project configuration files to define projects both on the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.openfn.org/documentation/deploy/platform"},"OpenFn platform")," and in ",(0,i.kt)("a",{parentName:"p",href:"https://openfn.github.io/microservice/readme.html#content"},"OpenFn microservice"),". Running ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/generate-project.js")," helps you build a project config YAML interactively, adding your triggers, credentials and jobs to the config. You can read more about the config file ",(0,i.kt)("a",{parentName:"p",href:"https://openfn.github.io/microservice/readme.html#sample-configuration"},"here")),(0,i.kt)("p",null,"If you choose ",(0,i.kt)("inlineCode",{parentName:"p"},"monolith")," mode, all your job code will be included in the YAML. In ",(0,i.kt)("inlineCode",{parentName:"p"},"URI")," mode, you\u2019ll get a config file with URI-s to your defined jobs."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Generate Project",src:n(96392).Z})),(0,i.kt)("h2",{id:"pre-requisites"},"Pre-Requisites"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node")," is required to run jobs and use many of the scripts in Devtools.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"http://www.gnu.org/software/make/"},"Make")," is used so that our modern (es9) JavaScript can be run on older Node runtimes. To install it and other build tools, you might run ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo apt-get install build-essential"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"A basic working knowledge of NodeJs, promises and asynchronous functions is essential for writing adaptors."))),(0,i.kt)("h2",{id:"scripts"},"Scripts"),(0,i.kt)("p",null,"Devtools comes with a collection of scripts to aid in setting up a development environment for adaptor work, and include commands to quickly clone a large number of adaptors, create tarballs of adaptors with only production dependencies included, etc."),(0,i.kt)("p",null,"For the kitchen sink, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"./install ssh\n./scripts/bootstrap npm-install\n")),(0,i.kt)("p",null,"In order to run the scripts, ensure you have cd'd into the project directory and enter ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/<script-name>")),(0,i.kt)("h3",{id:"bootstrap"},"bootstrap"),(0,i.kt)("p",null,"Installs all adaptors in ",(0,i.kt)("inlineCode",{parentName:"p"},"repos")," file to the ",(0,i.kt)("inlineCode",{parentName:"p"},"/adaptors")," directory and prepares the working directory. This needs to be run before running any of the other scripts. Pass ",(0,i.kt)("inlineCode",{parentName:"p"},"npm-install")," to run npm install for each adaptor also."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/bootstrap npm-install")," - to clone, set up hooks and npm install in each ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/bootstrap"),"- to clone and set up hooks in each"),(0,i.kt)("h3",{id:"generate-projectjs"},"generate-project.js"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/generate-project.js")," interactively generates a YAML project configuration file that can be used both on the OpenFn platform and in OpenFn microservice to define projects."),(0,i.kt)("h3",{id:"generate-doclets"},"generate-doclets"),(0,i.kt)("p",null,"Iterates overs all language pack folder names found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"repos")," list and creates a doclet json file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"doclets")," directory."),(0,i.kt)("h3",{id:"analyse-doclets"},"analyse-doclets"),(0,i.kt)("p",null,"Iterates overs all doclets found in ",(0,i.kt)("inlineCode",{parentName:"p"},"doclets")," and gives a tree view of the doclet structure using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OpenFn/jsdoc-query"},"jsdoc-query"),"."),(0,i.kt)("h3",{id:"bundle"},"bundle"),(0,i.kt)("p",null,"Creates a tarball with all production dependencies install for a given module."),(0,i.kt)("p",null,"Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/bundle-node language-common -o builds")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"language-common-v1.0.0.tgz")," file in the 'builds' directory."),(0,i.kt)("p",null,"Arguments ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/bundle-node <language> -o <output folder> -d")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-o")," - Output folder"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-d")," - Debug"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--no-ast")," - Don't build an include an AST for OpenFn.org to parse")),(0,i.kt)("h3",{id:"bundle-all"},"bundle-all"),(0,i.kt)("p",null,"Runs ",(0,i.kt)("inlineCode",{parentName:"p"},"bundle")," for all repos found in the list, and outputs them to the ",(0,i.kt)("inlineCode",{parentName:"p"},"builds")," folder."),(0,i.kt)("h3",{id:"upload-release"},"upload-release"),(0,i.kt)("p",null,"Uploads a tarball to a Github release."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"GH_TOKEN=<oauth-token> \\\n  ./scripts/upload-release -i ./builds/language-common-v0.0.0.tgz\n")),(0,i.kt)("p",null,"Infers the repo name and version number from the file."),(0,i.kt)("p",null,"Arguments ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/upload-release -i <file> [-u]")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"i")," - Path to build file to upload"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"u")," - Update a file if already exists (and is a different size)")),(0,i.kt)("h2",{id:"releasing-a-new-adaptor-version-for-production-use"},"Releasing a new adaptor version for production use"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Bump the version in ",(0,i.kt)("inlineCode",{parentName:"strong"},"package.json"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"strong"},"npm install"))," to update ",(0,i.kt)("inlineCode",{parentName:"li"},"package-lock.json")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Commit")," and tag your version with ",(0,i.kt)("inlineCode",{parentName:"li"},"git tag"),". ",(0,i.kt)("em",{parentName:"li"},"N.B., this is handled with a git hook provided by ",(0,i.kt)("inlineCode",{parentName:"em"},"bootstrap"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Push the commits and tag to GitHub")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"git push && git push --tags")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Create a release")," on the the associated repo on Github, selecting the version tag that was pushed in the last step. Write a title and release notes as needed then click 'Publish release'."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Return to the devtools directory")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"cd ../../")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Bundle the module")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"./scripts/bundle-node ./adaptors/<language-pack> -o builds")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Verify that the tarball was created")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"builds")," with the naming convention of: ",(0,i.kt)("inlineCode",{parentName:"li"},"<language-pack>-<version>.tgz")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Upload the build")," using the ",(0,i.kt)("inlineCode",{parentName:"li"},"upload-release")," script: ",(0,i.kt)("inlineCode",{parentName:"li"},"./scripts/upload-release -i builds/<file>"))),(0,i.kt)("p",null,"If the wrong file was uploaded or you want to replace the build on Github then use the ",(0,i.kt)("inlineCode",{parentName:"p"},"-u")," flag which deletes the build from Github if the filesize is different."),(0,i.kt)("p",null,"Note that this script expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"GH_TOKEN")," env variable, which is an OAuth2 token you must get from Github (via the account page)"),(0,i.kt)("h2",{id:"using-a-new-adaptor-in-an-openfnplatform-instance"},"Using a new adaptor in an OpenFn/platform instance"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add your release to the ",(0,i.kt)("inlineCode",{parentName:"li"},"scripts/install-lp")," script."),(0,i.kt)("li",{parentName:"ol"},"Add the version number to ",(0,i.kt)("inlineCode",{parentName:"li"},"priv/adaptors.json"),"."),(0,i.kt)("li",{parentName:"ol"},"Add the ",(0,i.kt)("inlineCode",{parentName:"li"},"bodySchema")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"CredentialView.js"),".")))}u.isMDXComponent=!0},96392:function(e,t,n){"use strict";t.Z=n.p+"assets/images/generate-project-40444c4a75e8e0b63a1cbe1e02d7f49d.gif"}}]);