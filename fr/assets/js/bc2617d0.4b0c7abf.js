"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[7674],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),_=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=_(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=_(t),f=r,p=c["".concat(l,".").concat(f)]||c[f]||u[f]||o;return t?a.createElement(p,i(i({ref:n},d),{},{components:t})):a.createElement(p,i({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var _=2;_<o;_++)i[_]=t[_];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},99158:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return _},toc:function(){return u}});var a=t(83117),r=t(80102),o=(t(67294),t(3905)),i=["components"],s={title:"TEST] Upsert Household Visit",sidebar_label:"TEST] Upsert Household Visit",id:"TEST-Upsert-Household-Visit-2022-04-21",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","query","relationship","upsertIf","Array"]},l=void 0,_={unversionedId:"jobs/auto/TEST-Upsert-Household-Visit-2022-04-21",id:"jobs/auto/TEST-Upsert-Household-Visit-2022-04-21",title:"TEST] Upsert Household Visit",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/library/jobs/auto/TEST-Upsert-Household-Visit-2022-04-21.md",sourceDirName:"jobs/auto",slug:"/jobs/auto/TEST-Upsert-Household-Visit-2022-04-21",permalink:"/fr/library/jobs/auto/TEST-Upsert-Household-Visit-2022-04-21",draft:!1,tags:[],version:"current",frontMatter:{title:"TEST] Upsert Household Visit",sidebar_label:"TEST] Upsert Household Visit",id:"TEST-Upsert-Household-Visit-2022-04-21",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","query","relationship","upsertIf","Array"]},sidebar:"library",previous:{title:"\u2728 TEST] Upsert Household",permalink:"/fr/library/jobs/auto/TEST-Upsert-Household-2022-02-24"},next:{title:"Test] Upsert Person",permalink:"/fr/library/jobs/auto/Test-Upsert-Person-2022-04-21"}},d={},u=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],c={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: TEST] Upsert Household Visit"),(0,o.kt)("li",{parentName:"ul"},"Adaptor: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,o.kt)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,o.kt)("li",{parentName:"ul"},"Adaptor Version: ",(0,o.kt)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.8.1"},(0,o.kt)("inlineCode",{parentName:"a"},"v2.8.1"))),(0,o.kt)("li",{parentName:"ul"},"Created 2 months ago"),(0,o.kt)("li",{parentName:"ul"},"Updated 11 days ago"),(0,o.kt)("li",{parentName:"ul"},"Score: ",(0,o.kt)("b",null,"65")," (an ",(0,o.kt)("a",{parentName:"li",href:"/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,o.kt)("h2",{id:"key-functions"},"Key Functions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"field"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"fields"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"join"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"relationship"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"upsertIf"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Array")),(0,o.kt)("h2",{id:"expression"},"Expression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"query(\n  `SELECT Id, Parent_Geographic_Area__c, Parent_Geographic_Area__r.Name, Parent_Geographic_Area__r.Parent_Geographic_Area__c FROM Location__c WHERE CommCare_User_ID__c = '${dataValue(\n    'form.owner_id'\n  )(state)}'`\n);\n\nfn(state => ({\n  ...state,\n  data: {\n    ...state.data,\n    catchmentNewId:\n      state.references[0].records && state.references[0].records.length !== 0\n        ? (state.references[0].records[0].Parent_Geographic_Area__r \n          ? state.references[0].records[0].Parent_Geographic_Area__r.Parent_Geographic_Area__c\n          : undefined)\n        : undefined,\n  },\n}));\n\nfn(state => {\n  const deaths = state.data.form.household_deaths\n    ? state.data.form.household_deaths.deaths\n    : '';\n  if (deaths !== '' && !Array.isArray(deaths)) {\n    state.data.form.household_deaths.deaths = [deaths];\n  }\n\n  const supervisorMap = {\n    community_health_nurse: 'Community Health Nurse',\n    chw_supervisor: 'CHW Supervisor',\n    chewschas: 'CHEWs/CHAs',\n    other: 'Other',\n    none: 'None',\n  };\n\n  const insuranceMap = {\n    nhif: 'NHIF',\n    Linda_mama: 'Linda mama',\n    other_please_specify_if_active: 'Other',\n    none: 'None',\n  };\n\n  return { ...state, supervisorMap, insuranceMap };\n});\n\nupsertIf(\n  state.data.metadata.username !== 'openfn.test' &&\n    state.data.metadata.username !== 'test.2022' &&\n    state.data.form.test_user  !== 'No' ,\n  'Visit__c',\n  'CommCare_Visit_ID__c',\n  fields(\n    field('CommCare_Username__c', dataValue('form.meta.username')),//\n    field('CommCare_Visit_ID__c', dataValue('id')),\n    // field('Household_CHW__c', 'a030Q00000A0jeY'),\n    // field('Catchment__c', dataValue('a000Q00000Egmtk')),\n    field('Catchment__c', dataValue('catchmentNewId')),\n    // field('Household__c','a010Q00000BL6lT'),\n    // field('Household__c', dataValue('form.case.@case_id')),\n    relationship(\n          'Household__r',\n          'CommCare_Code__c',\n          dataValue('form.case.@case_id')),\n    field('Date__c',dataValue('form.Date')),\n    //field('MOH_household_code__c', state => {\n    //  var moh = dataValue('form.Household_Information.moh_code')(state);\n    //  var mohLinked = dataValue('form.MOH_household_code_linked')(state);\n    // return moh ? moh : mohLinked && mohLinked !== '' ? mohLinked : undefined;\n   // }),\n    field('Active_Household__c', state => {\n      var status = dataValue('form.Household_Status')(state);\n      return status && status === 'No'\n        ? false\n        : status === 'Yes'\n        ? true\n        : status;\n    }),\n    //field('Inactive_Reason__c', state => {\n    //  var reason = dataValue('form.Reason_for_Inactive')(state);\n    //  return reason ? reason.toString().replace(/_/g, ' ') : null;\n    //}),\n    //field('Source__c', 1),//\n    //relationship(\n    //  'Household_CHW__r', \n    //  'CommCare_ID__c', \n    //  dataValue('form.sfid')),TO UPDATE IN PRODUCTION\n    field(\n      'Completed_COVID_19_Phone_Screening__c',\n      dataValue(\n        'form.did_you_complete_the_covid-19_phone_screening_for_this_household'\n      )\n    ),\n    field('Household_Visit_Type__c', state => {\n      var visit = dataValue(\n        'form.is_this_a_physical_home_visit_or_a_phone_call_visit'\n      )(state);\n      return visit ? visit.toString().replace(/_/g, ' ') : null;\n    }),\n   // field('Household_village__c', dataValue('form.village')),//\n    //New Nutrition Field (MOTG)\n    field(\n      'Active_in_Nutrition_Program__c',\n      dataValue(\n        'form.nutrition_enrollment.enrolled_in_a_lwala_nutrition_program'\n      )\n    ),\n    field(\n      'lwala_nutrition_program_enrollment_date__c',\n      dataValue(\n        'form.nutrition_enrollment.lwala_nutrition_program_enrollment_date'\n      )\n    ),\n    field(\n      'Trained_in_gardening__c',\n      dataValue('form.nutrition_enrollment.household_trained_on_gardening')\n    ),\n    field(\n      'household_trained_on_gardening_date__c',\n      dataValue(\n        'form.nutrition_enrollment.when_was_the_household_trained_on_gardening'\n      )\n    ),\n    field(\n      'Seed_Input_Support__c',\n      dataValue(\n        'form.nutrition_enrollment.household_provided_with_seed_input_support'\n      )\n    ),\n    field(\n      'household_provided_with_seed_input_suppo__c',\n      dataValue(\n        'form.nutrition_enrollment.when_was_the_household_provided_with_seed_input_support'\n      )\n    ),\n    field(\n      'MIYCN_Trained__c',\n      dataValue('form.nutrition_enrollment.household_trained_on_MIYCN')\n    ),\n    field(\n      'Kitchen_Garden__c',\n      dataValue('form.nutrition_enrollment.household_has_kitchen_garden')\n    ),\n\n    field(\n      'Access_to_safe_water__c',\n      dataValue('form.Household_Information.Safe_Water')\n    ),\n    field(\n      'Treats_Drinking_Water__c',\n      dataValue('form.Household_Information.Treats_Drinking_Water')\n    ),\n    field(\n      'Tippy_Tap__c',\n      dataValue('form.Household_Information.Active_Handwashing_Station')\n    ),\n    field(\n      'Pit_Latrine__c',\n      dataValue('form.Household_Information.Functional_Latrine')\n    ),\n    field(\n      'Rubbish_Pit__c',\n      dataValue('form.Household_Information.Rubbish_Pit')\n    ),\n    field(\n      'Drying_Rack__c',\n      dataValue('form.Household_Information.Drying_Rack')\n    ),\n    field(\n      'Kitchen_Garden__c',\n      dataValue('form.Household_Information.Kitchen_Garden')\n    ),\n    field(\n      'Cookstove__c',\n      dataValue('form.Household_Information.Improved_Cooking_Method')\n    ),\n    field('Clothe__c', dataValue('form.Household_Information.Clothesline')),\n    field(\n      'WASH_Trained__c',\n      dataValue('form.Household_Information.WASH_Trained')\n    ),\n    field(\n      'Has_muac_tape__c',\n      dataValue('form.Household_Information.family_muac_tape_available')\n    ),\n    field('Uses_ITNs__c', dataValue('form.Household_Information.ITNs')),\n    field('Deaths_in_the_last_6_months__c', state => {\n      var deaths = dataValue('form.household_deaths.deaths_in_past_6_months')(\n        state\n      );\n      return deaths && deaths > 0 ? 'Yes' : 'No';\n    }),\n    //field(\n    //  'Total_household_people__c',\n    //  dataValue('form.Total_Number_of_Members')\n   // ),\n    field('Supervisor_Visit__c', state =>\n      state.data.form.supervisor_visit\n        ? state.supervisorMap[state.data.form.supervisor_visit]\n        : null\n    ),\n    field('Health_insurance__c', dataValue('form.health_insurace_cover')),\n    field(\n      'Health_insurance_active_status__c',\n      dataValue('form.healthinsurance_active')\n    ),\n    field('Health_insurance_type__c', state => {\n      var status = dataValue('form.health_insurance')(state);\n      var value =\n        status && status !== ''\n          ? status\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return state.insuranceMap[value] || value;\n              })\n          : undefined;\n      return value ? value.join(';') : undefined;\n    }),\n    field(\n      'Other_Health_Insurance__c',\n      dataValue('form.if_other_please_specify')\n    ),\n    //field('Last_Modified_Date_CommCare__c', dataValue('server_modified_on')),\n    field('Case_Closed_Date__c', state => {\n      var closed = dataValue('form.case.update.closed')(state);\n      var date = dataValue('server_modified_on')(state);\n      return closed && closed == true ? date : undefined;\n    })\n  )\n);\n")))}f.isMDXComponent=!0}}]);