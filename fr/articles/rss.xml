<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>OpenFn Help Articles</title>
        <link>https://docs.openfn.org/fr/articles</link>
        <description>OpenFn/docs Blog</description>
        <lastBuildDate>Fri, 22 Oct 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <copyright>Copyright Â© 2021 Open Function Group, LLC.</copyright>
        <item>
            <title><![CDATA[Testing a React app, the blurred line between Unit, integration and E2E]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/10/22/testing-react-app-with-jest-hound</link>
            <guid>Testing a React app, the blurred line between Unit, integration and E2E</guid>
            <pubDate>Fri, 22 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Have you ever struggled to layout the strategy for testing your React App? Well, you are not alone! Here a few hints from the lessons I learned during my experience testing a React/Redux app with a Phoenix/Elixir backend.]]></description>
            <content:encoded><![CDATA[<p>Have you ever struggled to layout the strategy for testing your React App? Well, you are not alone! Here a few hints from the lessons I learned during my experience testing a <a href="https://reactjs.org/">React</a>/<a href="https://redux.js.org/">Redux</a> app with a <a href="https://www.phoenixframework.org/">Phoenix</a>/<a href="https://elixir-lang.org/">Elixir</a> backend.</p><h2>The Blurred Line</h2><p>Because a React app is built on <a href="https://reactjs.org/docs/react-component.html">components</a>, the basic UI units, it is natural to think and organise your tests around components! And so unit testing, in this case, would refer to &quot;component testing&quot;, which may be confusing at times, especially when the concept of unit testing is again applied to testing functions such as Redux <code>reducers</code> and <code>action creators</code> or any other JavaScript function in your application.</p><p>The other challenge that I often faced was whether to write tests for each component in isolation or write a test for a feature that encapsulates a set of related components. The later would be equivalent to writing what I would call &quot;integration tests&quot;.</p><p>Finally, one would say &quot;well then you could have just written the tests in a way that resemble the way the application is used&quot;! This approach is commonly recommended in the React community, but it quickly becomes really complex to maintain the layers of separation between <strong><em>unit tests</em></strong>, <strong><em>integration tests</em></strong> and <strong><em>end-to-end tests</em></strong>.</p><h2>What did I learn?</h2><p>Given a React/Redux application, here is how I would organise my testing strategy:</p><h3>Unit Tests</h3><ul><li><p>In a React app, <strong>unit tests</strong> will largely apply to testing &quot;helper functions&quot; and not to testing components, as justified in the next section. Helper functions, in this case, would refer to functions that live outside the components and are neither Redux action creators nor reducers. These functions can be used inside components, action creators, reducers or other parts of your application.</p></li><li><p>Writing unit tests for &quot;helper functions&quot; would ensure their signatures and expected outputs are protected against regressions. This would also ensure their use across components or other functions is consistent and as expected.</p></li><li><p>Where possible, each &quot;helper function&quot; must have its own <code>unit test</code>.</p></li><li><p>An example of a unit test would like:</p><pre><code class="language-javascript">const sum = require(&#x27;../../js/sum&#x27;);

test(&#x27;adds 1 + 2 to equal 3&#x27;, () =&gt; {
  expect(sum(1, 2)).toBe(3);
});
</code></pre></li><li><p>Write a <em>thousand</em> of these.</p></li></ul><h3>Integration Tests</h3><ul><li><p>In the context of a React/Redux app, component tests can be thought of as <strong>integration tests</strong>. This is because React components are built around features such as <code>&lt;Signup /&gt;</code>, <code>&lt;Search /&gt;</code>, etc. So one React component can be a mix of other components to achieve a UI feature set.</p></li><li><p>To test a component, write an <strong>integration test</strong> that covers the use of a given component for a given UI feature.</p></li><li><p>If a component being tested dispatches a Redux <code>action</code>, this is the right place to test those actions and their effect on the UI.</p></li><li><p>Pay attention to the concept of <em>feature isolation</em> vs <em>component isolation</em> as it will help you write better integration tests and also easily mock component contexts.</p></li><li><p>A classic example of <strong>feature isolation</strong> is when you have a <code>&lt;UserList /&gt;</code> component which displays a list of users and has a <code>&lt;button /&gt;</code> to add a new user. Writing a test for <code>&lt;UserList /&gt;</code> would be equivalent to testing a feature.</p></li><li><p>In this example, one would be tempted to test the action of clicking on the <code>&lt;AddUserButton /&gt;</code> and further test the <code>&lt;NewUser /&gt;</code> form... nope! This is where we draw the line! Only test that the <code>&lt;UserList /&gt;</code> renders the mock <code>users</code> in the list and that the <code>&lt;AddUserButton /&gt;</code> is present/enabled. The <code>&lt;UserList /&gt;</code> feature ends there, otherwise you will be sliding into <strong>End-to-End</strong> testing :)! The <code>&lt;User /&gt;</code> component, although it is invoked by <code>&lt;UserList /&gt;</code> component, it is isolated enough to be tested in its own integration test.</p></li><li><p>Testing components this way would make &quot;context mocking&quot; easier for components.</p></li><li><p>Another important benefit for isolating testing context, as in the example above, is that it will be easier to mock the <code>redux actions</code> and/or api calls using tools such as <a href="https://jestjs.io/">Jest</a> and <a href="https://mswjs.io/">Mock Service Worker</a> (or &quot;msw&quot;) as explained in the <a href="#choosing-testing-tools">Choosing Tools</a> section.</p></li><li><p>The value of writing integration tests for components, in this way, ensures that a given component renders the UI consistently, given all possible combinations of contexts and interactions. This will also allow you to ensure redux actions invoked by the component are called as expected and with the correct arguments.</p></li><li><p>An example component integration test would look like:</p><pre><code class="language-javascript">// ....other imports
import { setupServer } from &#x27;msw/node&#x27;;
// Tell jest to mock the module
jest.mock(&#x27;../js/actions/UserActions&#x27;, () =&gt; ({
  ...jest.requireActual(&#x27;../js/actions/UserActions&#x27;),
  saveUser: jest.fn(),
}));

import { saveUser as mockSaveUser } from &#x27;../js/actions/UserActions&#x27;;
const server = setupServer(...handlers);
  // Enable API mocking before tests
  beforeAll(() =&gt; server.listen());
  // Reset any runtime handlers we may add during the tests
  afterEach(() =&gt; server.resetHandlers());
  // Disable API mocking after the tests are done.
  afterAll(() =&gt; server.close());
  beforeEach(() =&gt; {
    jest.clearAllMocks();
  });
describe(&#x27;&lt;AddUser/&gt;&#x27;, () =&gt; {

test(&#x27;create new user&#x27;, async () =&gt; {
    const {getByPlaceholderText,getByText} = render(&lt;User {...defaultProps} /&gt;);
    userEvent.type(getByPlaceholderText(&#x27;First Name&#x27;), &#x27;John&#x27;);
    userEvent.type(getByPlaceholderText(&#x27;Last Name&#x27;), &#x27;Doe&#x27;);
    userEvent.click(getByText(&#x27;Save&#x27;));
    expect(mockSaveUser).toHaveBeenCalledTimes(1);
    expect(mockSaveUser).toHaveBeenCalledWith({
      firstName: &#x27;John&#x27;,
      lastName: &#x27;Doe&#x27;,
    });
}

</code></pre></li><li><p>Write a <em>good couple</em> of these.</p></li></ul><h3>End-to-End (e2e) Tests</h3><ul><li><p>In a React/Redux App, this would mean testing a <em>full flow</em> of a given feature. <strong>end-to-end tests</strong> would require launching the entire application, including the backend, to run a given test.</p></li><li><p>Note that <strong>end-to-end tests</strong> are different from <strong>integration tests</strong> as they require the entire App to run and render the full flow to your component under test.</p></li><li><p>With this understanding, consider writing <strong>e2e</strong> tests <em>per workflow</em>.</p></li><li><p>An example <strong>e2e workflow</strong> is the &quot;Viewing and adding users&quot; workflow.</p></li><li><p>The e2e test for this workflow would require a test runner to launch the app, log-in, navigate to the users list page, verify existing users are in the list, click on the Add New User button and confirm that the new user has been added to the list.</p></li><li><p>As you can see, e2e tests have more dependencies and require that you setup your testing environment in way that closely simulates your real application usage.</p></li><li><p>An example e2e test for a React/Redux App with a Phoenix/Elixir backend, using <code>Hound</code> as a test runner looks like this:</p></li></ul><pre><code class="language-elixir">defmodule OpenFn.UsersTest do
  setup do
    user = insert(:user, confirmed_at: DateTime.utc_now())
    {:ok, user: user }
  end

  @tag :integration
  test &quot;Sign-up.&quot;, %{user: user} do
    navigate_to(&quot;/sign-up&quot;)
    form = find_element(:id, &quot;sign_up_form&quot;)

    form
    |&gt; find_within_element(:id, &quot;first-name&quot;)
    |&gt; fill_field(&quot;John&quot;)

    form
    |&gt; find_within_element(:id, &quot;last-name&quot;)
    |&gt; fill_field(&quot;Doe&quot;)

    form
    |&gt; find_within_element(:id, &quot;email&quot;)
    |&gt; fill_field(&quot;doe@gmail.com&quot;)

    form
    |&gt; find_within_element(:id, &quot;save-button&quot;)
    |&gt; click

    assert page_title() === ~s/Welcome to my page/
    end
end
</code></pre><ul><li>Write <em>only a few</em> of these.</li></ul><h2>Choosing Testing Tools</h2><p>There are many testing tools out there, but for a typical <em>React/Redux</em> app the following tools should help you accomplish the above tasks:</p><ol><li><a href="https://jestjs.io/docs/getting-started">Jest</a> as test runner for <strong>unit</strong> and <strong>integration</strong> tests.</li><li><a href="https://testing-library.com/docs/">React Testing Library</a> used along with Jest as an &quot;assertion library&quot; for integration tests.</li><li><a href="https://mswjs.io/docs/getting-started/install">MSW</a> used along with Jest as a REST API mocking library.</li><li><a href="https://hexdocs.pm/hound/readme.html">Hound</a> as a test runner for <strong>e2e</strong> tests in Elixir/Phoenix apps. <a href="https://developers.google.com/web/tools/puppeteer">Puppeteer</a> can also be used along with Jest.<ul><li>If Puppeteer is used, it will work seamlessly with Jest but only in headless browser mode. It also reduces on tech stack since you will only need Jest.</li><li>Hound gives you the ability to run your <strong>e2e</strong> tests both in <code>headless</code> and <code>browser</code> mode.</li></ul></li></ol><h2>Final thoughts and next steps</h2><p>Testing a React App can be really hard, but worth it! By building <code>Aria-accessible</code> components ahead of time, you save yourself ð° and good health! A few more hints would be:</p><ul><li>Build clean, isolated and plugable components for your better testing experience. &quot;God components&quot; can be a <em>pain</em> to test!</li><li>Using test runners such as Jest, that use <em>emulated</em> web browsers (e.g., <code>jsdom</code>) rather than a real browser come with their own challenges in rendering and traversing complex DOM trees, especially if you are using UI libraries such as <a href="https://mui.com/">MUI</a>.</li><li>If using Jest for <strong>integration tests</strong>, I would recommend the components under test have as few dependencies as possible to avoid the complexity involved in mocking http requests and waiting for asynchronous DOM rendering.</li></ul><p>What would I do differently? Here are my few thoughts:</p><ul><li>Organise and document detailed test cases for manual &quot;click testing&quot;.</li><li>Identify and clearly isolate components for <strong>integration tests</strong>.</li><li>Do not <em>delete</em> slow tests, instead re-write your component to be faster. Respect the linter&#x27;s advice, always!</li><li>Use a commonly supported frontend testing stack such as Jest, Msw, or Puppeteer for easier setup and community support.</li><li>Setup your test runner to use a test database. It helps, especially during <strong>e2e</strong> testing.</li><li>Always write <strong><em>all the three types</em></strong> of tests, whenever applicable.</li></ul><p>All this stuff for what?</p><ul><li>Well because regressions can be much more expensive to your organisation! Writing high quality and thoroughly tested software will save you ð° and help guarantee a maintainable codebase and a progressive software application.</li></ul><p>:::tip Still looking for the legend&#x27;s advice?</p><p>Gotcha, here you go...</p><ol><li>Swallow your pride and be humble: <em>always</em> do <strong>manual testing!</strong></li><li>Click test your way through the <strong>manual test cases</strong> for every new deployment, catching regressions.</li><li><em>Lock in</em> your fixes and new features as <strong>unit tests</strong>, <strong>integration tests</strong>, and <strong>end-to-end tests</strong>.</li></ol><p>:::</p><p>Happy testing,</p><p>Chaiwa</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Improving Multistage Docker Builds using Buildx]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/10/08/improving-multistage-docker-builds-using-buildx</link>
            <guid>Improving Multistage Docker Builds using Buildx</guid>
            <pubDate>Fri, 08 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[So you're using docker's multi-stage builds and noticed that your build times aren't nearly as quick as you expected?]]></description>
            <content:encoded><![CDATA[<p>So you&#x27;re using docker&#x27;s multi-stage builds and noticed that your build times aren&#x27;t nearly as quick as you expected?</p><p>As many teams who spend more and more time using docker, it&#x27;s quite common to get into multi-stage builds; usually resulting in significantly smaller images.</p><p>However this comes with a pretty significant dilemma with caching. Even when using the <code>--cache-from</code> flag when building, docker only caches the last image.</p><p>One proposed solution<sup><a href="#ref1">1</a></sup>, is to pull, build and push each individual stage. Coming with tight coupling between the shape of your Dockerfile and your build process/scripts.</p><p>The other solution uses Docker Buildx which the document describes as:</p><blockquote><p>Docker Buildx is a CLI plugin that extends the docker command with the full support of the features provided by Moby BuildKit builder toolkit. It provides the same user experience as docker build with many new features like creating scoped builder instances and building against multiple nodes concurrently.</p></blockquote><p>While that sounds pretty cool, it doesn&#x27;t really touch on caching. This actually took me a while to find out that it would in fact do caching very differently. In fact it&#x27;s a very different experience using it, and has lots of really cool features that further detach you from the local docker state allowing you to build in environments that are stateless - such as Google CloudBuild without having to wire up some kind of persistence or file caching scheme.</p><h2>Buildx</h2><p>We&#x27;re only going to scratch the surface of Buildx, and with that let&#x27;s get the absolute minimum working; build our image locally.</p><h3>Local Cache</h3><p>First things first we need to create a builder, and select it for use. This is important as without creating a buildx builder (and setting it as the default), buildx will use the <code>docker</code> driver instead of the <code>docker-container</code> driver which we want in order to take advantage of cache exporting.</p><pre><code>docker buildx create --name mybuilder --use
</code></pre><blockquote><p>You only need to run this once, except in the case of CloudBuild where each invocation is a new node.</p></blockquote><pre><code>docker buildx build \
  --cache-from=type=local,src=/tmp/buildx-cache \
  --cache-to=type=local,dest=/tmp/buildx-cache \
  --load \
  .
</code></pre><p>While the <code>--cache-*</code> options aren&#x27;t specifically required when running <code>build</code>, as <code>buildx</code> does manage its own local cache (distinct from the regular docker cache), it&#x27;s there to emphasise the options that cache can be provided via the CLI options.</p><p>This is about as close as you get to a regular docker build, with the significant difference being that you have to specify where to cache from and to.</p><p>The <code>--load</code> flag is to tell buildx to set the output to the local docker daemon. Without that you won&#x27;t actually get a resulting image to run. However, depending on your use case, this could be seen as a convenience - if you&#x27;re wanting to run your tests inside your build; a resulting image isn&#x27;t particularly useful.</p><h3>Remote Cache</h3><p>Now comes to the part I&#x27;m most interested in, caching in a stateless/remote environment. Multipart builds for us at OpenFn are essential, since we use Elixir and like other compiled languages there is a lot to be gained by only shipping the stuff you&#x27;re going to run; and no language is safe from requiring several times more &#x27;stuff&#x27; in order to build our apps.</p><p>Buildx supports a <a href="https://github.com/docker/buildx/blob/master/docs/reference/buildx_build.md#-export-build-cache-to-an-external-cache-destination---cache-to">handful of different types</a> of caching sources and destinations. We&#x27;re going to be using the <code>registry</code> type, where you point the cache at a repository reference (repo/image:tag style).</p><blockquote><p>One thing to note is that Google Container Registry does not support the metadata/manifest format that buildx uses, so if you&#x27;re using Google Cloud you will need to start using Artifact Registry.</p></blockquote><p><strong>Inline</strong></p><p>Push the image and the cache together:</p><pre><code>...
--cache-from=type=registry,ref=$IMAGE_NAME \
--cache-to=type=inline \
...
</code></pre><p>This comes with the constraint that cache mode is always <code>min</code>, which only exports/caches the resulting layers; which is still better than the plain docker build caching but I think having the intermediary layers is generally a win. We want to avoid a single line change invalidating an entire build step.</p><p><strong>Registry</strong></p><p>Resulting image and cache are separated:</p><pre><code>...
--cache-from=type=registry,ref=$IMAGE_NAME-build-cache \
--cache-to=type=registry,ref=$IMAGE_NAME-build-cache,mode=max \
...
</code></pre><p>Again coming back to the cache mode, here being <code>max</code>; all intermediary laters are exported to the cache image as well.</p><p>I have opted to create <em>two</em> images, one for caching and another for the resulting image used to deploy. This gains us a much more granular cache and the ability to more easily manage the cache image - like deleting the whole thing when wanting to invalidate the cache. Not to mention I&#x27;m fairly sure the size of our images that get pulled on kubernetes would get significantly larger with many more layers.</p><p>It feels like a safer bet to have lean images for kubernetes to pull, and chunky cache images specifically for speeding up build.</p><p>Depending on your setup, pulling large images can get <em>seriously</em> expensive in a reasonably active deployment environment - like on AWS ECS without using PrivateLink.</p><blockquote><p>It appears the <code>moby/buildkit</code> documentation also demonstrates <a href="https://github.com/moby/buildkit#registry-push-image-and-cache-separately">this</a> approach.</p></blockquote><pre><code>IMAGE_NAME=us-east4-docker.pkg.dev/&lt;project-name&gt;/platform/app \
docker buildx build \
  -t $IMAGE_NAME:latest \
  --cache-from=type=registry,ref=$IMAGE_NAME-build-cache \
  --cache-to=type=registry,ref=$IMAGE_NAME-build-cache,mode=max \
  --push \
  --progress=plain \
  .
</code></pre><p>This implies that the cache image is named with the suffix <code>-build-cache</code>:<br/>
<code>us-east4-docker.pkg.dev/&lt;project-name&gt;/platform/app[-build-cache]</code>.</p><p>The <code>--push</code> argument tells buildx to push the resulting image to the registry.</p><h2>Tips</h2><p><strong>Clearing the local cache</strong></p><p>As mentioned before, buildx has its own cache and in order to clear the cache while debugging and readying a Dockerfile for remote building you&#x27;ll probably need to reach for <code>docker buildx prune</code>.</p><h2>Closing thoughts</h2><p>Using buildx has been a really pleasant experience, having personally attempted using it a few times over the last 3 years; the most recent one being the first time I felt confident getting it into production. As with any sufficiently flexible build tooling, the errors and issues you can run into range from complete gibberish, genuinely concerning inconsistencies to architectural choices that you haven&#x27;t fully caught up on; requiring an ever growing list of changes you need to make to your own build process.</p><p>Our initial observations have been great, reasonable changes on our build have gone from 28 minutes to around 9 minutes.</p><p>While I have encountered a few confusing cache invalidations, especially when building locally, exporting the cache to a repository and then having CloudBuild use the image cache. And occasionally locally having what feels like <em>really</em> aggressive caching on intermediate steps, leading me to pruning the local cache.</p><p>But overall, these issues aren&#x27;t necessarily buildx issues and more likely a combination of building docker images in general except with many more steps accounted for by the cache.</p><p>It&#x27;s kinda hard to see now what the exact issues I had with it in the past, but hey!</p><p>Buildx has given me what I &#x27;expected&#x27; with docker multi-stage builds, and having the cache in a repository completely side-steps having to attach a shared volume or copying from a storage bucket.</p><h2>Resources</h2><ul><li><a href="https://pythonspeed.com/articles/faster-multi-stage-builds/">Multi-stage builds #3: Speeding up your builds</a> <a name="ref1"><sup>1</sup></a></li><li><a href="https://docs.docker.com/buildx/working-with-buildx/">Docker Buildx</a></li><li><a href="https://github.com/docker/buildx/blob/master/docs/reference/buildx_build.md#buildx-build">buildx build reference</a></li><li><a href="https://github.com/moby/buildkit#registry-push-image-and-cache-separately">mody/buildkey Registry cache exporter</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Wrapping my head around jobs]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/07/05/wrapping-my-head-around-jobs</link>
            <guid>Wrapping my head around jobs</guid>
            <pubDate>Mon, 05 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Jobs are business processes turned into functional-style scripts. What does that mean, how should you approach writing jobs?]]></description>
            <content:encoded><![CDATA[<p>Jobs are business processes turned into functional-style scripts. What does that mean, how should you approach writing jobs?</p><p>First, this is how <em>I</em> think about jobs and what we do at Open Function Group to try to make our job code as readable, future-proof, and concise as possible. There are a million different ways to approach writing jobs. This is one.</p><h2>It all starts with <code>state</code></h2><p>If a job is a set of instructions for a chef (a recipe?) then the initial <code>state</code> is all of the ingredients they need tied up in a perfect little bundle. It usually looks something like this:</p><pre><code class="language-json">{
  &quot;configuration&quot;: {
    &quot;hostUrl&quot;: &quot;https://moh.kenya.gov.ke/dhis2&quot;,
    &quot;username&quot;: &quot;taylor&quot;,
    &quot;password&quot;: &quot;very-secret&quot;
  },
  &quot;data&quot;: {
    &quot;type&quot;: &quot;registration&quot;,
    &quot;patient&quot;: {
      &quot;age&quot;: 24,
      &quot;gender&quot;: &quot;M&quot;,
      &quot;nationalId&quot;: &quot;321cs7&quot;
    }
  }
}
</code></pre><p>This might be the initial <code>state</code> for a real-time, message-triggered job. Some source system generated a new patient payload and sent that payload to OpenFn. The data from our source system will wind up in <code>state.data</code>. Now if my job is meant to take this new patient registration information and use it to create a new record in the national health record system, I&#x27;ll also need to provide my robot-chef here with a credential so they can access that system. The credential I&#x27;ve specified will get put into <code>state.configuration</code> and now our &quot;raw ingredients&quot; are all ready for our robot chef.</p><p>Note that even if this job was initiated by a cron trigger (e.g., &quot;Hey chef, prepare this recipe every Tuesday at 7pm&quot;) or by a flow/catch trigger (e.g., &quot;Hey chef, prepare this recipe only when you <em>fail</em> to make banana pancakes&quot;) it will have an initial state.</p><p><strong>Every job, and every operation inside that job (think &quot;step&quot; in a recipe) is called with <code>state</code> and returns <code>state</code> when it&#x27;s done.</strong></p><p>Initial state for a cron triggered job might look like this:</p><pre><code class="language-json">{
  &quot;configuration&quot;: {
    &quot;hostUrl&quot;: &quot;https://moh.kenya.gov.ke&quot;,
    &quot;apiKey&quot;: &quot;abc123&quot;
  },
  &quot;data&quot;: {},
  &quot;lastProcessedId&quot;: 321
}
</code></pre><p>And for a fail triggered job like this:</p><pre><code class="language-json">{
  &quot;configuration&quot;: {
    &quot;hostUrl&quot;: &quot;https://moh.kenya.gov.ke&quot;,
    &quot;apiKey&quot;: &quot;abc123&quot;
  },
  &quot;data&quot;: {},
  &quot;lastProcessedId&quot;: 321,
  &quot;error&quot;: [&quot;Required field missing&quot;, &quot;Patient Surname&quot;, &quot;Line 43&quot;]
}
</code></pre><p>No matter what, jobs start with state. See <a href="/documentation/jobs/state/">&quot;Initial and final state for runs&quot;</a> for a detailed breakdown.</p><h2>It ends with <code>state</code> too</h2><p>Now that we&#x27;ve got it in our heads that <code>state</code> is the raw ingredients you hand to your chef when you ask them to prepare a recipe, let&#x27;s look at the recipe. Boiled down (excuse the pun) a job for loading those patients into the national health record system might look like this:</p><pre><code class="language-js">get(&#x27;/api/insuranceRegistrations&#x27;);
post(&#x27;/api/patients&#x27;, { ...someData });
post(&#x27;/api/visits&#x27;, { ...someData });
</code></pre><p>We&#x27;re telling our chef to take those raw ingredients (login info for our national health system and a chunk of information about a newly registered patient) and do the following:</p><ol><li>Find out whether this person already has a national health insurance number</li><li>Add this person to the patient registry (making use of some insurance data from step 1)</li><li>Add a visit record with information about this initial visit (making use of patient registry data from step 2)</li></ol><p>When all of this is done, we&#x27;ll not only have a new patient and visit logged in the national health registry, but we&#x27;ll also return a final <code>state</code> object with information about what we&#x27;ve done that can be used in subsequent jobs. Imagine that we want to make a cash transfer to this patient so that they can take a cab to the next visitâwe might create a job with the Mpesa adaptor that takes the final state of this first job as its <em>initial state</em>. In this way, jobs are composable.</p><p>But what about the complexity inside our jobâin order to complete step 2, we need some data from the insurance registry and we only get that data in step 1. Crucially, each operation (again, think &quot;step&quot; in a recipe) takes state and returns state. In effect, the OpenFn execution pipeline simply calls all of your action methods <em>with state</em>, passing it along from one operation to the next, waiting for each to finish and using the output from the first as the input for the second.</p><p>While you may write your <code>get</code>, <code>post</code>, <code>post</code> job as it&#x27;s show above, the way it&#x27;s handled by OpenFn is actually more like:</p><pre><code class="language-js">return get(&#x27;/api/insurance&#x27;, { ...useDataFromState })(state)
  .then(state2 =&gt; post(&#x27;/api/&#x27;, { ...useDataFromState2 })(state2))
  .then(state3 =&gt; post(&#x27;/api/visits&#x27;, { ...useDataFromState3 })(state3));
</code></pre><p>Each of these operations returns a function which <em>takes state</em> and returns state. This means that <em>within</em> a job, you are essentially modifying <code>state</code>, creating/manipulating records in external systems, and returning <code>state</code>.</p><p>It opens up a really interesting world of possibility for data manipulation, cleaning, or transformation. Consider what we might do <em>after</em> we get data from the insurance registry but <em>before</em> we create that patient in the national patient registry:</p><pre><code class="language-js">get(&#x27;/api/insuranceRegistrations&#x27;);
fn(state =&gt; {
  console.log(state.data); // let&#x27;s look at the response from the insurance API.
  state.data.people.filter(p =&gt; p.HasActiveInsurance); // and modify the payload to only retain those with active insurance
  return state; // before returning state for our create patients operation.
});
post(&#x27;/api/patients&#x27;, { ...someData });
post(&#x27;/api/visits&#x27;, { ...someData });
</code></pre><p>We might even need to do some manipulation <em>before</em> we send a <code>get</code> request to the insurance registry. That&#x27;s no problem:</p><pre><code class="language-js">fn(state =&gt; {
  state.data.registrationType = state.data.age &gt; 18 ? &#x27;Adult&#x27; : &#x27;Minor&#x27;;
  return state; // before returning state for our create patients operation.
});
get(&#x27;/api/insuranceRegistrations&#x27;, {
  query: { type: dataValue(&#x27;registrationType&#x27;) },
});
fn(state =&gt; {
  state.data.people.filter(p =&gt; p.HasActiveInsurance);
  return state;
});
post(&#x27;/api/patients&#x27;, { ...someData });
post(&#x27;/api/visits&#x27;, { ...someData });
</code></pre><p>Here, we&#x27;ve added a step to modify the initial <code>state</code> before we send that first <code>get</code> request to the insurance API. We determine if the new patient is a minor, and then use that newly calculated data to apply a query to the insurance API request.</p><p>Using <code>fn(state =&gt; state)</code> or <code>alterState(state =&gt; state})</code> is incredibly useful, because it allows us to separate our data manipulation, calculation, and raw Javascript (which will be harder for low-tech users to understand) from our external actions. Let&#x27;s explore that some more.</p><h2>Keeping external actions clean</h2><p>Inside each operation we could do some data manipulation... all of these operations, across the many different language packages, allow for inline data manipulation like this:</p><pre><code class="language-js">get(&#x27;/api/insuranceRegistrations&#x27;, {
  query: state =&gt; {
    console.log(&quot;I&#x27;m doing some fancy stuff here.&quot;);
    return { type: state.data.age &gt; 18 ? &#x27;Adult&#x27; : &#x27;Minor&#x27; };
  },
});
post(&#x27;/api/patients&#x27;, {
  body: {
    name: state =&gt; {
      return `${state.data.firstName}${state.data.lastName}`;
    },
  },
});
</code></pre><p>But if you&#x27;re interacting with both technical and non-technical users, it makes for harder to read jobs. Consider the following instead:</p><pre><code class="language-js">// Perform calculations...
fn(state =&gt; {
  // Create several new calculated attributes...
  state.data = {
    ...state.data,
    type: state.data.age &gt; 18 ? &#x27;Adult&#x27; : &#x27;Minor&#x27;,
    fullName: `${state.data.firstName}${state.data.lastName}`,
  };

  return state;
});

// Get insurance data...
get(&#x27;/api/insuranceRegistrations&#x27;, { query: { type: dataValue(&#x27;type&#x27;) } });

// Create new patient...
post(&#x27;/api/patients&#x27;, { body: { name: dataValue(&#x27;fullName&#x27;) } });
</code></pre><p>Since we often have non-developers creating the external operations like <code>get</code> and <code>post</code> above, this pattern makes our handoff easier. The business analyst can say &quot;I need to have a registration <code>type</code> field available for use when querying the insurance registry.&quot; A developer might respond, &quot;Great! How do you want to calculate it... I&#x27;ve got all of Javascript at my fingertips.&quot; That dev can then make as many API calls as they&#x27;d like, perform as many <code>map.reduce(...)</code> calls as their heart desires to complete that calculation... so long as they make sure the hand off <code>state</code> to the business analyst&#x27;s operation with a valid <code>state.data.type</code> attribute.</p><p>A final benefit of this approach is that it becomes much easier to generate job scripts from Google Sheets. Our implementation team frequently works with non-technical clients to generate field maps that look like this:</p><table><thead><tr><th>Path to Source Data</th><th>Destination Field</th><th align="right">Auto-generated syntax (using concat)</th></tr></thead><tbody><tr><td>patient.fullName</td><td>name</td><td align="right">field(&#x27;name&#x27;, dataValue(&#x27;patient.fullName&#x27;)),</td></tr><tr><td>patient.age</td><td>age</td><td align="right">field(&#x27;age&#x27;, dataValue(&#x27;patient.age&#x27;)),</td></tr><tr><td>???</td><td>type</td><td align="right">plz help us calculate &#x27;type&#x27; based on x, y, z</td></tr><tr><td>patient.sex</td><td>gender</td><td align="right">field(&#x27;gender&#x27;, dataValue(&#x27;patient.sex&#x27;)),</td></tr></tbody></table><p>We can then copy and paste the syntax generated in that final column directly into OpenFn and update the bits that need some sort of custom code, writing an <code>fn(state)</code> block or an <code>alterState(state)</code> block before the external action.</p><h2>Wrapping up</h2><p>Some key takeaways here:</p><ol><li><p>Jobs start and end with <code>state</code> â some raw ingredients that will be used in a recipe.</p></li><li><p>Jobs are lists of <code>operations</code> â steps in a recipe that <em>each</em> take <code>state</code>, <em>do some stuff</em>, and then return <code>state</code>.</p></li><li><p>As you move through the steps in a job, you are modifying <code>state</code>. Each subsequent step begins with the final state from the previous step.</p></li><li><p>It may be useful to keep all your custom Javascript data cleaning, manipulation, etc., in a separate operation (e.g., <code>fn(state)</code> or <code>alterState(state)</code>) so that your external actions are clean and easy to follow.</p></li></ol><p>Finally, taking a close look at how developers write those <code>fn(state)</code> steps tells us a lot about what the job execution pipeline is really doing:</p><pre><code class="language-js">// here, &quot;fn&quot; is a function that takes state and returns state
fn(state =&gt; {
  console.log(&quot;I&#x27;m doing some cool stuff.&quot;);
  //  I might create some new attribute...
  state.myNewThing = true;

  // And ALWAYS return state for the next operation to use...
  return state;
});
</code></pre><p>I hope this gives you sense of how I think about structuring jobs and building data pipelines or automation flows on OpenFn. We recognize that this stuff is complex, and are pushing our new documentation regularly, so please do get in touch if you think there are ways we could improve this type of walk-through/helper article.</p><p>Happy integrating,</p><p>Taylor</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Formulaires et cas : CommCare et intÃ©gration basÃ©e sur les Ã©vÃ©nements]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/05/24/commcare-events</link>
            <guid>Formulaires et cas : CommCare et intÃ©gration basÃ©e sur les Ã©vÃ©nements</guid>
            <pubDate>Mon, 24 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[C'est rapide, mais je viens de passer un appel passionnant avec une organisation qui va mettre en place des jobs pour dÃ©placer des donnÃ©es dans Salesforce Ã  partir de CommCare et j'ai rÃ©alisÃ© que bien que cela soit l'une de nos exigences d'intÃ©gration les plus courantes, nous n'avons pas fait un article des Â«astucesÂ» pour ce type de projet. Jusqu'Ã  prÃ©sent.]]></description>
            <content:encoded><![CDATA[<p>C&#x27;est rapide, mais je viens de passer un appel passionnant avec une organisation qui va mettre en place des jobs pour dÃ©placer des donnÃ©es dans Salesforce Ã  partir de CommCare et j&#x27;ai rÃ©alisÃ© que bien que cela soit l&#x27;une de nos exigences d&#x27;intÃ©gration les plus courantes, nous n&#x27;avons pas fait un article des Â«astucesÂ» pour ce type de projet. Jusqu&#x27;Ã  prÃ©sent.</p><p>Alors voilÃ . Bien qu&#x27;il ne s&#x27;agisse en aucun cas d&#x27;un modÃ¨le de planification de projet exhaustif, voici quelques Ã©lÃ©ments Ã  garder Ã  l&#x27;esprit si vous envisagez de mettre en Åuvre vous-mÃªme une intÃ©gration CommCare Ã  Salesforce.</p><h2>La plupart des gens utilisent le &quot;Transfert de donnÃ©es&quot; dans CommCare</h2><p>Tout d&#x27;abord, la plupart des gens utilisent la fonction Â« Transmission de donnÃ©es Â» de CommCare pour envoyer des soumissions de formulaires et des changements de cas (crÃ©ation, mise Ã  jour, fermeture, etc.) Ã  OpenFn en temps rÃ©el. Vous pouvez en savoir plus Ã  ce sujet <a href="/documentation/apps/commcare#forward-cases-andor-forms-from-commcare-to-openfn">ici</a> mais la principale considÃ©ration Ã  ce stade de planification est <em>quand</em> vous effectuerez les opÃ©rations â<code>crÃ©er(...)</code>, <code>update(...)</code>, <code>upsert(...)</code>, <code>query(...)</code>, <code>(massif(...)</code>, etc.âdans Salesforce et Ã  quelles donnÃ©es vous aurez accÃ¨s.</p><p>Chaque fois qu&#x27;une soumission de formulaire arrive dans CommCare, nous obtenons une copie de cette soumission chez OpenFn et pouvons utiliser ces donnÃ©es pour crÃ©er ou modifier certains enregistrements dans Salesforce.</p><p>De mÃªme, chaque fois qu&#x27;un cas est mis Ã  jour (ou crÃ©Ã© ou fermÃ©), nous obtiendrons une copie du cas avec toutes les &quot;propriÃ©tÃ©s&quot; du cas et nous pouvons utiliser ces donnÃ©es pour <em>faire quelque chose</em> dans Salesforce.</p><p>Si vous utilisez &quot;Transfert de formulaire&quot;, le <code>trigger</code> que vous crÃ©ez dans OpenFn pourrait ressembler Ã  ceci <code>{&quot;form&quot;:{&quot;@name&quot;:&quot;ART Adherence Self-Reporting Tool&quot;}}</code> et il dÃ©clencherait votre <code>job</code> Ã  chaque fois qu&#x27;une soumission &quot;ART Adherence Self-Reporting Tool&quot; est arrivÃ©e de CommCare, en donnant accÃ¨s Ã  toutes les donnÃ©es Ã  l&#x27;intÃ©rieur de cette soumission.</p><h2>Travailler avec les donnÃ©es en provenance de CommCare</h2><p>En supposant que vous utilisez la gestion de cas, les donnÃ©es qui arrivent de CommCare ressembleront Ã  ceci :</p><pre><code class="language-json">{
  &quot;__query_params&quot;: {
    &quot;app_id&quot;: &quot;some-long-id&quot;
  },
  &quot;app_id&quot;: &quot;some-long-id&quot;,
  &quot;archived&quot;: false,
  &quot;attachments&quot;: {
    &quot;1621866020043.jpg&quot;: {
      &quot;content_type&quot;: &quot;image/jpeg&quot;,
      &quot;length&quot;: 16423,
      &quot;url&quot;: &quot;https://www.commcarehq.org/a/your-project/api/form/attachment/some-uuid/1621866020043.jpg&quot;
    },
    &quot;form.xml&quot;: {
      &quot;content_type&quot;: &quot;text/xml&quot;,
      &quot;length&quot;: 2727,
      &quot;url&quot;: &quot;https://www.commcarehq.org/a/your-project/api/form/attachment/some-uuid/form.xml&quot;
    }
  },
  &quot;build_id&quot;: &quot;0ec83881cd0e420dad5c24ed3a5452fe&quot;,
  &quot;domain&quot;: &quot;your-project&quot;,
  &quot;edited_by_user_id&quot;: null,
  &quot;edited_on&quot;: null,
  &quot;form&quot;: {
    &quot;#type&quot;: &quot;data&quot;,
    &quot;@name&quot;: &quot;ART Adherence Self-Reporting Tool&quot;,
    &quot;@uiVersion&quot;: &quot;1&quot;,
    &quot;@version&quot;: &quot;2783&quot;,
    &quot;@xmlns&quot;: &quot;http://openrosa.org/formdesigner/59E1207B-969F-402D-9EEE-675504036F78&quot;,
    &quot;administrative&quot;: {
      &quot;coach_verification&quot;: &quot;vÃ©rifier_ici&quot;,
      &quot;visit_notes&quot;: &quot;&quot;,
      &quot;vist_notes_to_save&quot;: &quot;&quot;
    },
    &quot;case&quot;: {
      &quot;@case_id&quot;: &quot;1ec51ee9-5aef-4bd2-b7eb-7599856251bc&quot;,
      &quot;@date_modified&quot;: &quot;2021-05-24T14:20:28.693000Z&quot;,
      &quot;@user_id&quot;: &quot;332e893dcd1b413686621bd80aae0cd3&quot;,
      &quot;@xmlns&quot;: &quot;http://commcarehq.org/case/transaction/v2&quot;,
      &quot;update&quot;: {
        &quot;consent_received&quot;: &quot;oui&quot;,
        &quot;home_visit_notes&quot;: &quot;&quot;
      }
    },
    &quot;meta&quot;: {
      &quot;@xmlns&quot;: &quot;http://openrosa.org/jr/xforms&quot;,
      &quot;appVersion&quot;: &quot;CommCare Android, version \&quot;2.51.2\&quot;(463994). App v2798. CommCare Version 2.51.2. Build 463994, built on: 2021-03-17&quot;,
      &quot;app_build_version&quot;: 2798,
      &quot;commcare_version&quot;: &quot;2.51.2&quot;,
      &quot;deviceID&quot;: &quot;commcare_a39f55a5-c744-4e33-8e01-d17e7698894f&quot;,
      &quot;drift&quot;: &quot;0&quot;,
      &quot;geo_point&quot;: null,
      &quot;instanceID&quot;: &quot;130c68c5-7d17-4086-8a85-27d7d7da2216&quot;,
      &quot;timeEnd&quot;: &quot;2021-05-24T14:20:28.693000Z&quot;,
      &quot;timeStart&quot;: &quot;2021-05-24T14:18:46.856000Z&quot;,
      &quot;userID&quot;: &quot;332e893dcd1b413686621bd80aae0cd3&quot;,
      &quot;username&quot;: &quot;some-chw&quot;
    },
    &quot;participant_information&quot;: {
      &quot;participant_id&quot;: &quot;007&quot;,
      &quot;name&quot;: &quot;taylor downs&quot;,
      &quot;gender&quot;: &quot;masculin&quot;,
      &quot;guardian_information&quot;: {
        &quot;guardians_name&quot;: &quot;Fake Data&quot;,
        &quot;guardians_phone_number&quot;: &quot;8675309&quot;,
        &quot;guardians_signature&quot;: &quot;1621866020043.jpg&quot;,
        &quot;relationship_to_participant&quot;: &quot;father&quot;
      },
      &quot;current_medications&quot;: [
        { &quot;name&quot;: &quot;generic-1&quot;, &quot;actif&quot;: vrai },
        { &quot;name&quot;: &quot;fakelyn-notrealiol&quot;, &quot;actif&quot;: faux },
        { &quot;name&quot;: &quot;sasstra-zenica&quot;, &quot;actif&quot;: faux},
        { &quot;name&quot;: &quot;ibuprofen&quot;, &quot;active&quot;: vrai }
      ]
    },
    &quot;tested_for_hiv_status_tested_for_hiv&quot;: &quot;OK&quot;,
    &quot;visit_information&quot;: {
      &quot;consent_given&quot;: &quot;oui&quot;,
      &quot;date_consent_given&quot;: &quot;2021-05-23&quot;,
      &quot;visit_date&quot;: &quot;2021-05-23&quot;
    }
  },
  &quot;id&quot;: &quot;130c68c5-7d17-4086-8a85-27d7d7da2216&quot;,
  &quot;indexed_on&quot;: &quot;2021-05-24T14:20:39.045971&quot;,
  &quot;initial_processing_complete&quot;: vrai,
  &quot;is_phone_submission&quot;: vrai,
  &quot;metadata&quot;: {
    &quot;appVersion&quot;: &quot;CommCare Android, version \&quot;2.51.2\&quot;(463994). App v2798. CommCare Version 2.51.2. &quot;app_build_version&quot;: 2798,
    &quot;commcare_version&quot;: &quot;2.51.2&quot;,
    &quot;deviceID&quot;: &quot;commcare_a39f55a5-c744-4e33-8e01-d17e7698894f&quot;,
    &quot;drift&quot;: &quot;0&quot;,
    &quot;geo_point&quot;: null,
    &quot;instanceID&quot;: &quot;130c68c5-7d17-4086-8a85-27d7d7da2216&quot;,
    &quot;location&quot;: null,
    &quot;timeEnd&quot;: &quot;2021-05-24T14:20:28.693000Z&quot;,
    &quot;timeStart&quot;: &quot;2021-05-24T14:18:46.856000Z&quot;,
    &quot;userID&quot;: &quot;332e893dcd1b413686621bd80aae0cd3&quot;,
    &quot;username&quot;: &quot;some-chw&quot;
  },
  &quot;problem&quot;: null,
  &quot;received_on&quot;: &quot;2021-05-24T14:20:37.976363Z&quot;,
  &quot;resource_uri&quot;: &quot;&quot;,
  &quot;server_modified_on&quot;: &quot;2021-05-24T14:20:38.111789Z&quot;,
  &quot;type&quot;: &quot;data&quot;,
  &quot;uiversion&quot;: &quot;1&quot;,
  &quot;version&quot;: &quot;2783&quot;
}
</code></pre><p>Il s&#x27;agit d&#x27;un gros bloc de <code>JSON</code>- le corps du message qui est reÃ§u Ã  OpenFn lorsque ce formulaire particulier (&quot;ART Adherence Self-Reporting Tool&quot;) est soumis dans CommCare - sera remis Ã  la tÃ¢che pour commencer le traitement. La question est : que devons-nous faire ?</p><p>Lors de la configuration d&#x27;une implÃ©mentation en libre-service sur OpenFn, la chose la plus importante que vous puissiez faire en ce moment est d&#x27;Ã©numÃ©rer soigneusement le processus de saisie de donnÃ©es que vous aimeriez qu&#x27;un vrai humain suive. Vous pouvez le traduire ultÃ©rieurement en script de travail.</p><p>Vous devrez Ã©crire ceci pour votre propre cas, mais dans cet exemple fictif, voici le processus de saisie des donnÃ©es.</p><h2>Les instructions pour notre employÃ©</h2><p>:::astuce</p><p>DÃ¨s le dÃ©but, remarquez que nous sommes incroyablement explicites avec ces instructions ! Nous utilisons le &quot;API Name&quot; (au lieu de simplement le &quot;libellÃ©&quot;, qui peut Ãªtre ambigu) de chaque champ que nous voulons remplir dans Salesforce et nous utilisons le &quot;chemin&quot; spÃ©cifique aux donnÃ©es que nous voulons que cette personne entre depuis CommCare.</p><p><strong>Pourquoi sommes-nous si spÃ©cifiques ?</strong> Parce que, finalement, un ordinateur devra interprÃ©ter cela â et sont d&#x27;une ambiguÃ¯tÃ© <em>incroyable</em> !</p><p>:::</p><ol><li>Chaque fois qu&#x27;un message est reÃ§u avec <code>{&quot;form&quot;:{&quot;@name&quot;:&quot;ART Adherence Self-Reporting Tool&quot;}}</code> dans le corps (c&#x27;est notre trigger)</li><li>Connectez-vous Ã  Salesforce et crÃ©ez un nouveau participant avec le <code>participant_id</code> que vous trouvez dans la section<code>form. articipant_information</code> comme leur <code>Participant_Code__c</code>. (Si quelqu&#x27;un existe dÃ©jÃ  dans Salesforce avec ce code, puis mettre Ã  jour l&#x27;enregistrement existant.)</li><li>Remplissez les champs suivants dans Salesforce en fonction des donnÃ©es de CommCare dans ce message :<ul><li><code>Nom__c</code> avec les donnÃ©es de <code>form.participant_information.name</code></li><li><code>Sex__c</code> avec les donnÃ©es de <code>form.participant_information.gender</code></li><li><code>CommCare_Case_ID__c</code> avec les donnÃ©es de <code>form.case.@case_id</code></li></ul></li><li>AprÃ¨s avoir crÃ©Ã© (ou mis Ã  jour) ce participant dans Salesforce, crÃ©er un enregistrement de la visite avec l&#x27; <code>instanceID</code> Ã  partir de la section <code>mÃ©tadonnÃ©es</code> en tant que identifiant unique <code>Visit_Code__c</code>. (Une fois encore, s&#x27;il y a dÃ©jÃ  une visite avec cet ID, veuillez mettre Ã  jour l&#x27;enregistrement existant.)</li><li>Remplissez les champs suivants pour la visite avec les donnÃ©es de CommCare&quot;<ul><li><code>Date__c</code> avec <code>form.visit_information.visit_date</code>.</li><li><code>Consented__c</code> avec <code>form.visit_information.consent_given</code>.</li><li>Toujours dÃ©finir <code>Test_Status__c</code> Ã  <code>vrai</code>, indÃ©pendamment de ce qui se trouve dans le message de CommCare.</li><li>Et connectez cet enregistrement avec la <code>Community_Health_Worker</code> par son nom d&#x27;utilisateur dans <code>form.metadata.username</code>.</li></ul></li><li>Enfin, ajoutez un dossier pour chaque mÃ©dicament listÃ© dans le formulaire <code>form.participant_information.current_medications</code> â correspondant Ã  un ID unique formÃ© par une combinaison du <code>nom</code> du mÃ©dicament et du <code>participant_id</code> afin que nous puissions mettre Ã  jour les dossiers de mÃ©dicaments existants s&#x27;ils sont prÃ©sents.</li><li>Remplissez les champs suivants pour le mÃ©dicament :<ul><li><code>Generic_Name__c</code> avec <code>nom</code></li><li><code>Status__c</code> avec <code>actif</code></li><li>Et associez cet enregistrement avec le participant que vous avez crÃ©Ã© ou mis Ã  jour Ã  l&#x27;Ã©tape 2 via le champ <code>participant_id</code>.</li></ul></li></ol><p>Ouf... c&#x27;est Ã§a la tÃ¢che. C&#x27;est juste un exemple fictif et les choses pourraient Ãªtre plus simples, ou beaucoup plus compliquÃ©es que cela, mais il est important de se rappeler que si vous pouvez atteindre ce niveau de <strong>prÃ©cision et granularitÃ©</strong> dans votre processus de saisie de donnÃ©es, un outil comme OpenFn peut automatiser cela pour vous dans un Ã©clat.</p><h2>Traduire ceci dans un projet OpenFn</h2><p>Si vous diffusez des donnÃ©es depuis CommCare et que vous avez votre systÃ¨me Salesforce tous mis en place pour que cette personne de saisie de donnÃ©es puisse complÃ©ter les Ã©tapes ci-dessus (tous les objets et champs sont-ils crÃ©Ã©s ? les bons champs sont-ils marquÃ©s comme &quot;uniques&quot; et dÃ©finis Ã  Ãªtre utiliser comme &quot;external id&quot; dans la section administration de Salesforce ? avez-vous activÃ© le transfert de donnÃ©es dans CommCare ?) alors il est temps de les transformer en un projet OpenFn !</p><p>:::astuce</p><p>Un plugin rapide : <strong>Saviez-vous qu&#x27;il y a un <a href="https://community.openfn.org">forum de la communautÃ© OpenFn</a></strong> oÃ¹ vous pouvez poster des trucs comme les &quot;Ã©tapes&quot; ci-dessus et obtenir de l&#x27;aide des autres utilisateurs et du personnel d&#x27;OpenFn pour convertir convertir ces Ã©tapes en un vrai travail OpenFn ?</p><p>Eh bien, vous savez ! Allez voir sur <a href="https://community.openfn.org">community.openfn.org</a></p><p>:::</p><h3>CrÃ©er un identifiant Salesforce</h3><p>Nous n&#x27;avons pas besoin d&#x27;un mot de passe CommCare, car il nous enverra des donnÃ©es. CrÃ©ez un identifiant Salesforce qui permettra au travailleur OpenFn de se connecter Ã  votre systÃ¨me Salesforce.</p><p>En savoir plus sur les credentials<a href="/documentation/build/credentials">ici</a>.</p><h3>CrÃ©er un trigger filtre de message</h3><ul><li>SÃ©lectionnez <code>Message Filter</code> pour le type ``</li><li>Entrez <code>{&quot;form&quot;:{&quot;@name&quot;:&quot;ART Adherence Self-Reporting Tool&quot;}}</code> pour les critÃ¨res d&#x27;inclusion ``</li></ul><p>En savoir plus sur les triggers<a href="/documentation/build/triggers">ici</a>.</p><h3>CrÃ©er un job</h3><ul><li>Donnez-en un nom</li><li>SÃ©lectionnez le trigger que vous venez de crÃ©er</li><li>SÃ©lectionnez l&#x27;adaptateur <code>salesforce</code></li><li>SÃ©lectionnez le credential que vous venez de crÃ©er</li></ul><p>Et convertissez les instructions ci-dessus en &quot;opÃ©rations&quot; en utilisant l&#x27;aide en ligne fournie par l&#x27;adaptateur Salesforce :</p><pre><code class="language-js">// Utilisez upsert pour crÃ©er ou mettre Ã  jour un participant en fonction de son code de participant.
upsert(
  &#x27;Participant__c&#x27;,
  &#x27;Participant_Code__c&#x27;,
  fields(
    field(
      &#x27;Participant_Code__c&#x27;,
      dataValue(&#x27;form.participant_information.participant_id&#x27;)
    ),
    field(&#x27;Name__c&#x27;, dataValue(&#x27;form.participant_information.name&#x27;)),
    field(&#x27;Sex__c&#x27;, dataValue(&#x27;form.participant_information.gender&#x27;)),
    field(&#x27;CommCare_Case_ID__c&#x27;, dataValue(&#x27;form.case[@case_id]&#x27;))
  )
);

// Ensuite, insÃ©rez une visite en utilisant le code de visite.
upsert(
  &#x27;Visit__c&#x27;,
  &#x27;Visit_Code__c&#x27;,
  fields(
    field(&#x27;Visit_Code__c&#x27;, dataValue(&#x27;metadata.instanceID&#x27;)),
    field(&#x27;Date__c&#x27;, dataValue(&#x27;form.visit_information.visit_date&#x27;)),
    field(&#x27;Consented__c&#x27;, dataValue(&#x27;form.visit_information.consent_given&#x27;)),
    // Always set status to true
    field(&#x27;Test_Status__c&#x27;, true),
    //Et liÃ© cette visite au participant que nous venons de crÃ©er par son &quot;code&quot;
    relationship(
      &#x27;Participant__r&#x27;,
      &#x27;Participant_Code__c&#x27;,
      dataValue(&#x27;form.participant_information.participant_id&#x27;)
    )
  )
);

// Et enfin pour CHAQUE mÃ©diation rÃ©pertoriÃ©e, crÃ©ez un dossier de mÃ©dicament avec un statut
each(
  merge(
    dataPath(&#x27;form.participant_information.current_medications[*]&#x27;),
    fields(
      field(&#x27;pID&#x27;, dataValue(&#x27;form.participant_information.participant_id&#x27;))
    )
  ),
  upsert(
    &#x27;Medication_Tx__c&#x27;,
    &#x27;Medication_Tx_ID__c&#x27;,
    fields(
      field(Medication_Tx_ID__c, state =&gt; {
        // Ici, Ã  l&#x27;intÃ©rieur du tableau des mÃ©dicaments, nous avons &quot;scoped&quot; l&#x27;Ã©tat de sorte que
        // state.data, pour chaque Ã©lÃ©ment du tableau, ressemble Ã  ceci : 
        // { pID: 007, name: &quot;sasstra-zenica&quot;, active: false }

        // Nous concatÃ©nerons l&#x27;identifiant du participant avec le nom du mÃ©dicament.
        return state.data.pID + state.data.name;
      }),
      field(&#x27;Generic_Name__c&#x27;, dataValue(&#x27;name&#x27;)),
      field(&#x27;Status__c&#x27;, dataValue(&#x27;status&#x27;)),
      relationship(&#x27;Participant__r&#x27;, &#x27;Participant_Code__c&#x27;, dataValue(&#x27;pID&#x27;))
    )
  )
);
</code></pre><p>Maintenant, chaque fois que cette tÃ¢che est exÃ©cutÃ©e (ce qui est Ã  chaque fois qu&#x27;un formulaire CommCare est soumis) votre travailleur OpenFn mettra Ã  jour un <code>Participant</code>, upsert une <code>Visite</code>et exploite une liste complÃ¨te de <code>MÃ©dicaments</code> en Salesforce.</p><h2>Et ensuite</h2><p>Eh bien, dans notre petit exemple, vous allumeriez la tÃ¢che &quot;allumÃ©e&quot; (en la mettant sur les messages entrants de CommCare) et laissez-la fonctionner. Chaque fois qu&#x27;il y avait un Ã©chec (peut-Ãªtre votre administrateur Salesforce a ajoutÃ© un nouveau champ requis sur l&#x27;objet personnalisÃ©<code>MÃ©dication</code>) vous recevrez un e-mail et vous devrez revenir Ã  OpenFn pour mettre Ã  jour votre job, y compris ce nouveau champ.</p><p>Si vous Ãªtes en train de concevoir vos systÃ¨mes CommCare et Salesforce en ce moment, ce va-et-vient sera assez courant. Gardez Ã  l&#x27;esprit que vous voulez autant de simplicitÃ© que possible dans ces systÃ¨mes utilisateurs finaux... eh bien parce que les <em>humains</em> interagissent avec eux tous les jours !</p><p>Tant que vos processus sont bien dÃ©finis, OpenFn peut gÃ©rer un peu de complexitÃ© (nettoyage de donnÃ©es, transformation, flux logiques complexes, etc.). mais vous ne devriez jamais faire de sacrifices Ã  l&#x27;expÃ©rience utilisateur dans CommCare et Salesforceâc&#x27;est un moyen rapide de perdre l&#x27;adoption.</p><p>Donc, idÃ©alement, vous avez conÃ§u vos flux de travail dans CommCare et Salesforce pour rendre vos utilisateurs heureux et obtenir les informations dont ils ont besoin pour bien faire leur travail et <em>puis</em> vous revenez sur OpenFn et Ã©noncez nos instructions de saisie de donnÃ©es comme nous l&#x27;avons fait ci-dessus.</p><h2>Une derniÃ¨re idÃ©e</h2><p>Les deux ressources les plus importantes que vous avez Ã  votre disposition si vous dÃ©finissez tout cela seul sont :</p><ol><li>ce site (docs.openfn.org), et</li><li>le <a href="https://community.openfn.org">forum </a> (community.openfn.org)</li></ol><p>Read through the <a href="/documentation/getting-started/so-you-want-to-integrate">&quot;What is an integration&quot;</a>, <a href="/documentation/getting-started/terminology">&quot;OpenFn Concepts&quot;</a>, and <a href="/documentation/build/jobs">&quot;Build&quot;</a> sections if you&#x27;re a thorough, background-first kind of learner. Si vous avez envie d&#x27;extraits et d&#x27;exemples de code de travail, accÃ©dez directement Ã  la<a href="/library">Job Library</a> pour voir comment les autres utilisateurs d&#x27;OpenFn crÃ©ent leurs jobs.</p><p>Dans tous les cas, tenez la communautÃ© au courant de vos progrÃ¨s dans le forum. Vous trouverez beaucoup de gens serviables prÃªts Ã  vous aider dans votre parcours d&#x27;intÃ©gration.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Synchroniser comme vous le voulez : Penser Ã  travers le systÃ¨me de protocoles de Â« Synchronisation Â»]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/02/17/syncing-options</link>
            <guid>Synchroniser comme vous le voulez : Penser Ã  travers le systÃ¨me de protocoles de Â« Synchronisation Â»</guid>
            <pubDate>Wed, 17 Feb 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[La Â« synchronisation Â» permet Ã  deux systÃ¨mes de se retrouver dans un Ã©tat d'harmonie. Cela peut signifier de tenir une liste de patients Ã  jour, bien que des modifications puissent Ãªtre apportÃ©es dans l'un ou l'autre systÃ¨me. Cela peut signifier copier des transactions d'un systÃ¨me Ã  un autre sur une base de nocturne. Cela peut signifier beaucoup de choses, mais le concept clÃ© est que lorsque vous synchronisez les systÃ¨mes, vous leur demandez de travailler ensemble en mÃªme temps en respectant lâindÃ©pendance des deux systÃ¨mes logiciels.]]></description>
            <content:encoded><![CDATA[<p>La Â« synchronisation Â» permet Ã  deux systÃ¨mes de se retrouver dans un Ã©tat d&#x27;harmonie. Cela peut signifier de tenir une liste de patients Ã  jour, bien que des modifications puissent Ãªtre apportÃ©es dans l&#x27;un ou l&#x27;autre systÃ¨me. Cela peut signifier copier des transactions d&#x27;un systÃ¨me Ã  un autre sur une base de nocturne. Cela peut signifier beaucoup de choses, mais le concept clÃ© est que lorsque vous synchronisez les systÃ¨mes, vous leur demandez de travailler ensemble en mÃªme temps en respectant lâindÃ©pendance des deux systÃ¨mes logiciels.</p><p>Dans ce message, nous discuterons de deux protocoles de synchronisation diffÃ©rents Ã  considÃ©rer lors de la conception de votre intÃ©gration de donnÃ©es. Cela inclus :</p><ol><li><strong>Synchronisations en temps rÃ©el ou basÃ©es sur des Ã©vÃ©nements</strong></li><li><strong>Synchronisations planifiÃ©es</strong></li></ol><p>Pour un projet rÃ©cent au <a href="https://docs.openfn.org/blog/2021/02/09/interoperability_for_case_referrals">au Cambodge</a>, OpenFn est utilisÃ© par les travailleurs sociaux pour automatiser les renvois de cas entre les systÃ¨mes de logiciels Primero et OSCaR. Dans la phase de conception, nous avons Ã©valuÃ© ces deux options de synchronisation. Ci-dessous, nous allons expliquer ce que chacun est, les diffÃ©rences et quelle option nous avons choisi Ã  la fin.</p><h3>Synchronisations en temps rÃ©el/Ã©vÃ©nement</h3><p>La premiÃ¨re option envisagÃ©e pour cette intÃ©gration Ã©tait la synchronisation en temps rÃ©el/Ã©vÃ©nement. Ce type de synchronisation est dÃ©clenchÃ© chaque fois qu&#x27;un Ã©vÃ©nement spÃ©cifique a lieu dans un systÃ¨me. Avec cette approche, chaque fois qu&#x27;un cas est rÃ©fÃ©rencÃ© en Primero (via l&#x27;interface de l&#x27;utilisateur, c&#x27;est Ã  dire lorsqu&#x27;un vrai travailleur de cas clique sur le bouton Â« rÃ©fÃ©rer Â») OpenFn reÃ§oit un petit chargement avec les donnÃ©es de cas et la transmet Ã  OSCaR et vice versa.</p><p><img src="/img/syncs1.png" alt="Synchronisation en temps rÃ©el"/></p><p>En raison de leur nature instantanÃ©e, les synchronisations en temps rÃ©el/Ã©vÃ©nement sont idÃ©ales pour les intÃ©grations qui impliquent des paiements mobiles ou des SMS aux destinataires. Vraiment, tout ce qui doit Ãªtre fait Â« maintenant Â» ! En outre, en fonction de vos volumes de donnÃ©es les synchronisations en temps rÃ©el peuvent vous faire Ã©conomiser de l&#x27;argent parce que vous utilisez uniquement des ressources lorsque des Ã©vÃ©nements spÃ©cifiques ont lieu. Par exemple, dans l&#x27;exemple ci-dessus, une exÃ©cution est dÃ©clenchÃ©e par une recommandation, donc s&#x27;il n&#x27;y a que 10 rÃ©fÃ©rences/mois de cas, vous ne traiterez que 10 exÃ©cutions par mois.</p><p>Ce type de synchronisation est gÃ©nial car il est instantanÃ©, gÃ©nÃ©ralement simple Ã  configurer, ne nÃ©cessite pas de Â« gestion de l&#x27;Ã©tat Â» sur OpenFn, et permet le retraitement des Ã©vÃ©nements individuels. Il y a cependant des inconvÃ©nients.</p><p>Par exemple, que se passe-t-il si l&#x27;application qui envoie des notifications Ã  OpenFn ne parvient pas Ã  envoyer ? Que se passe-t-il si AWS ou GCP ne marche plus, prenant la moitiÃ© de l&#x27;internet avec ? Si Primero Â« pense Â» qu&#x27;il a envoyÃ© la rÃ©fÃ©rence, OpenFn ne la reÃ§oit jamais, que le cas pourrait ne pas Ãªtre rÃ©fÃ©rencÃ© Ã  Oscar !</p><h3>Planifier une synchronisation</h3><p><img src="/img/syncs2.png" alt="Synchronisation planifiÃ©e_dÃ©pendante"/></p><p>La deuxiÃ¨me option considÃ©rÃ©e, une synchronisation bidirectionnelle dÃ©pendante de la planification , rÃ©sout le problÃ¨me discutÃ© ci-dessus. Sur une base planifiÃ©e (toutes les 5 minutes, par exemple) OpenFn vÃ©rifie avec Primero et Oscar pour voir si les recommandations de cas doivent Ãªtre transmises entre les deux systÃ¨mes, puis renvoie le cas si nÃ©cessaire. Dans le cas improbable oÃ¹ l&#x27;un des systÃ¨mes logiciels impliquÃ©s planterait, la stabilitÃ© fournie par la synchronisation bidirectionnelle signifie que toutes les donnÃ©es sont prÃ©servÃ©es et Ã©ventuellement le rendent Ã  sa destination en toute sÃ©curitÃ©.</p><p>Le principal inconvÃ©nient ici est la complexitÃ©. Nous avons dÃ» utiliser 4 jobs au lieu de 2, et le job qui est responsable de Â« tirer Â» les donnÃ©es qui ont Ã©tÃ© mises Ã  jour depuis le moment de la derniÃ¨re synchronisation rÃ©ussie doit garder Â« l&#x27;Ã©tat Â» â ou une sorte de mÃ©moire fonctionnelle de ce qu&#x27;il fait dans le passÃ©. En tirant des cas modifiÃ©s de Primero, OpenFn ne tire maintenant que les cas modifiÃ©s sur ou aprÃ¨s <code>AAAA-MM-JJ HH:MM:SS</code> oÃ¹ <code>AAAA-MM-JJ HH:SS</code> est l&#x27;heure du dernier succÃ¨s, synchronisation aller-retour. OpenFn a des fonctionnalitÃ©s intÃ©grÃ©es pour gÃ©rer exactement cette exigence, mais tous les systÃ¨mes ETL ne le font pas et câest une implication de conception qui doit Ãªtre prise en considÃ©ration.</p><p>En fin de compte, pour le projet au Cambodge, nous avons dÃ©cidÃ© que cette option de synchronisation est le bon choix car l&#x27;intÃ©gritÃ© des donnÃ©es est plus importante que la vitesse de ce flux de donnÃ©es. C&#x27;est un point crucial Ã  comprendre : les organisations opÃ©rant au Cambodge ont dÃ©cidÃ© que pour ce cas d&#x27;utilisation particulier, Ãªtre en mesure de garantir Ã©ventuellement la synchronisation Ã©tait plus importante que d&#x27;avoir une synchronisation en temps rÃ©el.</p><h3>Les deux options de synchronisation ont leurs Avantages et InconvÃ©nients</h3><p>Les deux options ont dÃ©finitivement leur cas d&#x27;utilisation et la polyvalence de la plateforme OpenFn permet Ã  votre Ã©quipe de dÃ©cider quel type de synchronisation convient Ã  votre projet.</p><p>Comme toujours, nous sommes lÃ  pour vous aider Ã  rÃ©pondre Ã  toutes les questions que vous avez en ce qui concerne l&#x27;option de synchronisation qui a le plus de sens pour votre projet.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nos serveurs ou les vÃ´tres : Penser Ã  travers les options de dÃ©ploiement]]></title>
            <link>https://docs.openfn.org/fr/articles/2021/02/03/hosted-or-local-deployment</link>
            <guid>Nos serveurs ou les vÃ´tres : Penser Ã  travers les options de dÃ©ploiement</guid>
            <pubDate>Wed, 03 Feb 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Zandile est gestionnaire de programme chez une iONG et elle a besoin d'utiliser CommCare, DHIS2, et OpenFn pour un prochain projet de santÃ© publique. Elle comprend que les trois logiciels peuvent Ãªtre dÃ©ployÃ©s localement, ou accÃ©dÃ©s en tant que SaaS (logiciel en tant que service).]]></description>
            <content:encoded><![CDATA[<p>Zandile est gestionnaire de programme chez une iONG et elle a besoin d&#x27;utiliser CommCare, DHIS2, et OpenFn pour un prochain projet de santÃ© publique. Elle comprend que les trois logiciels peuvent Ãªtre dÃ©ployÃ©s localement, ou accÃ©dÃ©s en tant que SaaS (logiciel en tant que service).</p><p>Essentiellement, Zandile doit dÃ©cider si elle souhaite exÃ©cuter le logiciel sur les serveurs de quelqu&#x27;un d&#x27;autre (SaaS), ou sur les propres serveurs de son organisation (dÃ©ployÃ©s localement). Avant de prendre une dÃ©cision, elle dÃ©crit les considÃ©rations de base et non techniques pour les deux options.</p><h2>Qu&#x27;est-ce que le SaaS ?</h2><p>SaaS est un logiciel qui est installÃ© et <em>fonctionne</em> sur des ordinateurs gÃ©rÃ©s par des professionnels du logiciel plutÃ´t que sur votre propre ordinateur. Bien que ces ordinateurs puissent Ãªtre n&#x27;importe oÃ¹ dans le monde, vous y accÃ©dez gÃ©nÃ©ralement et <em>utilisez</em> ce logiciel via Internet.</p><h3>Quelques avantages de SaaS</h3><p>Avec SaaS, le fournisseur de logiciels est responsable des dÃ©penses de gestion et de surveillance de tous les composants techniques et problÃ¨mes associÃ©s au logiciel. Cela signifie que l&#x27;iONG de Zandile ne sera pas responsable de la mise Ã  jour du logiciel pour assurer la conformitÃ© avec les nouvelles rÃ©glementations de sÃ©curitÃ©, maintien des serveurs, sauvegarde des donnÃ©es, la gestion des approvisionnements de puissance ininterrompue, et de fournir une Ã©quipe de gardes de sÃ©curitÃ© physiques pour protÃ©ger les ordinateurs et donnÃ©es qui s&#x27;y trouvent contre le vol physique.</p><p>Parcourir la route SaaS est souvent plus rapide et plus sÃ©curisÃ©, parce que vous n&#x27;avez pas besoin de dÃ©velopper une expertise dans Â« DevOps Â» ou d&#x27;engager des spÃ©cialistes de l&#x27;informatique et de la sÃ©curitÃ© physique. Cette option fournit Ã©galement la plus grande flexibilitÃ© &amp; Ã©volutivitÃ©- car le fournisseur de SaaS est en mesure de fournir plus ou moins de puissance informatique, de stockage et de bande passante, juste quand cela est nÃ©cessaire.</p><p>Les coÃ»ts d&#x27;installation Ã©tant moins Ã©levÃ©s (vous n&#x27;avez pas Ã  crÃ©er votre propre entreprise de fourniture de logiciels), ce choix est souvent plus Ã©conomique pour beaucoup, mÃªme si le SaaS s&#x27;accompagne toujours d&#x27;une sorte de frais permanents - un prix mensuel ou annuel versÃ© au fournisseur pour compenser le temps et l&#x27;argent qu&#x27;il consacre Ã  assurer le bon fonctionnement de votre logiciel.</p><h2>Qu&#x27;est-ce que le dÃ©ploiement local ?</h2><p>Contrairement Ã  l&#x27;option SaaS, le dÃ©ploiement local signifie installer et exÃ©cuter un logiciel sur vos propres ordinateurs, gÃ©nÃ©ralement sur les serveurs de votre organisation.</p><h3>Quelques avantages du dÃ©ploiement local</h3><p>Si un fournisseur SaaS n&#x27;offre pas d&#x27;hÃ©bergement dans votre pays et que votre gouvernement ne permet pas que vos donnÃ©es soient hÃ©bergÃ©es sur des serveurs Ã©trangers (c.-Ã -d. vous n&#x27;Ãªtes pas autorisÃ© Ã  utiliser Gmail, WhatsApp ou Facebook pour communiquer des informations sensibles) puis le dÃ©ploiement local vous permet d&#x27;utiliser des outils tels que CommCare, DHIS2, et OpenFn tout en adhÃ©rant aux rÃ¨gles de souverainetÃ© des donnÃ©es gouvernementales.</p><p>Le dÃ©ploiement local fournit Ã©galement Ã  votre organisation la propriÃ©tÃ© complÃ¨te du systÃ¨me de bout en bout. Votre Ã©quipe informatique sera personnellement responsable de s&#x27;assurer que le logiciel fonctionne, est maintenu, est sÃ©curisÃ©, etc. Si votre organisation n&#x27;a pas dÃ©jÃ  une Ã©quipe informatique en place, alors cela peut devenir un casse-tÃªte onÃ©reux, mais pour une grande organisation avec une expÃ©rience informatique intÃ©grÃ©e, le dÃ©ploiement local a souvent un sens.</p><p>En fin de compte, Ãªtre en mesure d&#x27;embaucher et de licencier directement les personnes qui sont responsables du bon fonctionnement de votre logiciel peut Ãªtre trÃ¨s utile. Cela signifie que vous avez l&#x27;entiÃ¨re responsabilitÃ© de la rÃ©ussite ou non de la solution.</p><p>Si vous avez dÃ©jÃ  mis en place les Ã©quipes (sÃ©curitÃ©, DevOps, etc.) alors cette option peut Ãªtre plus Ã©conomique Ã  long terme. Avec une trÃ¨s bonne Ã©quipe DevOps maintenir un logiciel supplÃ©mentaire pourrait seulement correspondre Ã  20 % du salaire d&#x27;un employÃ© Ã  temps plein. Pour vos gardes de sÃ©curitÃ©, si le logiciel est installÃ© dans le mÃªme emplacement physique, il est possible que vos coÃ»ts n&#x27;augmentent pas du tout. Tant qu&#x27;il y aura des coÃ»ts d&#x27;installation trÃ¨s Ã©levÃ©s, au fil du temps, vous pouvez rÃ©aliser des Ã©conomies de coÃ»ts en lanÃ§ant une unitÃ© de livraison efficace de logiciels au sein de votre organisation qui se concentre sur un certain nombre de projets.</p><h2>DÃ©cision de Zandile</h2><p>Dans ce cas fictif, la rÃ©sidence des donnÃ©es est une prÃ©occupation - ses donnÃ©es sont sensibles ou contiennent des PII - et CommCare, DHIS2 et OpenFn ne fournissent pas d&#x27;hÃ©bergement dans le pays oÃ¹ elle est situÃ©e. L&#x27;organisation de Zandile a une grande Ã©quipe informatique expÃ©rimentÃ©e qui gÃ¨re des projets logiciels Ã  haute disponibilitÃ© depuis de nombreuses annÃ©es... ce sont des professionnels. Bien qu&#x27;ils anticipent que les coÃ»ts d&#x27;installation seront assez Ã©levÃ©s (autour de 60 000 $ et plusieurs mois pour cet ensemble de dÃ©ploiements), ils prÃ©voient d&#x27;utiliser ce logiciel pour les 5 prochaines annÃ©es et ont dÃ©terminÃ© qu&#x27;ils rÃ©cupÃ©reront une part significative de ce coÃ»t d&#x27;installation en n&#x27;ayant pas Ã  payer de frais de licence pour SaaS. Ils vont avec le dÃ©ploiement local.</p><h2>Quelle option de dÃ©ploiement est la meilleure pour votre organisation ?</h2><p>La rÃ©ponse est : Â« cela dÃ©pend Â», mais si votre organisation n&#x27;a jamais gÃ©rÃ© les dÃ©ploiements de logiciels locaux, nous vous recommandons de suivre l&#x27;approche SaaS. Les systÃ¨mes SaaS, comme l&#x27;offre OpenFn et CommCare seront simplement plus sÃ»rs, plus stables et plus Ã©volutives pour un coÃ»t raisonnable.</p><p>Avant tout, vous pouvez toujours commencer avec SaaS (la plupart des outils offrent mÃªme un niveau gratuit) et ensuite dÃ©cider d&#x27;investir plus tard dans les gros coÃ»ts de dÃ©marrage d&#x27;un dÃ©ploiement local si les frais de licence pour le SaaS sont assez Ã©levÃ©s afin de rendre le dÃ©ploiement local plus Ã©conomique Ã  long terme. AprÃ¨s quelques mois ou annÃ©es avec le SaaS, vous serez probablement mieux placÃ© pour savoir si vous voulez continuer Ã  utiliser le logiciel pendant 5 Ã  10 ans.</p><p>Si vous avez besoin d&#x27;aide pour votre dÃ©cision, n&#x27;hÃ©sitez pas Ã  contacter OpenFn.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Instances d'entitÃ©s suivies dans DHIS2]]></title>
            <link>https://docs.openfn.org/fr/articles/2020/12/09/upsert-in-dhis2</link>
            <guid>Instances d'entitÃ©s suivies dans DHIS2</guid>
            <pubDate>Wed, 09 Dec 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[tl;dr il est composÃ© d'API existantes et d'un peu de logique ð¤. Maintenant vous pouvez mettre Ã  jour des instances d'entitÃ©s suivies vers DHIS2 ð â.]]></description>
            <content:encoded><![CDATA[<p>tl;dr: Beaucoup de nos utilisateurs veulent mettre Ã  jour les instances d&#x27;entitÃ©s suivies dans dhis2, mais les upserts ne sont pas pris en charge par un point de terminaison standard de l&#x27;API DHIS2. Nous en avons construit un dans notre adaptateur dhis2 : il est composÃ© d&#x27;API existantes et d&#x27;un peu de logique ð¤. Maintenant vous pouvez <code>mettre Ã  jour</code> des instances d&#x27;entitÃ©s suivies vers DHIS2 ð â.</p><h2>Un peu plus...</h2><p>Un Â« UPSERT Â» est un mot-valise des fonctions de base de donnÃ©es MISE Ã JOUR et INSÃRER. Il est essentiel de manipuler correctement les upserts lors de l&#x27;intÃ©gration des systÃ¨mes. Depuis la version 35 de l&#x27;API, DHIS2 ne permet pas Ã  un administrateur de mettre Ã  jour des instances d&#x27;entitÃ©s suivies (Â« TEI Â»). <a href="https://github.com/chaiwa-berian">Chaiwa Berian</a> d&#x27;OpenFn a trouvÃ© une solution qui met en Ã©vidence l&#x27;utilitÃ© des fonctions d&#x27;aide dans notre adaptateur dhis2. En combinant diffÃ©rentes API DHIS2 via une fonction upsertTEI en OpenFn, les utilisateurs de DHIS2 peuvent maintenant effectuer des upserts Ã  des TEI.</p><p>Si vous Ãªtes curieux, consultez son implÃ©mentation <a href="https://github.com/OpenFn/language-dhis2/blob/master/src/Adaptor.js#L347">ici</a>.</p><h2>Et bien plus encore !</h2><p>Une instance d&#x27;entitÃ© suivie dans DHIS2 est un type d&#x27;entitÃ© qui peut Ãªtre suivi Ã  travers le systÃ¨me. Il peut s&#x27;agir d&#x27;une personne Ã  un produit comme un mÃ©dicament. Si je suis un administrateur de base de donnÃ©es qui gÃ¨re deux systÃ¨mes diffÃ©rents connectÃ©s l&#x27;un Ã  l&#x27;autre, appelons-les Â« SystÃ¨me A Â» et Â« SystÃ¨me B Â», j&#x27;aimerais que toutes les mises Ã  jour apportÃ©es Ã  la TEI d&#x27;un utilisateur nommÃ© Â« Jim Smith Â» dans le SystÃ¨me A apparaissent Ã©galement dans l&#x27;enregistrement de Jim dans le SystÃ¨me B. Avant l&#x27;apparition des upserts, il Ã©tait difficile de le faire en raison de la possibilitÃ© de crÃ©er des enregistrements en double. Comme un upsert fait en simultanÃ©ment les MISES Ã JOUR et les INSERTIONS, cela Ã©vite les doublons.</p><p>Les upserts sont importants et utiles car ils rÃ©duisent le risque de dupliquer la saisie de donnÃ©es et permettent Ã©galement que les transactions soient rÃ©essayÃ©es Ã  plusieurs reprises pour garantir l&#x27;intÃ©gritÃ© des donnÃ©es. Cette derniÃ¨re partie est appelÃ©e Â« idempotency Â» et vous pouvez en lire plus Ã  ce sujet <a href="https://blog.openfn.org/allow-yourself-to-fail/">ici</a>.</p><p>NâhÃ©sitez pas Ã  contacter lâun des spÃ©cialistes en implÃ©mentation dâOpenFn si vous souhaitez en savoir plus.</p><p>â Taylor</p><p><a href="https://openfn.org/signup">Inscrivez-vous</a>{: .btn} pour mettre en place un projet aujourd&#x27;hui, absolument gratuit.</p><p><a href="mailto:admin@openfn.org">Contactez-nous</a>{: .btn} pour plus d&#x27;informations.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ActualitÃ©s du produit : ContrÃ´le amÃ©liorÃ© des jobs planifiÃ©s/pÃ©riodiques]]></title>
            <link>https://docs.openfn.org/fr/articles/2020/07/14/cron-is-better-than-a-timer</link>
            <guid>ActualitÃ©s du produit : ContrÃ´le amÃ©liorÃ© des jobs planifiÃ©s/pÃ©riodiques</guid>
            <pubDate>Tue, 14 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Bonjour Ã  tous, Voici une brÃ¨ve prÃ©sentation de l'Ã©quipe chargÃ©e des produits Ã  OpenFn â nous avons fait une mise Ã  jour majeure de la faÃ§on dont les jobs en temps et en pÃ©riode fonctionnent.]]></description>
            <content:encoded><![CDATA[<p>Bonjour Ã  tous, Voici une brÃ¨ve prÃ©sentation de l&#x27;Ã©quipe chargÃ©e des produits Ã  <a href="https://openfn.org/">OpenFn</a> â nous avons fait une mise Ã  jour majeure de la faÃ§on dont les jobs en temps et en pÃ©riode fonctionnent.</p><p>Dans le passÃ©, si vous n&#x27;utilisiez pas OpenFn pour gÃ©nÃ©rer une automatisation en temps rÃ©el (ou Â« basÃ© sur des Ã©vÃ©nementsÂ»), vous devrez configurer un Â« dÃ©clencheur d&#x27;intervalle Â». Comme la photo ci-dessus, il s&#x27;agissait essentiellement d&#x27;un sablier. DÃ©finissez votre dÃ©clencheur Ã  <code>10</code> secondes et votre job rÃ©cupÃ¨re les donnÃ©es de DHIS2, un ensemble de donnÃ©es rÃ©gionales sur la santÃ© publique, ou quoi que ce soit, nettoie, transforme et charge ensuite ces donnÃ©es dans un autre systÃ¨me.</p><p>Dans l&#x27;ensemble, cela a permis de faire le travail au cours des cinq derniÃ¨res annÃ©es, mais comme notre ONG et nos clients gouvernementaux ont rencontrÃ© des exigences de plus en plus spÃ©cifiques sur non seulement Ã  quelle frÃ©quence mais <em>quand</em> un job important est exÃ©cutÃ©, nous avons commencÃ© Ã  trouver nous-mÃªmes en crÃ©ant de petites personnalisations pour eux sur une base unique. Nous sommes ravis d&#x27;annoncer cela Ã  partir de <code>v1.75</code> (publiÃ© aujourd&#x27;hui), vous pouvez maintenant planifier les jobs Ã  exÃ©cuter en fonction des expressions <code>cron</code> , vous donnant un contrÃ´le incroyable sur le moment oÃ¹ vos tÃ¢ches sont exÃ©cutÃ©es.</p><h3>La planification est meilleure que le minutage.</h3><p>En utilisant <code>cron</code>, vous pouvez choisir d&#x27;exÃ©cuter un job chaque minute en tapant <code>* * * * * * *</code>.</p><p>Ou peut-Ãªtre avez-vous une synchronisation par lots que vous voulez effectuer pendant que vos utilisateurs dorment â pourquoi ne pas la lancer tous les soirs Ã  23 h avec <code>23 * * *</code>.</p><p>Que se passe-t-il si vous devez soumettre des demandes pour l&#x27;inventaire mÃ©dical seulement pendant l&#x27;apparition de la saison de la grippe ? Tapez simplement <code>0 0 1 2-4 *</code> et votre job sera exÃ©cutÃ© Ã  minuit le 1er du mois, de fÃ©vrier Ã  avril.</p><p>Vous pouvez toujours exÃ©cuter des jobs en un clic et crÃ©er des minuteurs avec des expressions comme <code>*/10 * * * *</code> pour Â« toutes les 10 minutes Â», mais la planification avec cron offre aux utilisateurs OpenFn.org utilisateurs beaucoup plus de contrÃ´le sur la maniÃ¨re dont ils gÃ¨rent leurs organisations. (Et c&#x27;est une bonne chose.)</p><p>Si vous souhaitez apprendre en le faisant mais que vous n&#x27;avez pas encore de compte OpenFn, <a href="https://www.openfn.org/signup">inscrivez vous gratuitement</a> ou amusez-vous avec les expressions cron Ã  <a href="https://crontab.guru" target="_blank">crontab. uru</a>, un site brillant pour construire rapidement des expressions cron complexes.</p><p>C&#x27;est tout ce qui concerne le produit pour aujourd&#x27;hui. Ã bientÃ´t.</p><p>Taylor</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Vous autoriser Ã  Ã©chouer]]></title>
            <link>https://docs.openfn.org/fr/articles/2020/07/02/allow-yourself-to-fail</link>
            <guid>Vous autoriser Ã  Ã©chouer</guid>
            <pubDate>Thu, 02 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Bonjour Ã  tous, c'est un message trÃ¨s court avec un message simple : conception pour l'Ã©chec. MÃªme si vous n'avez jamais entendu parler de MSSQL (ou Azure, ou Microsoft ? , je veux parler pendant un instant de l'importance des upserts et d'un drÃ´le terme de dÃ©veloppeur appelÃ© Â« idempotence Â».]]></description>
            <content:encoded><![CDATA[<p>Bonjour Ã  tous, c&#x27;est un message trÃ¨s court avec un message simple : conception pour l&#x27;Ã©chec. MÃªme si vous n&#x27;avez jamais entendu parler de <a href="https://www.microsoft.com/en-us/sql-server">MSSQL</a> (ou <a href="https://azure.microsoft.com/en-us/">Azure</a>, ou Microsoft ? , je veux parler pendant un instant de l&#x27;importance des upserts et d&#x27;un drÃ´le terme de dÃ©veloppeur appelÃ© Â« idempotence Â».</p><p>Nous venons d&#x27;Ã©largir notre <a href="https://github.com/OpenFn/language-mssql">adaptateur langue-mssql</a> avec une fonction personnalisÃ©e qui permet les upserts (un<code>upsert</code> consiste Ã  insÃ©rer un nouvel enregistrement ou mettre Ã  jour un enregistrement existant en fonction d&#x27;un identifiant). Auparavant, vous deviez Ã©crire quelque chose de fastidieux comme :</p><pre><code class="language-js">sql({
  demande: `MERGE my_table AS [Target]
          UTILISANT (SELECT &#x27;8675309&#x27; AS some_unique_id, &#x27;writing_blog_posts&#x27; AS skill) COMME [Source]
          SUR [Target].some_unique_id = [Source].some_unique_id
          SI VRAI
            MISE Ã JOUR [Target].some_unique_id=8675309, [Target].skill=&#x27;writing_blog_posts&#x27;
          SI FAUX
            AJOUT (some_unique_id, skill) VALEURS ([Source].some_unique_id, [Source].skill);`,
});
</code></pre><p>alors que maintenant, vous pouvez simplement Ã©crire :</p><pre><code class="language-js">upsert(&#x27;my_table&#x27;, &#x27;some_unique_id&#x27;, {
  some_unique_id: 8675309,
  skill: &#x27;Ã©crire des articles de blogs&#x27;,
});
</code></pre><p>Pour qu&#x27;une opÃ©ration soit idÃ©mpotente, cela signifie qu&#x27;elle peut Ãªtre rÃ©pÃ©tÃ©e encore et encore sans produire un rÃ©sultat involontaire. Ceci est SUPER important pour crÃ©er des intÃ©grations (<strong>S</strong>Ã©curisÃ©, <strong>S</strong>table et <strong>S</strong>calque â plus sur ceci <a href="https://openfn.org/trust">ici</a>) S3 car ceci vous offre deux cartes Â« sortir de prison Â».</p><ol><li><p>Si une application de destination Ã©choue, si une connexion expire, ou si (pour une raison quelconque) vous n&#x27;Ãªtes pas sÃ»r que le <code>job</code> a Ã©tÃ© terminÃ© (par exemple... effectuer un paiement Ã  CHW) alors une opÃ©ration idÃ©mpotente peut Ãªtre ESSAYÃE DE NOUVEAU sans craindre de faire un double paiement.</p></li><li><p>Si vous apportez des changements Ã  la faÃ§on dont votre <code>job</code> fonctionne, apportez quelques modifications Ã  l&#x27;un de vos systÃ¨mes de destination, ou simplement parce que vous voulez Ãªtre <em>extrÃªmement sÃ»r</em> que toutes les donnÃ©es d&#x27;un sondage de 9 mois ont Ã©tÃ© intÃ©grÃ©es dans le systÃ¨me national de rapport sanitaire, vous pouvez <em>REFAIRE LE PROCESSUS</em> de chaque message qui arrive via OpenFn en un clic, sans avoir Ã  se soucier de doublons.</p></li></ol><p>Alors, quand les clients me laissent m&#x27;occuper de leurs jobs, je <em>recommande</em> toujours de concevoir en fonction de l&#x27;idempotence. C&#x27;est logique lorsque vous passez des messages entre deux systÃ¨mes diffÃ©rents qui sont vouÃ©s Ã  Ã©voluer, se dÃ©connecter, passer une mauvaise journÃ©e, etc</p><p>â Taylor</p><p><a href="https://openfn.org/signup">Inscrivez-vous</a>{: .btn} pour mettre en place un projet aujourd&#x27;hui, absolument gratuit.</p><p><a href="mailto:admin@openfn.org">Contactez-nous</a>{: .btn} pour plus d&#x27;informations.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Automatiser ou ne pas automatiser ? Posez-vous ces 3 Questions.]]></title>
            <link>https://docs.openfn.org/fr/articles/2020/06/24/three-questions-to-ask</link>
            <guid>Automatiser ou ne pas automatiser ? Posez-vous ces 3 Questions.</guid>
            <pubDate>Wed, 24 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[L'automatisation peut faire gagner du temps, dÃ©bloquer des ressources essentielles et mettre Ã  l'Ã©chelleâmais nÃ©cessite gÃ©nÃ©ralement un investissement. Vous vous demandez si vous devriez automatiser vos processus ? Posez-vous ces 3 Questions.]]></description>
            <content:encoded><![CDATA[<p>L&#x27;automatisation peut faire gagner du temps, dÃ©bloquer des ressources essentielles et mettre Ã  l&#x27;Ã©chelleâmais nÃ©cessite gÃ©nÃ©ralement un investissement. Vous vous demandez si vous devriez automatiser vos processus ? Posez-vous ces 3 Questions.</p><h3>Nos partenaires utilisent des solutions d&#x27;automatisation <a href="https://openfn.org">OpenFn</a> pour optimiser l&#x27;efficacitÃ© et mettre Ã  l&#x27;Ã©chelle leurs processus, en fournissant des systÃ¨mes numÃ©riques intÃ©grÃ©s qui fonctionnent mieux, plus rapidement et ensemble.</h3><p>Ã ce jour, nous avons travaillÃ© avec 43 organisations du secteur social qui opÃ¨rent dans des secteurs : santÃ©, Ã©ducation, agriculture, moyens de subsistance et interventions d&#x27;urgence. Au cours des 6 derniÃ¨res annÃ©es, OpenFn a Ã©tÃ© implÃ©mentÃ© dans le monde entier pour une large gamme de cas d&#x27;utilisation, y compris la construction de systÃ¨mes de surveillance de donnÃ©es en temps rÃ©el, rationalisation des pipelines de nettoyage de donnÃ©es, Ã©changer en toute sÃ©curitÃ© des informations sensibles, et automatiser les processus de routine comme le chargement des rÃ©sultats de l&#x27;indicateur, l&#x27;envoi des alertes SMS/e-mail, effectuer des paiements mobiles, <a href="https://openfn.org/solutions">et plus</a>.</p><p>En connectant n&#x27;importe quelle application, OpenFn peut intÃ©grer et automatiser toutes les applications dans un Ã©cosystÃ¨me numÃ©rique. Cependant, une question que nous posons frÃ©quemment Ã  nos partenaires est la suivante :</p><h4>Juste parce que vous <em>pouvez</em> automatiser â<em>devriez-vous vous</em> ?</h4><p>Alors que l&#x27;intÃ©gration et l&#x27;automatisation ont le potentiel d&#x27;activer l&#x27;Ã©chelle et d&#x27;Ã©conomiser du temps et de l&#x27;argent (nous l&#x27;avons appris de nos <a href="https:openfn.org/clients">partenaires</a>), les solutions nÃ©cessitent des investissements pour les mettre en place et les maintenir. Ces coÃ»ts l&#x27;emportent parfois sur les gains d&#x27;efficacitÃ© attendus et les rÃ©sultats du service. Par consÃ©quent, lorsqu&#x27;on Ã©value le rapport coÃ»t-bÃ©nÃ©fice d&#x27;un investissement dans des solutions d&#x27;automatisation et d&#x27;intÃ©gration, Open Function Group pose gÃ©nÃ©ralement trois questions clÃ©s.</p><h4>1. SÃ©curitÃ© â Lâautomatisation limitera-t-elle lâexposition des donnÃ©es sensibles ?</h4><p>L&#x27;exposition de donnÃ©es sensibles peut-elle Ãªtre limitÃ©e en intÃ©grant des points de terminaison de l&#x27;API sÃ©curisÃ©e (plutÃ´t que de compter sur des Ãªtres humains pour interagir avec ces donnÃ©es, par exemple) ? Ou en automatisant un processus de nettoyage des donnÃ©es ?</p><h4>2. PrÃ©cision â L&#x27;automatisation augmentera-t-elle la prÃ©cision des donnÃ©es et rÃ©duira-t-elle les erreurs de saisie de donnÃ©es ?</h4><p>Le processus peut-il se dÃ©rouler de maniÃ¨re plus fiable en limitant l&#x27;opportunitÃ© d&#x27;une erreur humaine (dans l&#x27;automatisation de la manipulation des donnÃ©es ou simple travail algorithmique, par exemple) ?</p><h4>3. Vitesse â L&#x27;automatisation augmente-t-elle la vitesse de l&#x27;impact ?</h4><p>Est-ce que le processus peut Ãªtre fait plus rapidement via l&#x27;automatisation et est-il utile de le faire plus rapidement ? (La rÃ©ponse Ã  la premiÃ¨re partie est presque toujours oui, mais parfois il n&#x27;y a pas beaucoup de valeur gÃ©nÃ©rÃ©e en faisant quelque chose plus rapidement.)</p><h4>Si vous rÃ©pondez Â« oui Â» Ã  ces questions, il peut Ãªtre temps d&#x27;envisager d&#x27;automatiser les processus essentielles au sein de votre organisation.</h4><p>Les tÃ¢ches qui satisfont Ã  ces 3 critÃ¨res, prennent beaucoup de temps pour complÃ©ter ou sont trÃ¨s rÃ©pÃ©titives, et/ou impliquent le dÃ©placement de donnÃ©es entre les applications sont gÃ©nÃ©ralement d&#x27;excellents candidats Ã  l&#x27;automatisation.</p><p>Si vous rÃ©pondez Â« non Â», il ne vaut peut-Ãªtre pas la peine d&#x27;investir dans l&#x27;automatisation ... du moins pas encore. Ceci est particuliÃ¨rement vrai si ces processus sont encore en flux ou nÃ©cessitent une grande implication humaine pour achevÃ©s. Ceci dit, c&#x27;est peut-Ãªtre le moment d&#x27;affiner vos flux de travail existants de rÃ©flÃ©chir Ã  la maniÃ¨re dont vos processus pourraient changer Ã  l&#x27;Ã©chelle et d&#x27;envisager quels <em>nouveaux</em> processus, services ou rÃ©sultats pourraient Ãªtre dÃ©bloquÃ©s par l&#x27;automatisation.</p><h3>DÃ©lÃ©guez votre travail Ã  OpenFn, et essayez dÃ¨s aujourd&#x27;hui !</h3><p>Si vous voulez essayer l&#x27;automatisation pour votre organisation, <a href="https://www.openfn.org/signup">inscrivez-vous</a> Ã  OpenFn, gratuitement. Consultez <a href="https://docs.openfn.org/">notre documentation</a> et <a href="http://www.openfn.org">site Web</a> pour savoir comment commencer.</p><p>Vous avez des difficultÃ©s Ã  configurer votre premier Â« travail Â» d&#x27;automatisation ? Envoyez-nous un e-mail Ã  <a href="mailto:admin@openfn.org">admin@openfn.org</a> pour obtenir de l&#x27;aide. Notre Ã©quipe est toujours ravie de vous assister et de vous aider Ã  Ã©valuer le coÃ»t total de possession des solutions d&#x27;automatisation.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Comment les informations sont organisÃ©es... Dans les entreprises]]></title>
            <link>https://docs.openfn.org/fr/articles/2020/06/16/how-information-is-organized</link>
            <guid>Comment les informations sont organisÃ©es... Dans les entreprises</guid>
            <pubDate>Tue, 16 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Les informations de votre organisation ont-elles une structure sous-jacente ? Essayez cet exercice en utilisant des tables et des pattes de corbeau.]]></description>
            <content:encoded><![CDATA[<h4>Les informations de votre organisation ont-elles une structure sous-jacente ? Essayez cet exercice en utilisant des tables et des pattes de corbeau.</h4><p>Cet article a Ã©tÃ© publiÃ© Ã  l&#x27;origine par Taylor Downs, Responsable du produit, sur <a href="https://medium.com/@taylordowns2000">Le blog du Fondateur OpenFn</a> comme Â« Le pouvoir des pattes de corbeau Â».</p><p>On est samedi matin au Cap et je viens de passer une heure Ã  parler de la maniÃ¨re dont une organisation Ã  but non lucratif est organisÃ©e. Je pensais que j&#x27;entrais dans une discussion technique â je mÃ¨ne des discussions sur l&#x27;architecture du systÃ¨me depuis des annÃ©es â mais ce dont nous avons fini par parler c&#x27;est de ce que pense cette ONG.</p><p>Cet engagement concerne principalement la cartographie d&#x27;un systÃ¨me existant basÃ© sur la technologie &quot;people &amp; paper&quot; dÃ©jÃ  existante. Vera Solutions va construire un systÃ¨me pour ce client en utilisant Open Data Kit pour la collecte de donnÃ©es sur le terrain et Salesforce.com pour la gestion du Â« back-end Â». Ãtant donnÃ© qu&#x27;on ne nous demande pas explicitement de contribuer Ã  la reconception des processus au sein de cette organisation, le client Â« nous dit comment les choses sont Â», puis attend de nous la crÃ©ation d&#x27;un modÃ¨le base de donnÃ©es relationnelle pour faciliter les activitÃ©s habituelles, mais d&#x27;une maniÃ¨re plus efficace et numÃ©rique. Cela semble raisonnable.</p><p>Cette organisation exÃ©cute plusieurs programmes axÃ©s sur une multitude d&#x27;objectifs stratÃ©giques. Ils coordonnent diverses activitÃ©s dans leurs communautÃ©s cibles et produisent des rapports sur ces activitÃ©s en fonction de nombreux indicateurs (qui parfois se chevauchent). Ãa vous semble familier ? Alors que nous arrivons Ã  la 3Ã¨me explication de ces programmes, et Ã  la 11Ã¨me itÃ©ration du schÃ©ma du systÃ¨me, il me vient Ã  l&#x27;espritâ¦</p><h3>Dessiner un Â« modÃ¨le d&#x27;objet relationnel Â» semble technique, mais c&#x27;est en fait un exercice de communication claire... et tout le monde peut en bÃ©nÃ©ficier.</h3><p>Lorsque nous, les Ãªtres humains, sommes confrontÃ©s Ã  des problÃ¨mes complexes (comme la gestion d&#x27;un grand nombre de programmes, d&#x27;autres humains, des parties prenantes de la communautÃ©, etc.), nous avons la capacitÃ© de nous tromper nous-mÃªmes en pensant que nous avons maÃ®trisÃ© un systÃ¨me (pour l&#x27;inscription Ã  une clinique, pour l&#x27;Ã©ducation parascolaire, etc.) alors qu&#x27;en fait, nous nous livrons Ã  des manipulations mentales et ne faisons que Â« masquer Â» des sections qui sont secrÃ¨tement non seulement compliquÃ©es, mais totalement incongrues avec d&#x27;autres parties du systÃ¨me. Nous pouvons nous faire croire que notre logique est sensÃ©e parce que nous voulons qu&#x27;elle le soit, alors qu&#x27;en rÃ©alitÃ©, l&#x27;organisation pourrait Ãªtre maintenue en place par de bonnes personnes, et non par de bons processus clairs et dÃ©finis. En apprenant quelques concepts clÃ©s, il est possible pour des personnes non spÃ©cialisÃ©es techniquement d&#x27;articuler clairement leurs pensÃ©es en utilisant des Â« boÃ®tes Â» et des Â« pattes de corbeau Â» et de voir s&#x27;il existe ou non une structure sous-jacente aux informations de leur organisation.</p><h3>En vous forÃ§ant Ã  rÃ©duire des systÃ¨mes complexes Ã  des croquis ne contenant que deux Ã©lÃ©ments, vous serez en mesure de dÃ©tecter des conflits et des ambiguÃ¯tÃ©s importants dans votre faÃ§on de penser votre organisation, qui pourraient sinon vous Ã©chapper.</h3><p>Si vous ne pouvez pas schÃ©matiser la structure des informations dans votre organisation en utilisant des boÃ®tes et des pattes de corbeau, câest un signe que quelque chose na va pas (ou au moins que quelque chose nâest pas facilement Ã©volutifâ¦ nous y reviendrons plus tard !). Laissez-moi vous montrer les outils dans la boÃ®te Ã  outils et ensuite je conclurai en parlant avec poÃ©sie des personnes, des processus et de la technologie.</p><h3>BoÃ®tes et pattes de corbeau</h3><p>![]({{ site.baseurl }}/assets/images/box5.png)</p><p>La boÃ®te est ma prÃ©fÃ©rÃ©e. Elle reprÃ©sente une entitÃ© dans votre systÃ¨me de donnÃ©es. Les entitÃ©s (comme <code>enseignants</code>) ont des attributs (comme <code>name</code>, <code>numÃ©ro de tÃ©lÃ©phone</code>, <code>date de naissance</code>, <code>sexe</code>, etc.) Certaines personnes aiment considÃ©rer les entitÃ©s comme des formes simples. Le Â« Formulaire d&#x27;inscription des enseignants Â» demandera le nom de l&#x27;enseignant, le numÃ©ro de tÃ©lÃ©phone, le sexe, etc. Ce sont les champs de votre entitÃ© d&#x27;enseignant. En soumettant un de ces formulaires, vous ajouterez un nouvel enseignant Ã  votre base de donnÃ©es. Si vous Ãªtes une personne Excel, les attributs sont des colonnes dans votre table <code>enseignants</code>.</p><p>![]({{ site.baseurl }}/assets/images/crowsfeet2.png)</p><p>La patte du corbeau est ma deuxiÃ¨me prÃ©fÃ©rÃ©e. Elle est utilisÃ©e pour afficher les relations entre les entitÃ©s. Nous savons que les enseignants sont liÃ©s aux sessions qu&#x27;ils mÃ¨nent. (Et <code>session</code> pourrait Ãªtre une autre entitÃ©, avec des champs comme <code>date</code>, <code>sujet enseignÃ©</code>, et <code>salle</code>, pour n&#x27;en nommer que quelques-uns.) La patte du corbeau nous permet de spÃ©cifier exactement comment ils sont liÃ©s. Sur cette entitÃ© de session, nous devrons spÃ©cifier le nom (ou l&#x27;identifiant) de l&#x27;enseignant qui l&#x27;a dirigÃ©. Sur l&#x27;entitÃ© de l&#x27;enseignant, cependant, il n&#x27;y aura pas de champ pour spÃ©cifier le nom ou l&#x27;identifiant de la sessionâ¦ parce qu&#x27;un seul enseignant peut diriger de MULTIPLES sessions. Il s&#x27;agit d&#x27;une relation Ã  plusieurs. La patte du corbeau (ce petit truc Ã  trois branches) dÃ©signe les plusieurs. Un enseignant peut avoir beaucoup de sessions. Une session, cependant, ne peut avoir qu&#x27;un enseignant. Voir le diagramme ci-dessous.</p><p>![]({{ site.baseurl }}/assets/images/objectmodel3.png)</p><p>Si nous nous concentrons uniquement sur <code>enseignant</code> et <code>session</code> et que nous pensons Ã  MS Excel, nous pouvons prÃ©voir une table <code>enseignants</code> et une table <code>sessions</code>. Mettons-les sur des feuilles diffÃ©rentes dans le mÃªme fichier. Sur la table <code>enseignants</code> , il n&#x27;y a pas de colonne pour la <code>session</code>, mais sur la table <code>sessions</code> , il y a __ une colonne pour <code>Identifiant enseignant</code>. Nous venons d&#x27;Ã©tablir une relation Ã  plusieurs.</p><p>La prochaine fois, nous parlerons de ce qui se passe avec l&#x27;entitÃ© <code>prÃ©sence</code> ci-dessus. On l&#x27;appelle parfois un Â« objet de jonction Â» ou une Â« table de jointure Â», et c&#x27;est ce que permet Ã  de NOMBREUX Ã©tudiants d&#x27;Ãªtre liÃ©s Ã  de NOMBREUSES sessions. Je reviendrai sur ce sujet la prochaine fois, mais il n&#x27;y a pas de magie ni de dÃ©tails techniques. La maniÃ¨re dont de nombreux Ã©tudiants sont liÃ©s Ã  de nombreuses sessions est Ã  travers ce concept du monde rÃ©el que nous appelons <code>prÃ©sence</code>. La prÃ©sence est ce qui se passe lorsqu&#x27;un Ã©tudiant se prÃ©sente Ã  une session. Il est si important de bien maÃ®triser la langue dans ces discussions, et assurez-vous que vous parlez de concepts du monde rÃ©el.</p><h3>Les modÃ¨les d&#x27;objets relationnels avec beaucoup de termes ambigus ne sont pas Â« techniques Â». Ils sont Â« mauvais Â».</h3><p>Rappelez-vous que lorsque vous commencez Ã  Ã©crire sur du papier. Et vous prenez le temps (et de multiples brouillons) pour que les boÃ®tes et la terminologie soient correctes. Comprendre la modÃ©lisation d&#x27;objet relationnel est un moyen incroyablement puissant d&#x27;organiser une entreprise. Comme je lâai dit prÃ©cÃ©demment, si vous ne pouvez pas le modÃ©liser avec des boÃ®tes et des flÃ¨ches, c&#x27;est un signe que quelque chose pourrait ne pas Ãªtre conceptuellement sensÃ©.</p><h3>Une clause de non-responsabilitÃ© et quelques rÃ©flexions sur la mise Ã  l&#x27;Ã©chelle :</h3><p>Certaines organisations font un travail Ã©tonnant sans de bons systÃ¨mes conceptuels. Ils s&#x27;appuient sur les humains, l&#x27;instinct, l&#x27;improvisation, le flair, et d&#x27;autres choses qui ne sont pas clairement dÃ©finies. Ils pourraient vraiment faire du bon travail. Ils pourraient accomplir leur job. Mais ils doivent Ãªtre bien conscients de leur Ã©tat et l&#x27;affronter de face. Si vous ne pouvez pas systÃ©matiser les processus d&#x27;implÃ©mentation de votre programme, vous devez concentrer vos efforts Ã©normes sur la recherche et le maintien des bonnes personnes.</p><p>Un ami mâa un jour dit que Â« les gens ne sont pas Ã©volutifs Â». Je ne pourrais pas Ãªtre plus d&#x27;accord, et dÃ©fendre ma position antÃ©rieure selon laquelle si la structure des informations de votre organisation ne peut Ãªtre dÃ©finie avec des boÃ®tes et des pattes de corbeau, il peut Ãªtre trÃ¨s difficile pour vous d&#x27;Ã©voluer de maniÃ¨re responsable. Cependant, si vous pouvez crÃ©er un systÃ¨me Â« d&#x27;opÃ©rations de personnes Â» (recrutement, formation, gestion, rÃ©munÃ©ration, RH, etc.) extrÃªmement efficace et de classe mondiale, qui s&#x27;assure que vous avez toujours les bonnes personnes pour rÃ©soudre les problÃ¨mes, vous serez peut-Ãªtre mieux loti que ceux qui exploitent une chaÃ®ne de montage bien dÃ©finie avec des piÃ¨ces interchangeables. HÃ©las, la solution intermÃ©diaire est probablement la meilleure.</p><p>C&#x27;est tout pour l&#x27;instant. Bien plus bientÃ´t.</p><p><em>Besoin d&#x27;aide pour organiser ou mettre Ã  l&#x27;Ã©chelle les informations ou les flux de processus de votre organisation ? Contactez notre Ã©quipe de spÃ©cialistes ICT4D Ã  <a href="mailto:support@openfn.org">support@openfn.org</a>.</em></p>]]></content:encoded>
        </item>
    </channel>
</rss>