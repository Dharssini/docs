(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{234:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return b}));var i=t(3),r=t(7),a=(t(0),t(259)),o={title:"Microservice"},c={unversionedId:"deploy/microservice",id:"deploy/microservice",isDocsHomePage:!1,title:"Microservice",description:"We're still in the process of migrating the docs for devtools over here.",source:"@site/docs/deploy/microservice.md",slug:"/deploy/microservice",permalink:"/documentation/deploy/microservice",editUrl:"https://github.com/openfn/docs/edit/main/docs/deploy/microservice.md",version:"current",sidebar:"docs",previous:{title:"Platform",permalink:"/documentation/deploy/platform"},next:{title:"DIY (engine and core)",permalink:"/documentation/deploy/core"}},p=[{value:"Introduction",id:"introduction",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Docker up and running",id:"docker-up-and-running",children:[]},{value:"Development up and running guide",id:"development-up-and-running-guide",children:[{value:"Up and running inside Docker",id:"up-and-running-inside-docker",children:[]}]},{value:"Project configuration",id:"project-configuration",children:[{value:"First setup using the sample config",id:"first-setup-using-the-sample-config",children:[]},{value:"Setup from your existing OpenFn platform project",id:"setup-from-your-existing-openfn-platform-project",children:[]}]}],l={toc:p};function b(e){var n=e.components,o=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},l,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-important alert alert--info"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"We're still in the process of migrating the docs for devtools over here."),Object(a.b)("p",{parentName:"div"},"In the meantime, check out ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://openfn.github.io/microservice/"}),"https://openfn.github.io/microservice/")))),Object(a.b)("h2",{id:"introduction"},"Introduction"),Object(a.b)("p",null,"Similar to ",Object(a.b)("inlineCode",{parentName:"p"},"platform"),", OpenFn/microservice runs on ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml")," files. This\nmeans that when organizations or governments have an open-source license\nrequirement, all their jobs, credentials, and project configurations can be\nexported from OpenFn's iPaaS and used to create a microservice deployment."),Object(a.b)("p",null,"While this approach doesn't provide the OpenFn platform front-end with its\nvarious project management and configuration features, it's perfect for groups\nwith DevOps experience and 100% compatible with the platform. You can even build\nand test entire projects on ",Object(a.b)("inlineCode",{parentName:"p"},"platform")," and then export the ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml")," file\nto run on your own servers using ",Object(a.b)("inlineCode",{parentName:"p"},"microservice"),"."),Object(a.b)("p",null,"This microservice approach provides flexibility to governments and NGOs, so they\nare never locked-in to OpenFn's SaaS platform offering. At any time, an\norganization can port their existing jobs, triggers, and credentials from\nOpenFn.org to run with our FOSS integration toolkit, using their own\ninfrastructure."),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("p",null,"Familiarity with other elements of OpenFn's open source integration toolkit is\nhelpful when considering the microservice approach."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"https://docs.openfn.org/"}),"OpenFn/docs")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/openfn/engine"}),"OpenFn/engine")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/openFn/core"}),"OpenFn/core")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"https://openfn.github.io/devtools/"}),"OpenFn/devtools"))),Object(a.b)("h2",{id:"docker-up-and-running"},"Docker up and running"),Object(a.b)("p",null,"Assuming you've got an ",Object(a.b)("inlineCode",{parentName:"p"},".env")," and a sample project at ",Object(a.b)("inlineCode",{parentName:"p"},"./sample-project"),"\ndirectory with a ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml")," spec:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-sh"}),"docker-compose up\n")),Object(a.b)("p",null,"You can configure either the compose file or the .env, or run the container\nusing ",Object(a.b)("inlineCode",{parentName:"p"},"docker run"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-sh"}),"docker run -v <path-to-your-project-folder>:/home/microservice/<path-to-your-project-folder> \\\n  --env-file <path-to-your-env-file> \\\n  --network host \\\n  openfn/microservice:v0.3.2\n")),Object(a.b)("h2",{id:"development-up-and-running-guide"},"Development up and running guide"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Clone this repo with ",Object(a.b)("inlineCode",{parentName:"li"},"git clone git@github.com:OpenFn/microservice.git")),Object(a.b)("li",{parentName:"ul"},"Enter the directory with ",Object(a.b)("inlineCode",{parentName:"li"},"cd microservice")),Object(a.b)("li",{parentName:"ul"},"Install dependencies with ",Object(a.b)("inlineCode",{parentName:"li"},"mix setup")),Object(a.b)("li",{parentName:"ul"},"Run the tests with ",Object(a.b)("inlineCode",{parentName:"li"},"mix test")),Object(a.b)("li",{parentName:"ul"},"Make a project directory to hold your project artifacts with\n",Object(a.b)("inlineCode",{parentName:"li"},"mkdir sample-project")),Object(a.b)("li",{parentName:"ul"},"Create a new project specification with\n",Object(a.b)("inlineCode",{parentName:"li"},"cp project.yaml.example ./sample-project/project.yaml")),Object(a.b)("li",{parentName:"ul"},"Create a ",Object(a.b)("inlineCode",{parentName:"li"},".env")," file with ",Object(a.b)("inlineCode",{parentName:"li"},"cp .env.example .env")),Object(a.b)("li",{parentName:"ul"},"Install necessary adaptors via\n",Object(a.b)("inlineCode",{parentName:"li"},"npm install @openfn/language-http --prefix priv/openfn/runtime/node_modules --no-save --no-package-lock --global-style")),Object(a.b)("li",{parentName:"ul"},"Start your microservice server with\n",Object(a.b)("inlineCode",{parentName:"li"},'env $(cat .env | grep -v "#" | xargs ) iex -S mix phx.server'))),Object(a.b)("h3",{id:"up-and-running-inside-docker"},"Up and running inside Docker"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Build a docker image with ",Object(a.b)("inlineCode",{parentName:"li"},"docker build -t openfn/microservice:v0.3.0 .")),Object(a.b)("li",{parentName:"ul"},"Run with the ",Object(a.b)("a",Object(i.a)({parentName:"li"},{href:"#Docker-run"}),"docker run command"))),Object(a.b)("h2",{id:"project-configuration"},"Project configuration"),Object(a.b)("p",null,"You can configure the jobs, triggers, credentials and language packs used in\nyour microservice in the ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml")," config file."),Object(a.b)("h3",{id:"first-setup-using-the-sample-config"},"First setup using the sample config"),Object(a.b)("p",null,"The\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/OpenFn/microservice/blob/main/project.yaml.example"}),"sample project configuration file"),"\ndescribes an example project setup to help you get acquainted with this\nstructure."),Object(a.b)("p",null,"By default microservice is configured with 4 sample jobs:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"job-1")," is triggered when a matching message arrives to the inbox (see\n",Object(a.b)("inlineCode",{parentName:"li"},"trigger-1"),")."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"recurring-job")," is a timed job scheduled to run every minute and is linked to\nthe ",Object(a.b)("inlineCode",{parentName:"li"},"every-minute")," cron trigger."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"flow-job")," and ",Object(a.b)("inlineCode",{parentName:"li"},"catch-job")," run after the ",Object(a.b)("inlineCode",{parentName:"li"},"success")," and ",Object(a.b)("inlineCode",{parentName:"li"},"failure")," of job-1,\nrespectively.")),Object(a.b)("p",null,"All of the jobs are configured with the language pack ",Object(a.b)("inlineCode",{parentName:"p"},"openfn/language-common"),"."),Object(a.b)("p",null,"In the default sample configuration a new message posted to\n",Object(a.b)("inlineCode",{parentName:"p"},"localhost:4000/inbox")," that matches ",Object(a.b)("inlineCode",{parentName:"p"},"trigger-1")," (i.e. the message contains\n",Object(a.b)("inlineCode",{parentName:"p"},'"number":2'),") is greeted with an asynchronous acknowledgement receipt\n(",Object(a.b)("inlineCode",{parentName:"p"},"HTTP 202")," ",Object(a.b)("inlineCode",{parentName:"p"},"Data accepted and processing has begun"),") and will trigger ",Object(a.b)("inlineCode",{parentName:"p"},"job-1"),"\nto run."),Object(a.b)("p",null,"You can try this out with the following snippet:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-sh"}),'curl -X POST -H "Content-Type: application/json" \\\n -d \'{\n  "number":2,\n  "surveyId": 37479\n}\' \\\n http://localhost:4000/inbox\n')),Object(a.b)("p",null,"Posting a message not matching any of the triggers (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"\u201cnumber\u201d:3"),") equally\nprompts an acknowledgement but doesn\u2019t trigger any jobs."),Object(a.b)("p",null,"Example message post for this non-match scenario:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-sh"}),'curl -X POST -H "Content-Type: application/json" \\\n -d \'{\n  "number":3,\n  "surveyId": 37479\n}\' \\\n http://localhost:4000/inbox\n')),Object(a.b)("p",null,"HTTP ",Object(a.b)("inlineCode",{parentName:"p"},"post")," requests made to\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"http://localhost:4000/inbox"}),Object(a.b)("inlineCode",{parentName:"a"},"localhost:4000/inbox"))," will be processed by the\n",Object(a.b)("inlineCode",{parentName:"p"},"Receiver"),", according to the ",Object(a.b)("inlineCode",{parentName:"p"},"credential"),", ",Object(a.b)("inlineCode",{parentName:"p"},"expression"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"adaptor")," defined\nin the project configuration ",Object(a.b)("inlineCode",{parentName:"p"},"YAML")," file."),Object(a.b)("p",null,"Time-based jobs will be run by ",Object(a.b)("inlineCode",{parentName:"p"},"Engine")," according to the ",Object(a.b)("inlineCode",{parentName:"p"},"credential"),",\n",Object(a.b)("inlineCode",{parentName:"p"},"expression"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"adaptor")," defined in your ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml")," file."),Object(a.b)("h3",{id:"setup-from-your-existing-openfn-platform-project"},"Setup from your existing OpenFn platform project"),Object(a.b)("p",null,"If you have a project configured on OpenFn, you have two ways for exporting your\nconfig on the Project Settings page and running your project in microservice."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If you export as ",Object(a.b)("inlineCode",{parentName:"p"},"project.yaml"),", you can download your settings in ",Object(a.b)("inlineCode",{parentName:"p"},"yaml"),"\nformat from your platform project Download page or from a link in the\nauto-generated email sent to your address. You can plug this file into your\nenvironment as set up using the\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"#Development-up-and-running-guide"}),"Development Up and Running Guide"),".")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"If you export as ",Object(a.b)("inlineCode",{parentName:"p"},"microservice.zip"),", you'll get your microservice folder\nready to run with ",Object(a.b)("inlineCode",{parentName:"p"},"docker"),", containing"))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"a ",Object(a.b)("inlineCode",{parentName:"li"},"docker-compose.yaml")," config file"),Object(a.b)("li",{parentName:"ul"},"a project folder containing ",Object(a.b)("inlineCode",{parentName:"li"},"project.yaml")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},".env")," file with the default environment variables for docker"),Object(a.b)("li",{parentName:"ul"},"a ",Object(a.b)("inlineCode",{parentName:"li"},"Readme")," file")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"cd")," into the folder and run the project with ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose up"),". If you don't\nhave the docker image, it will be auto-pulled from ",Object(a.b)("inlineCode",{parentName:"p"},"hub.docker.com"),"."),Object(a.b)("p",null,Object(a.b)("img",{alt:"Export Microservice Zip",src:t(660).default})))}b.isMDXComponent=!0},259:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var i=t(0),r=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),b=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=b(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=b(t),m=i,d=s["".concat(o,".").concat(m)]||s[m]||u[m]||a;return t?r.a.createElement(d,c(c({ref:n},l),{},{components:t})):r.a.createElement(d,c({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},660:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/microservice_zip_export-9ae611d479650754fcb804c827f42f5c.gif"}}]);