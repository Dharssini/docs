(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{203:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(257)),l={title:"Extra tools for adaptors",sidebar_label:"Extra tools for adaptors"},i={unversionedId:"devtools/extra-tools-adaptors",id:"devtools/extra-tools-adaptors",isDocsHomePage:!1,title:"Extra tools for adaptors",description:"The scripts here aid in setting up a development environment for adaptor work,",source:"@site/docs/devtools/extra-tools-adaptors.md",slug:"/devtools/extra-tools-adaptors",permalink:"/documentation/devtools/extra-tools-adaptors",editUrl:"https://github.com/openfn/docs/edit/main/docs/devtools/extra-tools-adaptors.md",version:"current",sidebar_label:"Extra tools for adaptors",sidebar:"docs",previous:{title:"Devtools",permalink:"/documentation/devtools/devtools"},next:{title:"Troubleshooting",permalink:"/documentation/trouble-shooting"}},s=[{value:"Scripts",id:"scripts",children:[{value:"bootstrap",id:"bootstrap",children:[]},{value:"generate-project.js",id:"generate-projectjs",children:[]},{value:"generate-doclets",id:"generate-doclets",children:[]},{value:"analyse-doclets",id:"analyse-doclets",children:[]},{value:"bundle",id:"bundle",children:[]},{value:"bundle-all",id:"bundle-all",children:[]},{value:"upload-release",id:"upload-release",children:[]}]},{value:"Releasing a new adaptor version for production use",id:"releasing-a-new-adaptor-version-for-production-use",children:[]},{value:"Using a new adaptor in an OpenFn/platform instance",id:"using-a-new-adaptor-in-an-openfnplatform-instance",children:[]}],c={toc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The scripts here aid in setting up a development environment for adaptor work,\nand include commands to quickly clone a large number of adaptors, create\ntarballs of adaptors with only production dependencies included, etc."),Object(o.b)("p",null,"For the kitchen sink, run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"./install ssh\n./scripts/bootstrap npm-install\n")),Object(o.b)("h2",{id:"scripts"},"Scripts"),Object(o.b)("p",null,"In order to run the scripts, ensure you have cd'd into the project directory and\nenter ",Object(o.b)("inlineCode",{parentName:"p"},"./scripts/<script-name>")),Object(o.b)("h3",{id:"bootstrap"},"bootstrap"),Object(o.b)("p",null,"Installs all adaptors in ",Object(o.b)("inlineCode",{parentName:"p"},"repos")," file to the ",Object(o.b)("inlineCode",{parentName:"p"},"/adaptors")," directory and prepares\nthe working directory. This needs to be run before running any of the other\nscripts. Pass ",Object(o.b)("inlineCode",{parentName:"p"},"npm-install")," to run npm install for each adaptor also."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"./scripts/bootstrap npm-install")," - to clone, set up hooks and npm install in\neach ",Object(o.b)("inlineCode",{parentName:"p"},"./scripts/bootstrap"),"- to clone and set up hooks in each"),Object(o.b)("h3",{id:"generate-projectjs"},"generate-project.js"),Object(o.b)("h3",{id:"generate-doclets"},"generate-doclets"),Object(o.b)("p",null,"Iterates overs all language pack folder names found in the ",Object(o.b)("inlineCode",{parentName:"p"},"repos")," list and\ncreates a doclet json file in the ",Object(o.b)("inlineCode",{parentName:"p"},"doclets")," directory."),Object(o.b)("h3",{id:"analyse-doclets"},"analyse-doclets"),Object(o.b)("p",null,"Iterates overs all doclets found in ",Object(o.b)("inlineCode",{parentName:"p"},"doclets")," and gives a tree view of the\ndoclet structure using ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/OpenFn/jsdoc-query"}),"jsdoc-query"),"."),Object(o.b)("h3",{id:"bundle"},"bundle"),Object(o.b)("p",null,"Creates a tarball with all production dependencies install for a given module."),Object(o.b)("p",null,"Example: ",Object(o.b)("inlineCode",{parentName:"p"},"./scripts/bundle-node language-common -o builds")," creates a\n",Object(o.b)("inlineCode",{parentName:"p"},"language-common-v1.0.0.tgz")," file in the 'builds' directory."),Object(o.b)("p",null,"Arguments ",Object(o.b)("inlineCode",{parentName:"p"},"./scripts/bundle-node <language> -o <output folder> -d")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"-o")," - Output folder"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"-d")," - Debug"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"--no-ast")," - Don't build an include an AST for OpenFn.org to parse")),Object(o.b)("h3",{id:"bundle-all"},"bundle-all"),Object(o.b)("p",null,"Runs ",Object(o.b)("inlineCode",{parentName:"p"},"bundle")," for all repos found in the list, and outputs them to the ",Object(o.b)("inlineCode",{parentName:"p"},"builds"),"\nfolder."),Object(o.b)("h3",{id:"upload-release"},"upload-release"),Object(o.b)("p",null,"Uploads a tarball to a Github release."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"GH_TOKEN=<oauth-token> \\\n  ./scripts/upload-release -i ./builds/language-common-v0.0.0.tgz\n")),Object(o.b)("p",null,"Infers the repo name and version number from the file."),Object(o.b)("p",null,"Arguments ",Object(o.b)("inlineCode",{parentName:"p"},"./scripts/upload-release -i <file> [-u]")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"i")," - Path to build file to upload"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"u")," - Update a file if already exists (and is a different size)")),Object(o.b)("h2",{id:"releasing-a-new-adaptor-version-for-production-use"},"Releasing a new adaptor version for production use"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Bump the version in ",Object(o.b)("inlineCode",{parentName:"strong"},"package.json"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Run ",Object(o.b)("inlineCode",{parentName:"strong"},"npm install"))," to update ",Object(o.b)("inlineCode",{parentName:"li"},"package-lock.json")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Commit")," and tag your version with ",Object(o.b)("inlineCode",{parentName:"li"},"git tag"),". ",Object(o.b)("em",{parentName:"li"},"N.B., this is handled with a\ngit hook provided by ",Object(o.b)("inlineCode",{parentName:"em"},"bootstrap"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Push the commits and tag to GitHub")," with ",Object(o.b)("inlineCode",{parentName:"li"},"git push && git push --tags")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Create a release")," on the the associated repo on Github, selecting the\nversion tag that was pushed in the last step. Write a title and release notes\nas needed then click 'Publish release'."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Return to the devtools directory")," with ",Object(o.b)("inlineCode",{parentName:"li"},"cd ../../")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Bundle the module")," with\n",Object(o.b)("inlineCode",{parentName:"li"},"./scripts/bundle-node ./adaptors/<language-pack> -o builds")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Verify that the tarball was created")," in ",Object(o.b)("inlineCode",{parentName:"li"},"builds")," with the naming\nconvention of: ",Object(o.b)("inlineCode",{parentName:"li"},"<language-pack>-<version>.tgz")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Upload the build")," using the ",Object(o.b)("inlineCode",{parentName:"li"},"upload-release")," script:\n",Object(o.b)("inlineCode",{parentName:"li"},"./scripts/upload-release -i builds/<file>"))),Object(o.b)("p",null,"If the wrong file was uploaded or you want to replace the build on Github then\nuse the ",Object(o.b)("inlineCode",{parentName:"p"},"-u")," flag which deletes the build from Github if the filesize is\ndifferent."),Object(o.b)("p",null,"Note that this script expects a ",Object(o.b)("inlineCode",{parentName:"p"},"GH_TOKEN")," env variable, which is an OAuth2\ntoken you must get from Github (via the account page)"),Object(o.b)("h2",{id:"using-a-new-adaptor-in-an-openfnplatform-instance"},"Using a new adaptor in an OpenFn/platform instance"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Add your release to the ",Object(o.b)("inlineCode",{parentName:"li"},"scripts/install-lp")," script."),Object(o.b)("li",{parentName:"ol"},"Add the version number to ",Object(o.b)("inlineCode",{parentName:"li"},"priv/adaptors.json"),"."),Object(o.b)("li",{parentName:"ol"},"Add the ",Object(o.b)("inlineCode",{parentName:"li"},"bodySchema")," to ",Object(o.b)("inlineCode",{parentName:"li"},"CredentialView.js"),".")))}p.isMDXComponent=!0},257:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(n),u=a,m=b["".concat(l,".").concat(u)]||b[u]||d[u]||o;return n?r.a.createElement(m,i(i({ref:t},c),{},{components:n})):r.a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);