(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{208:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var o=n(3),a=n(7),r=(n(0),n(259)),i={title:"Devtools",sidebar_label:"Devtools basics"},l={unversionedId:"deploy/devtools",id:"deploy/devtools",isDocsHomePage:!1,title:"Devtools",description:"A set of tools for writing &amp; testing expressions, managing OpenFn projects,",source:"@site/docs/deploy/devtools.md",slug:"/deploy/devtools",permalink:"/documentation/deploy/devtools",editUrl:"https://github.com/openfn/docs/edit/main/docs/deploy/devtools.md",version:"current",sidebar_label:"Devtools basics",sidebar:"docs",previous:{title:"Generic Data Sources",permalink:"/documentation/source-apps"},next:{title:"Extra tools for adaptors",permalink:"/documentation/deploy/extra-tools-adaptors"}},c=[{value:"Up and running",id:"up-and-running",children:[]},{value:"Usage",id:"usage",children:[{value:"Bash usage",id:"bash-usage",children:[]},{value:"The <code>--test</code> option",id:"the---test-option",children:[]}]},{value:"Modifying or developing new adaptors",id:"modifying-or-developing-new-adaptors",children:[]},{value:"Configure an OpenFn project",id:"configure-an-openfn-project",children:[{value:"Pre-Requisites",id:"pre-requisites",children:[]}]}],p={toc:c};function s(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A set of tools for writing ","&"," testing expressions, managing OpenFn projects,\nand developing new adaptors (language-packages)."),Object(r.b)("h2",{id:"up-and-running"},"Up and running"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Make sure you've got ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://git-scm.com/downloads"}),"git")," (maybe GitBash for\nWindows?)"),Object(r.b)("li",{parentName:"ol"},"And ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://nodejs.org/en/download/"}),"Node.js")," (version 6.11 or greater)"),Object(r.b)("li",{parentName:"ol"},"Run ",Object(r.b)("inlineCode",{parentName:"li"},"git clone git@github.com:OpenFn/devtools.git")," for SSH or\n",Object(r.b)("inlineCode",{parentName:"li"},"git clone https://github.com/OpenFn/devtools.git")),Object(r.b)("li",{parentName:"ol"},"Run ",Object(r.b)("inlineCode",{parentName:"li"},"cd devtools")),Object(r.b)("li",{parentName:"ol"},"Run ",Object(r.b)("inlineCode",{parentName:"li"},"./install.sh ssh")," or ",Object(r.b)("inlineCode",{parentName:"li"},"./install.sh https")," to install core,\nlanguage-common, and language-http")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},'Note: If you get a "permission denied" message when running ',Object(r.b)("inlineCode",{parentName:"em"},"./install.sh"),", try\n",Object(r.b)("inlineCode",{parentName:"em"},"run chmod +x ./install.sh ")," then retry the install command.")),Object(r.b)("p",null,"To install specific adaptors, run\n",Object(r.b)("inlineCode",{parentName:"p"},"./install.sh ${ssh || https} language-${name}")),Object(r.b)("p",null,"You can run core from anywhere by using ",Object(r.b)("inlineCode",{parentName:"p"},"npm install -g @openfn/core")," for a\nglobal install."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("p",null,"Execute takes:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"-l [language-package].Adaptor"),": The adaptor being used"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"-e [expression.js]:")," The expression being tested"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"-s [state.json]"),": The message ",Object(r.b)("inlineCode",{parentName:"li"},"data: {...}")," and credential\n",Object(r.b)("inlineCode",{parentName:"li"},"configuration: {...}")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"-o [output.json]"),": The file to which the output will be written")),Object(r.b)("h3",{id:"bash-usage"},"Bash usage"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"./core/bin/core execute execute -l ./adaptors/language-[XXX].Adaptor -s ./tmp/state.json -o ./tmp/output.json -e ./tmp/expression.js")),Object(r.b)("h3",{id:"the---test-option"},"The ",Object(r.b)("inlineCode",{parentName:"h3"},"--test")," option"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"./core/bin/core execute -l ./adaptors/language-[XXX].Adaptor -s ./tmp/state.json -o ./tmp/output.json -e ./tmp/expression.js --test")),Object(r.b)("p",null,"This intercepts all HTTP requests and displays the request information for\ndebugging."),Object(r.b)("h4",{id:"fakeadaptor"},Object(r.b)("inlineCode",{parentName:"h4"},".FakeAdaptor")),Object(r.b)("p",null,"Adaptors may provide dummy modules for testing. ",Object(r.b)("inlineCode",{parentName:"p"},"language-salesforce")," has a\nbuilt-in ",Object(r.b)("inlineCode",{parentName:"p"},".FakeAdaptor")," which allows a user to test expressions on data without\nsending them to a real Salesforce server."),Object(r.b)("p",null,"Instead of using ",Object(r.b)("inlineCode",{parentName:"p"},"-l ./language-salesforce.Adaptor"),", use\n",Object(r.b)("inlineCode",{parentName:"p"},"-l./language-salesforce.FakeAdaptor")," to test expressions offline:\n",Object(r.b)("inlineCode",{parentName:"p"},"./core/bin/core execute -l ./language-salesforce.FakeAdaptor -s ./tmp/state.json -o ./tmp/output.json -e ./tmp/expression.js")),Object(r.b)("h4",{id:"offline-testing-for-other-language-packages"},"Offline testing for other ",Object(r.b)("inlineCode",{parentName:"h4"},"language-packages")),Object(r.b)("p",null,"For most standard language packages which make use of HTTP requests, you can add\n",Object(r.b)("inlineCode",{parentName:"p"},"--test")," to the execute command to intercept all HTTP requests."),Object(r.b)("h2",{id:"modifying-or-developing-new-adaptors"},"Modifying or developing new adaptors"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"wip")),Object(r.b)("h2",{id:"configure-an-openfn-project"},"Configure an OpenFn project"),Object(r.b)("p",null,"You can use YAML project configuration files to define projects both on the\n",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://docs.openfn.org/documentation/deploy/platform"}),"OpenFn platform")," and in\n",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://openfn.github.io/microservice/readme.html#content"}),"OpenFn microservice"),".\nRunning ",Object(r.b)("inlineCode",{parentName:"p"},"./scripts/generate-project.js")," helps you build a project config YAML\ninteractively, adding your triggers, credentials and jobs to the config. You can\nread more about the config file\n",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://openfn.github.io/microservice/readme.html#sample-configuration"}),"here")),Object(r.b)("p",null,"If you choose ",Object(r.b)("inlineCode",{parentName:"p"},"monolith")," mode, all your job code will be included in the YAML.\nIn ",Object(r.b)("inlineCode",{parentName:"p"},"URI")," mode, you\u2019ll get a config file with URI-s to your defined jobs."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Generate Project",src:n(429).default})),Object(r.b)("h3",{id:"pre-requisites"},"Pre-Requisites"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"http://www.gnu.org/software/make/"}),"Make")," is used so that our modern (es9)\nJavaScript can be run on older Node runtimes.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"wip")))))}s.isMDXComponent=!0},259:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),u=o,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||r;return n?a.a.createElement(m,l(l({ref:t},p),{},{components:n})):a.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},429:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/generate-project-40444c4a75e8e0b63a1cbe1e02d7f49d.gif"}}]);